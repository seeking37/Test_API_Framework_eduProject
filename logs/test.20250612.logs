INFO - 2025-06-12 15:47:52,614 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 15:47:52,615 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 15:47:52,615 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:47:52,615 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 15:47:52,615 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 15:47:52,615 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:47:52,617 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 15:47:55,131 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f1c7cfcf-8424-47b7-a3e6-3775fe427bf1","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 15:47:55,133 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:47:55,134 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:47:55,134 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:47:55,134 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:47:55,134 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:47:55,136 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:47:55,137 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:47:55,137 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:47:55,137 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 15:47:55,137 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:47:55,137 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:47:55,137 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
ERROR - 2025-06-12 15:47:57,171 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:47:57,409 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:47:57,410 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:47:57,412 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
ERROR - 2025-06-12 15:47:59,455 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:47:59,528 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:47:59,529 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:47:59,530 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:47:59,530 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:47:59,531 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:47:59,531 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 15:47:59,531 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:47:59,531 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:47:59,531 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5, 'kkk': None}}
ERROR - 2025-06-12 15:48:01,570 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:48:01,632 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:48:01,633 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:48:01,635 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:48:01,636 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:48:01,636 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:48:01,636 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.页码超出范围
INFO - 2025-06-12 15:48:01,636 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:48:01,636 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:48:01,636 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
ERROR - 2025-06-12 15:48:03,687 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:48:03,754 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:48:03,756 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:48:03,757 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:48:03,758 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:48:03,758 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:48:03,758 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.每页显示0条数据
INFO - 2025-06-12 15:48:03,758 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:48:03,758 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:48:03,758 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 0}}
ERROR - 2025-06-12 15:48:05,802 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:48:05,867 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:48:05,868 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:48:05,870 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
ERROR - 2025-06-12 15:48:07,921 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:48:07,984 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:48:07,985 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:48:07,987 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:48:07,987 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:48:07,988 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:48:07,988 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 15:48:07,988 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f1c7cfcf-8424-47b7-a3e6-3775fe427bf1'}
INFO - 2025-06-12 15:48:07,988 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:48:07,988 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
ERROR - 2025-06-12 15:48:10,026 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 15:48:10,119 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,084 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 15:51:58,149 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"3e682d31-2b70-40fd-a1fe-9c1d5dec27bf","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 15:51:58,151 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:51:58,151 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:51:58,151 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:51:58,151 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:51:58,151 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,153 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,154 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,154 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,154 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 15:51:58,154 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,154 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,154 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 15:51:58,179 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,179 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,179 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 15:51:58,179 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,379 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,380 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,382 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 15:51:58,409 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,409 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,409 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
ERROR - 2025-06-12 15:51:58,409 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,435 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,437 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,438 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,439 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,439 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,439 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 15:51:58,439 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,439 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,439 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5, 'kkk': None}}
INFO - 2025-06-12 15:51:58,455 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,455 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,456 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
ERROR - 2025-06-12 15:51:58,456 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,482 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,483 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.页码超出范围
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,486 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 15:51:58,501 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,501 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,501 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
ERROR - 2025-06-12 15:51:58,502 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,528 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,529 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.每页显示0条数据
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,532 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 0}}
INFO - 2025-06-12 15:51:58,548 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,548 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,548 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
ERROR - 2025-06-12 15:51:58,548 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,578 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,579 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,581 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,582 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,582 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,582 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 15:51:58,582 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,582 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,582 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 15:51:58,609 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,610 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,610 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
ERROR - 2025-06-12 15:51:58,610 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,636 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:51:58,637 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e682d31-2b70-40fd-a1fe-9c1d5dec27bf'}
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:51:58,640 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 15:51:58,655 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:51:58,655 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:51:58,656 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
ERROR - 2025-06-12 15:51:58,656 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:51:58,682 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:18,645 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 15:56:18,646 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 15:56:18,646 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:18,646 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 15:56:18,646 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 15:56:18,646 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:18,646 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 15:56:18,724 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"48f71171-f653-4c35-8737-14933d6b4e3f","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 15:56:18,725 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:56:18,725 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:18,725 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:18,725 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:18,726 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '48f71171-f653-4c35-8737-14933d6b4e3f'}
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:18,728 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 15:56:19,322 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:21,680 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 15:56:21,680 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 15:56:21,680 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:21,680 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 15:56:21,680 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 15:56:21,680 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:21,681 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 15:56:21,738 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"481f1f8d-a013-4187-b626-48ebde5debab","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 15:56:21,739 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:56:21,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:21,740 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:21,740 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:21,740 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:21,743 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 15:56:21,804 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 15:56:21,804 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 15:56:21,805 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:21,805 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:21,805 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 15:56:21,805 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 15:56:21,806 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 15:56:21,806 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 15:56:21,806 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:21,811 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:21,811 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:21,814 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 15:56:21,857 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 15:56:21,858 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 15:56:21,858 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:21,858 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:21,858 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 15:56:21,858 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 15:56:21,858 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:21,859 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:21,864 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:21,867 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5, 'kkk': None}}
INFO - 2025-06-12 15:56:21,909 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 15:56:21,909 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 15:56:21,909 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:21,910 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:21,910 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 15:56:21,910 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 15:56:21,910 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:21,913 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:21,914 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:21,915 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:21,915 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:21,915 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:21,915 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.页码超出范围
INFO - 2025-06-12 15:56:21,916 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:21,916 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:21,916 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 15:56:22,015 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":999,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":12,"pages":2,"list":[],"firstPage":1,"prePage":998,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":false,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 15:56:22,015 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:56:22,016 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:22,016 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:22,016 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:22,017 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:22,018 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.每页显示0条数据
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:22,021 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 0}}
INFO - 2025-06-12 15:56:22,058 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":0,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":12,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 15:56:22,058 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:56:22,058 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:22,058 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:22,058 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:22,059 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:22,060 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:22,064 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:22,064 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:22,064 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:22,064 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 15:56:22,064 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:22,065 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:22,065 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 15:56:22,124 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 15:56:22,125 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 15:56:22,125 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:22,125 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:22,126 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 15:56:22,126 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:22,128 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:56:22,129 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '481f1f8d-a013-4187-b626-48ebde5debab'}
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:56:22,132 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 15:56:22,178 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 15:56:22,179 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 15:56:22,179 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:56:22,180 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:56:22,180 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 15:56:22,180 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:56:22,184 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 15:59:30,967 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 15:59:30,967 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 15:59:30,967 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:59:30,968 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 15:59:30,968 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 15:59:30,968 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:59:30,968 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 15:59:31,043 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"de90a129-16ed-4f94-b7de-6c9fc73238b8","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 15:59:31,047 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 15:59:31,047 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 15:59:31,047 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 15:59:31,047 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 15:59:31,047 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 15:59:31,049 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 15:59:31,049 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 15:59:31,050 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 15:59:31,050 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 15:59:31,050 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'de90a129-16ed-4f94-b7de-6c9fc73238b8'}
INFO - 2025-06-12 15:59:31,050 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 15:59:31,050 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 15:59:31,078 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 15:59:31,079 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 15:59:31,079 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 15:59:31,079 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 15:59:31,281 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 16:10:07,650 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 16:10:07,652 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 16:10:07,652 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:10:07,653 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 16:10:07,653 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 16:10:07,653 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:10:07,653 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 16:10:11,677 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a733dc83-a2ba-4479-a4fc-bc77f706a00a","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 16:10:11,683 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 16:10:11,683 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 16:10:11,684 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 16:10:11,684 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 16:10:11,685 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 16:10:11,694 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 16:10:11,695 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 16:10:11,695 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:10:11,695 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 16:10:11,695 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a733dc83-a2ba-4479-a4fc-bc77f706a00a'}
INFO - 2025-06-12 16:10:11,695 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:10:11,696 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 16:10:11,708 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 16:10:11,710 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 16:10:11,711 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 16:10:11,711 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 16:10:12,192 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
ERROR - 2025-06-12 16:10:56,449 - readyaml.py:30 -[readyaml:get_testcase_yaml] - [./testcase/Single interface/addUser.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-06-12 16:10:56,449 - readyaml.py:30 -[readyaml:get_testcase_yaml] - [./testcase/Single interface/updateUser.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-06-12 16:10:56,449 - readyaml.py:30 -[readyaml:get_testcase_yaml] - [./testcase/Single interface/deleteUser.yaml]文件未找到，请检查路径是否正确
ERROR - 2025-06-12 16:10:56,449 - readyaml.py:30 -[readyaml:get_testcase_yaml] - [./testcase/Single interface/queryUser.yaml]文件未找到，请检查路径是否正确
INFO - 2025-06-12 16:12:22,696 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 16:12:22,696 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 16:12:22,696 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:12:22,696 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 16:12:22,696 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 16:12:22,696 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:12:22,697 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 16:12:22,757 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"030b7468-1c12-4386-b6ed-50ce66ab9cd5","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 16:12:22,758 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 16:12:22,759 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 16:12:22,759 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 16:12:22,759 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 16:12:22,759 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 16:12:22,761 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 16:12:22,761 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 16:12:22,762 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:12:22,762 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 16:12:22,762 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '030b7468-1c12-4386-b6ed-50ce66ab9cd5'}
INFO - 2025-06-12 16:12:22,762 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:12:22,762 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 16:12:22,781 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 16:12:22,781 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 16:12:22,782 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 16:12:22,782 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 16:12:22,960 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 16:14:06,801 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 16:14:06,802 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 16:14:06,802 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:14:06,802 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 16:14:06,802 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 16:14:06,802 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:14:06,804 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 16:14:06,892 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"6bb8add0-784f-4d2f-8bbc-0212a400f73e","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 16:14:06,893 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 16:14:06,893 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 16:14:06,894 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 16:14:06,894 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 16:14:06,894 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '6bb8add0-784f-4d2f-8bbc-0212a400f73e'}
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:14:06,897 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 16:14:06,923 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 16:14:06,923 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 16:14:06,923 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 16:14:06,923 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 16:14:07,111 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 16:15:44,657 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 16:15:44,657 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 16:15:44,658 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:15:44,658 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 16:15:44,658 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 16:15:44,658 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:15:44,659 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 16:15:44,711 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"b07f830a-b7ec-4d01-ab5f-d0873e184937","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 16:15:44,713 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 16:15:44,713 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 16:15:44,713 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 16:15:44,713 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 16:15:44,714 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b07f830a-b7ec-4d01-ab5f-d0873e184937'}
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:15:44,716 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 16:15:44,737 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 16:15:44,737 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 16:15:44,737 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 16:15:44,737 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 16:15:44,939 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 16:24:12,189 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 16:24:12,190 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 16:24:12,190 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:24:12,190 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 16:24:12,190 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 16:24:12,190 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:24:12,191 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 16:24:12,243 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"89e5d474-c28c-4424-9bd4-92d085949319","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 16:24:12,244 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 16:24:12,245 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 16:24:12,245 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 16:24:12,245 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 16:24:12,245 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 16:24:12,247 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 16:24:12,247 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 16:24:12,248 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 16:24:12,248 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 16:24:12,248 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '89e5d474-c28c-4424-9bd4-92d085949319'}
INFO - 2025-06-12 16:24:12,248 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 16:24:12,248 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 16:24:12,251 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 16:24:12,251 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 16:24:12,251 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 16:24:12,251 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 16:24:12,437 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:00:19,359 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:00:19,360 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:00:19,360 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:00:19,360 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:00:19,360 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:00:19,360 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:00:19,361 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:00:20,096 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"e87a99f4-f4a1-4ace-bc54-8257b9f6d5ef","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:00:20,098 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:00:20,098 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:00:20,098 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:00:20,098 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:00:20,099 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:00:20,101 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:00:20,101 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:00:20,102 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:00:20,102 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:00:20,102 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'e87a99f4-f4a1-4ace-bc54-8257b9f6d5ef'}
INFO - 2025-06-12 17:00:20,102 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:00:20,102 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:00:20,115 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 17:00:20,115 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 17:00:20,115 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 17:00:20,116 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:00:20,303 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:07:44,539 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:07:44,539 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:07:44,539 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:07:44,539 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:07:44,539 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:07:44,539 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:07:44,541 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:07:44,621 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f0ec9a64-fd48-4ba2-89ba-09cdff094f54","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:07:44,623 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:07:44,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:07:44,623 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:07:44,623 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:07:44,624 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:07:44,626 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:07:44,626 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:07:44,626 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:07:44,626 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:07:44,627 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f0ec9a64-fd48-4ba2-89ba-09cdff094f54'}
INFO - 2025-06-12 17:07:44,627 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:07:44,627 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:07:44,648 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 17:07:44,648 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 17:07:44,649 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 17:07:44,649 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:07:44,819 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:11:24,515 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:11:24,516 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:11:24,516 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:11:24,516 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:11:24,516 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:11:24,516 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:11:24,517 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:11:24,583 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"6e27fa7e-8788-4bf7-be8e-0904db25f711","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:11:24,585 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:11:24,585 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:11:24,585 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:11:24,585 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:11:24,585 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:11:24,588 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:11:24,588 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:11:24,588 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:11:24,588 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:11:24,588 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '6e27fa7e-8788-4bf7-be8e-0904db25f711'}
INFO - 2025-06-12 17:11:24,589 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:11:24,589 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:11:24,606 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 17:11:24,606 - apiutil.py:163 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 17:11:24,607 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
ERROR - 2025-06-12 17:11:24,607 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:11:24,778 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:12:01,340 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:12:01,340 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:12:01,340 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:12:01,340 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:12:01,340 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:12:01,340 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:12:01,342 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:12:01,387 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"223b1cb8-641f-4ead-a967-48a72d38442a","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:12:01,389 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:12:01,390 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:12:01,390 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:12:01,390 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:12:01,390 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '223b1cb8-641f-4ead-a967-48a72d38442a'}
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:12:01,393 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:12:01,396 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 17:12:01,397 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 17:12:01,397 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:12:01,397 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:12:01,397 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 17:12:01,398 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 17:12:01,398 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 17:12:01,398 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 17:12:01,398 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:12:01,403 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:34,890 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:20:34,890 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:20:34,890 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:20:34,890 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:20:34,891 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:20:34,891 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:34,892 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:20:34,950 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"7f6344a1-2ae4-41b5-bd43-7a1fb21f1169","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:20:34,951 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:20:34,951 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:34,951 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:34,951 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:34,952 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:34,955 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'use_mock': True, 'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:20:35,115 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:35,116 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:35,118 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:35,118 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:35,118 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:35,118 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 17:20:35,118 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:35,118 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:35,119 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 17:20:35,313 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:20:35,313 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 17:20:35,313 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:35,313 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:35,313 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:20:35,314 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 17:20:35,314 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:35,315 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:35,318 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:35,320 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5, 'kkk': None}}
INFO - 2025-06-12 17:20:35,353 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 17:20:35,353 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 17:20:35,354 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:35,354 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:35,354 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:20:35,354 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:20:35,354 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:35,356 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:35,357 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:35,358 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:35,359 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:35,359 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:35,359 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.页码超出范围
INFO - 2025-06-12 17:20:35,359 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:35,359 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:35,359 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:20:35,397 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":999,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":12,"pages":2,"list":[],"firstPage":1,"prePage":998,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":false,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:20:35,397 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:20:35,397 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:35,397 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:35,397 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:35,398 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:35,399 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:35,402 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:35,402 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:35,402 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:35,403 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.每页显示0条数据
INFO - 2025-06-12 17:20:35,403 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:35,403 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:35,403 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 0}}
INFO - 2025-06-12 17:20:35,412 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":0,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":12,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:20:35,412 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:20:35,412 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:35,412 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:35,412 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:35,413 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:35,414 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:35,419 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:35,419 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:35,419 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:35,419 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 17:20:35,419 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:35,419 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:35,420 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:20:35,438 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:20:35,439 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:20:35,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:35,439 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:35,440 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:20:35,440 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:35,446 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:20:35,447 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7f6344a1-2ae4-41b5-bd43-7a1fb21f1169'}
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:20:35,449 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:20:35,474 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:20:35,475 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:20:35,475 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:20:35,475 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:20:35,475 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:20:35,475 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:20:35,481 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,563 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:25:50,563 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:25:50,563 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:25:50,564 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:25:50,564 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:25:50,564 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,564 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:25:50,605 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"670ac262-d6e1-4d27-8ee3-49d8aea43d2e","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:25:50,606 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:25:50,607 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,607 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,607 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,607 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,610 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,610 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,610 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,610 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:25:50,610 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,611 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,611 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:25:50,631 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 17:25:50,631 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 17:25:50,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,632 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,632 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 17:25:50,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 17:25:50,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 17:25:50,633 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 17:25:50,633 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,639 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,639 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,641 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,641 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,641 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,642 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 17:25:50,642 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,642 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,642 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 17:25:50,684 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:25:50,685 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 17:25:50,685 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,685 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,685 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:25:50,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 17:25:50,686 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,687 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,690 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,692 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,692 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,692 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,692 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 17:25:50,693 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,693 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,693 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5, 'kkk': None}}
INFO - 2025-06-12 17:25:50,738 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 17:25:50,738 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 17:25:50,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,739 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,739 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:25:50,739 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:25:50,739 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,744 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,746 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.页码超出范围
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,749 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:25:50,782 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":999,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":12,"pages":2,"list":[],"firstPage":1,"prePage":998,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":false,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:25:50,782 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:25:50,782 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,783 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,783 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,784 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,786 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.每页显示0条数据
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,791 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 0}}
INFO - 2025-06-12 17:25:50,802 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":0,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":12,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:25:50,802 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:25:50,802 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,802 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,802 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,803 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,804 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,808 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:25:50,824 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:25:50,824 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:25:50,825 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,825 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,826 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:25:50,826 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,829 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:25:50,831 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:25:50,833 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:25:50,833 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:25:50,834 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:25:50,834 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 17:25:50,834 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '670ac262-d6e1-4d27-8ee3-49d8aea43d2e'}
INFO - 2025-06-12 17:25:50,834 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:25:50,834 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:25:50,863 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:25:50,863 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:25:50,864 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:25:50,864 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:25:50,864 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:25:50,865 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:25:50,870 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,274 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:34:29,274 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:34:29,274 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:34:29,275 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:34:29,275 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:34:29,275 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:34:29,275 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:34:29,340 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"fed84163-ae4d-4313-878a-257a0b72a812","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:34:29,341 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:34:29,341 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:34:29,341 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:34:29,341 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:34:29,342 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,344 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:34:29,344 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:34:29,344 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:34:29,344 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:34:29,344 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fed84163-ae4d-4313-878a-257a0b72a812'}
INFO - 2025-06-12 17:34:29,345 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:34:29,345 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:34:29,381 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:34:29,382 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 17:34:29,383 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:34:29,383 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:34:29,383 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 17:34:29,384 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 17:34:29,385 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 17:34:29,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 17:34:29,386 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:34:29,391 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,393 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,395 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:34:29,396 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:34:29,396 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:34:29,396 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 17:34:29,396 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fed84163-ae4d-4313-878a-257a0b72a812'}
INFO - 2025-06-12 17:34:29,396 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:34:29,396 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 17:34:29,445 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:34:29,446 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 17:34:29,446 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:34:29,447 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:34:29,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:34:29,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 17:34:29,447 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:34:29,449 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,454 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,457 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:34:29,457 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:34:29,457 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:34:29,457 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 17:34:29,457 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fed84163-ae4d-4313-878a-257a0b72a812'}
INFO - 2025-06-12 17:34:29,458 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:34:29,458 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 17:34:29,503 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 17:34:29,503 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 17:34:29,504 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:34:29,504 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:34:29,504 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:34:29,504 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:34:29,504 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:34:29,509 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,511 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,657 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,658 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,665 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,666 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,676 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,677 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,684 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,685 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,692 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,693 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,700 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:34:29,701 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:34:29,708 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,235 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:39:49,235 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:39:49,235 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:39:49,235 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:39:49,236 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:39:49,236 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,238 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:39:49,253 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"32ec59f5-1fe4-4056-969d-a7e74ee1b485","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:39:49,254 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:39:49,254 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:39:49,254 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:39:49,254 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:39:49,255 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,257 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,257 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,257 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,257 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:39:49,257 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,257 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,258 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:39:49,300 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:39:49,300 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 17:39:49,300 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:39:49,301 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:39:49,301 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 17:39:49,301 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 17:39:49,301 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 17:39:49,301 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 17:39:49,301 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:39:49,307 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,308 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,310 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,311 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,311 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,311 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 17:39:49,311 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,311 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,311 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 17:39:49,337 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:39:49,337 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 17:39:49,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:39:49,338 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:39:49,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:39:49,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 17:39:49,338 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:39:49,339 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,343 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,345 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 17:39:49,359 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 17:39:49,359 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 17:39:49,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:39:49,359 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:39:49,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:39:49,360 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:39:49,360 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:39:49,362 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,363 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,364 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,365 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,365 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,365 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:39:49,365 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,365 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,365 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:39:49,367 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:39:49,368 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:39:49,368 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 17:39:49,368 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:39:49,368 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:39:49,368 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:39:49,526 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,527 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,529 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,529 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,529 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,529 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 17:39:49,529 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,530 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,530 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:39:49,532 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:39:49,532 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:39:49,533 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 17:39:49,533 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:39:49,533 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:39:49,533 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:39:49,540 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,541 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,543 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 17:39:49,551 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "aI07kXogfRxmYNanifDW";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1704849944448">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1704849944880">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1704849945312">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1704849945024">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1704849945600">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1704849945744">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1704849945888">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">122</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;请求参数不能为空&#39;,</pre>
<pre class="line before"><span class="ws">        </span>})</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 获取分页参数</pre>
<pre class="line current"><span class="ws">    </span>current_page = res_json.get(&#39;currentPage&#39;)
<span class="ws">    </span>               ^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>page_size = res_json.get(&#39;pageSize&#39;)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 检查必填参数currentPage</pre>
<pre class="line after"><span class="ws">    </span>if current_page is None:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 122, in find_all_users
    current_page = res_json.get(&#39;currentPage&#39;)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 122, in find_all_users
    current_page = res_json.get('currentPage')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'get'


-->

ERROR - 2025-06-12 17:39:49,551 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&...
INFO - 2025-06-12 17:39:49,551 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 17:39:49,551 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:39:49,576 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,577 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,578 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,579 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,579 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,579 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 17:39:49,579 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,579 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,579 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 17:39:49,581 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:39:49,581 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:39:49,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 17:39:49,581 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:39:49,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:39:49,581 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:39:49,589 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,590 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,592 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 17:39:49,618 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:39:49,618 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:39:49,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 17:39:49,618 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:39:49,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:39:49,619 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:39:49,630 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,631 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,633 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 17:39:49,635 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:39:49,635 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:39:49,636 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 17:39:49,636 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:39:49,636 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:39:49,636 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:39:49,644 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:39:49,645 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '32ec59f5-1fe4-4056-969d-a7e74ee1b485'}
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:39:49,647 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:39:49,665 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:39:49,665 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:39:49,665 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
ERROR - 2025-06-12 17:39:49,665 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:39:49,665 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:39:49,665 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:39:49,673 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:41:58,923 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:41:58,924 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:41:58,924 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:41:58,925 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:41:58,925 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:41:58,925 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:41:58,925 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:41:58,987 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"2ef88952-e98a-416d-983c-72718283e0fd","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:41:58,992 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:41:58,993 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:41:58,993 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:41:58,993 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:41:58,994 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:41:58,998 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:41:58,998 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:41:58,998 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:41:58,999 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:41:58,999 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2ef88952-e98a-416d-983c-72718283e0fd'}
INFO - 2025-06-12 17:41:58,999 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:41:58,999 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:41:59,018 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:41:59,019 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:41:59,019 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 17:43:27,026 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:43:27,026 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:43:27,027 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:43:27,226 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:43:27,230 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2ef88952-e98a-416d-983c-72718283e0fd'}
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:43:27,234 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:43:27,264 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:43:27,264 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:43:27,264 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 17:43:29,828 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:43:29,829 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:43:29,829 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:43:29,860 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:43:29,864 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:43:29,868 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:43:29,868 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:43:29,868 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:43:29,868 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 17:43:29,869 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2ef88952-e98a-416d-983c-72718283e0fd'}
INFO - 2025-06-12 17:43:29,869 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:43:29,869 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 17:43:29,892 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "aI07kXogfRxmYNanifDW";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1704850969584">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1704850970304">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1704850969728">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1704850970016">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1704850970448">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1704850970736">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1704850969872">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">122</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;请求参数不能为空&#39;,</pre>
<pre class="line before"><span class="ws">        </span>})</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 获取分页参数</pre>
<pre class="line current"><span class="ws">    </span>current_page = res_json.get(&#39;currentPage&#39;)
<span class="ws">    </span>               ^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>page_size = res_json.get(&#39;pageSize&#39;)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 检查必填参数currentPage</pre>
<pre class="line after"><span class="ws">    </span>if current_page is None:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 122, in find_all_users
    current_page = res_json.get(&#39;currentPage&#39;)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 122, in find_all_users
    current_page = res_json.get('currentPage')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'get'


-->

ERROR - 2025-06-12 17:43:29,893 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&...
INFO - 2025-06-12 17:43:29,893 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 17:43:29,893 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:43:29,973 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:43:29,976 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:43:29,980 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:43:29,980 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:43:29,980 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:43:29,980 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 17:43:29,980 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2ef88952-e98a-416d-983c-72718283e0fd'}
INFO - 2025-06-12 17:43:29,981 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:43:29,981 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 17:43:29,985 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:43:29,985 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:43:29,985 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 17:43:40,981 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:43:50,317 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:43:50,317 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:43:50,317 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:43:50,317 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:43:50,318 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:43:50,318 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:43:50,318 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:43:50,337 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"7af0779d-1ec2-480e-8677-789ffd16c779","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:44:24,660 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:44:24,661 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:44:24,662 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:44:24,662 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:44:24,663 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:44:24,675 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:44:24,675 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:44:24,675 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:44:24,676 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:44:24,676 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7af0779d-1ec2-480e-8677-789ffd16c779'}
INFO - 2025-06-12 17:44:24,676 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:44:24,677 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:44:24,695 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:45:34,855 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:19,912 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:47:19,913 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:47:19,913 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:47:19,913 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:47:19,913 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:47:19,913 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:19,913 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:47:19,950 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"d886e486-91d5-4920-8ceb-95b541052965","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:47:19,951 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:47:19,951 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:47:19,951 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:47:19,951 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:47:19,952 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:19,954 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:47:19,956 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:47:19,957 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:47:19,957 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 17:47:19,957 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:47:19,957 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:47:19,957 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:47:20,113 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:20,114 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:20,116 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:47:20,118 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:47:20,118 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:47:20,118 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 17:47:20,118 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:47:20,118 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:47:20,119 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:47:20,127 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:20,128 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:20,130 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 17:47:20,158 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "aI07kXogfRxmYNanifDW";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1704850971024">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1704850970880">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1704850971312">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1704850971600">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1704850970592">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1704850971888">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1704850972032">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">122</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;请求参数不能为空&#39;,</pre>
<pre class="line before"><span class="ws">        </span>})</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 获取分页参数</pre>
<pre class="line current"><span class="ws">    </span>current_page = res_json.get(&#39;currentPage&#39;)
<span class="ws">    </span>               ^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>page_size = res_json.get(&#39;pageSize&#39;)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 检查必填参数currentPage</pre>
<pre class="line after"><span class="ws">    </span>if current_page is None:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 122, in find_all_users
    current_page = res_json.get(&#39;currentPage&#39;)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 122, in find_all_users
    current_page = res_json.get('currentPage')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'get'


-->

ERROR - 2025-06-12 17:47:20,158 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&...
INFO - 2025-06-12 17:47:20,158 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 17:47:20,158 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:47:20,191 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:20,192 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:20,194 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 17:47:20,217 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:47:20,217 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:47:20,218 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 17:47:20,218 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:47:20,218 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:47:20,218 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:47:20,226 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:20,227 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:20,228 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:20,229 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:20,229 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:20,229 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 17:47:20,229 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:20,229 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:20,229 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 17:47:20,248 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:47:20,248 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:47:20,248 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 17:47:20,248 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:47:20,248 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:47:20,248 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:47:20,256 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:20,257 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:20,259 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 17:47:20,279 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:47:20,280 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:47:20,280 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 17:47:20,280 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:47:20,280 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:47:20,280 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:47:20,291 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:47:20,292 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:47:20,293 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:47:20,294 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:47:20,294 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:47:20,294 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 17:47:20,294 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd886e486-91d5-4920-8ceb-95b541052965'}
INFO - 2025-06-12 17:47:20,294 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:47:20,294 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:47:20,310 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:47:20,311 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:47:20,311 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
ERROR - 2025-06-12 17:47:20,311 - assertions.py:37 -[assertions:contains_assert] - 接口返回码包含断言失败：接口返回码【200】不等于【400】
INFO - 2025-06-12 17:47:20,311 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 17:47:20,311 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:47:20,321 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:49:42,917 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:49:42,918 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:49:42,918 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:49:42,918 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:49:42,918 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:49:42,918 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:49:42,919 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:49:42,985 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"391e36d9-97b8-4eb1-a8d0-b7ffd21a63be","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:50:06,941 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:50:06,942 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:50:06,942 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:50:06,943 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:50:06,943 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:50:06,951 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:50:06,952 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:50:06,952 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:50:06,952 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:50:06,952 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '391e36d9-97b8-4eb1-a8d0-b7ffd21a63be'}
INFO - 2025-06-12 17:50:06,952 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:50:06,952 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:50:06,985 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:28,169 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,154 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:51:30,154 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:51:30,154 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:51:30,154 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:51:30,154 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:51:30,155 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,155 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:51:30,223 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"facb23ed-817c-4f52-a7ac-dce710f096f1","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:51:30,224 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:51:30,224 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:51:30,225 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:51:30,225 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,225 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,228 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:51:30,249 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:30,249 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:51:30,249 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 17:51:30,249 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:51:30,249 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:51:30,249 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,250 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,251 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,253 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:51:30,279 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:30,279 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:51:30,279 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 17:51:30,279 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:51:30,279 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:51:30,279 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,280 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,281 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,283 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 17:51:30,315 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "tyhxQpidG8dEXD58qtfH";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-3114120622816">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-3114120622672">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-3114120620944">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-3114120622384">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-3114120623248">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-3114120623104">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-3114120623392">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">122</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;请求参数不能为空&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400  # 添加HTTP状态码</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 获取分页参数</pre>
<pre class="line current"><span class="ws">    </span>current_page = res_json.get(&#39;currentPage&#39;)
<span class="ws">    </span>               ^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>page_size = res_json.get(&#39;pageSize&#39;)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 检查必填参数currentPage</pre>
<pre class="line after"><span class="ws">    </span>if current_page is None:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 122, in find_all_users
    current_page = res_json.get(&#39;currentPage&#39;)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 122, in find_all_users
    current_page = res_json.get('currentPage')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'get'


-->

ERROR - 2025-06-12 17:51:30,316 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&...
INFO - 2025-06-12 17:51:30,316 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 17:51:30,316 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:51:30,493 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,494 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,496 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 17:51:30,510 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:30,510 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:51:30,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 17:51:30,510 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:51:30,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:51:30,511 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,512 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,513 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,515 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 17:51:30,541 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:30,541 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:51:30,541 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 17:51:30,541 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:51:30,542 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:51:30,542 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,543 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,543 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,548 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,548 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,548 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,548 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 17:51:30,548 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,548 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,549 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 17:51:30,571 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:30,572 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:51:30,572 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 17:51:30,572 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:51:30,572 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:51:30,572 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,573 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:51:30,574 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'facb23ed-817c-4f52-a7ac-dce710f096f1'}
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:51:30,576 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:51:30,578 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:51:30,578 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:51:30,578 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
ERROR - 2025-06-12 17:51:30,578 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:51:30,578 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:51:30,578 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:51:30,579 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,473 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:56:31,474 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:56:31,474 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:56:31,474 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:56:31,474 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:56:31,474 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,475 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:56:31,498 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:56:31,500 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:56:31,500 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:56:31,500 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:56:31,500 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,500 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,503 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:56:31,526 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,526 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,526 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 17:56:31,526 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,527 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,527 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,528 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,528 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,530 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,530 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,531 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,531 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 17:56:31,531 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,531 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,531 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:56:31,557 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,557 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,557 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 17:56:31,557 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,558 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,558 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,560 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,561 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,565 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 17:56:31,588 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,588 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,588 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
ERROR - 2025-06-12 17:56:31,588 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,589 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,589 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,590 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,592 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,595 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,595 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,595 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,596 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 17:56:31,596 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,596 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,596 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 17:56:31,619 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,620 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,620 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 17:56:31,620 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,621 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,623 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,625 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,630 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,630 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,630 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,631 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 17:56:31,631 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,631 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,631 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 17:56:31,633 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,634 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,634 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 17:56:31,634 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,634 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,634 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,635 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,636 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,640 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 17:56:31,665 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,665 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 17:56:31,666 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,666 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,668 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:56:31,670 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:56:31,674 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:56:31,674 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:56:31,674 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:56:31,674 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 17:56:31,674 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ca74fc55-8ab9-47f1-8b6e-1ff78dc8741f'}
INFO - 2025-06-12 17:56:31,675 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:56:31,675 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:56:31,694 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:56:31,694 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:56:31,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
ERROR - 2025-06-12 17:56:31,694 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:56:31,695 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:56:31,695 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:56:31,696 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,374 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:58:24,374 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:58:24,374 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:58:24,374 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:58:24,374 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:58:24,374 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,376 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:58:24,422 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"b2664913-d574-4b60-af45-586e771fc904","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:58:24,423 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:58:24,424 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:58:24,424 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:58:24,424 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,424 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,427 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 17:58:24,446 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:58:24,446 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 17:58:24,446 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:58:24,446 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:58:24,446 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 17:58:24,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 17:58:24,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 17:58:24,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 17:58:24,448 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,449 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,450 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,452 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,452 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,452 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,452 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 17:58:24,452 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,452 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,453 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 17:58:24,483 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 17:58:24,483 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 17:58:24,483 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:58:24,484 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:58:24,484 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:58:24,484 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 17:58:24,484 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,485 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,489 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,491 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 17:58:24,520 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 17:58:24,520 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 17:58:24,520 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:58:24,521 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:58:24,521 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:58:24,521 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 17:58:24,521 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,523 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,525 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,527 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,527 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,527 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,527 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 17:58:24,527 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,527 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,528 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 17:58:24,539 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,540 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,540 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 17:58:24,540 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,540 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,540 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,541 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,542 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,544 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,544 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,544 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,545 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 17:58:24,545 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,545 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,545 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 17:58:24,570 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,571 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 17:58:24,571 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,571 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,572 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,573 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,577 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 17:58:24,600 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,601 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,601 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
ERROR - 2025-06-12 17:58:24,601 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,601 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,601 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,602 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,603 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,605 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,605 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,605 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,605 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 17:58:24,606 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,606 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,606 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 17:58:24,632 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,632 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 17:58:24,632 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,632 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,634 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,635 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,637 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 17:58:24,663 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,663 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,663 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 17:58:24,664 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,664 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,664 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,665 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,665 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,668 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 17:58:24,694 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,694 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 17:58:24,694 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,694 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,695 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:58:24,695 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:58:24,700 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 17:58:24,700 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:58:24,700 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 17:58:24,700 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 17:58:24,701 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b2664913-d574-4b60-af45-586e771fc904'}
INFO - 2025-06-12 17:58:24,701 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:58:24,701 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 17:58:24,724 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 17:58:24,724 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 17:58:24,724 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
ERROR - 2025-06-12 17:58:24,724 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 17:58:24,725 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 17:58:24,725 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:58:24,726 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:07,629 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:59:07,629 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:59:07,629 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:07,629 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:59:07,629 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:59:07,629 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:07,630 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:59:07,667 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"04b11f3e-ae85-42fc-b676-20015c4b0f44","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:59:07,669 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:59:07,669 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:07,669 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:07,669 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:07,670 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：根据手机号搜索用户
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:07,673 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 17:59:07,700 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 17:59:07,700 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].phone': '15321919666'}}]
INFO - 2025-06-12 17:59:07,701 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:07,701 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:07,701 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 17:59:07,702 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【15321919666】,实际结果为【1558888】
ERROR - 2025-06-12 17:59:07,702 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 17:59:07,857 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:07,858 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:07,859 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:07,860 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:07,860 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:07,860 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：根据时间范围搜索用户
INFO - 2025-06-12 17:59:07,860 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:07,860 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:07,860 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2020-01-01 00:00:00', 'endCreateTime': '2020-12-31 23:59:59'}}
INFO - 2025-06-12 17:59:09,337 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 17:59:09,337 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 17:59:09,337 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
ERROR - 2025-06-12 17:59:09,337 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:59:09,369 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:09,370 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：组合条件搜索用户
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:09,372 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2020-01-01 00:00:00', 'endCreateTime': '2020-12-31 23:59:59'}}
INFO - 2025-06-12 17:59:09,411 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 17:59:09,411 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 17:59:09,411 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].phone': '15321919666'}}]
ERROR - 2025-06-12 17:59:09,412 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:59:09,435 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:09,436 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索不存在的用户
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:09,438 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '99999999999'}}
INFO - 2025-06-12 17:59:09,840 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:59:09,840 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}]
INFO - 2025-06-12 17:59:09,840 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:09,840 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:09,840 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:09,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 17:59:09,841 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:09,842 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:09,843 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索时间范围无数据
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:09,845 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01 00:00:00', 'endCreateTime': '2025-12-31 23:59:59'}}
INFO - 2025-06-12 17:59:09,878 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 17:59:09,878 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 17:59:09,878 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}]
ERROR - 2025-06-12 17:59:09,878 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:59:09,903 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:09,905 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:09,906 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:09,906 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:09,907 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:09,907 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索条件为空
INFO - 2025-06-12 17:59:09,907 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:09,907 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:09,907 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '', 'startCreateTime': '', 'endCreateTime': ''}}
INFO - 2025-06-12 17:59:09,925 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:59:09,925 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:59:09,925 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:09,925 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:09,925 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:09,925 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:09,926 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:09,927 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：时间范围格式错误
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '04b11f3e-ae85-42fc-b676-20015c4b0f44'}
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:09,929 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2020-13-01', 'endCreateTime': '2020-12-31'}}
INFO - 2025-06-12 17:59:10,271 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:59:10,272 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:59:10,272 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:10,272 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:10,272 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:10,272 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:10,273 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:36,962 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 17:59:36,962 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 17:59:36,962 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:36,962 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 17:59:36,962 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 17:59:36,962 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:36,964 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 17:59:37,002 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"2b722e15-aa87-4224-92f9-58249d92b089","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 17:59:37,003 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 17:59:37,004 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:37,004 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:37,004 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:37,004 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,006 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,007 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,007 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,007 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：根据手机号搜索用户
INFO - 2025-06-12 17:59:37,007 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,007 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,007 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 17:59:37,057 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 17:59:37,057 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].phone': '15321919666'}}]
INFO - 2025-06-12 17:59:37,058 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:37,058 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:37,058 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:37,058 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 17:59:37,058 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:37,059 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:37,063 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：根据时间范围搜索用户
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,065 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2020-01-01 00:00:00', 'endCreateTime': '2020-12-31 23:59:59'}}
INFO - 2025-06-12 17:59:37,097 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 17:59:37,097 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 17:59:37,097 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
ERROR - 2025-06-12 17:59:37,097 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:59:37,285 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:37,286 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：组合条件搜索用户
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,288 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2020-01-01 00:00:00', 'endCreateTime': '2020-12-31 23:59:59'}}
INFO - 2025-06-12 17:59:37,318 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 17:59:37,318 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 17:59:37,318 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].phone': '15321919666'}}]
ERROR - 2025-06-12 17:59:37,319 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:59:37,343 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:37,344 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,346 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,346 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,347 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,347 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索不存在的用户
INFO - 2025-06-12 17:59:37,347 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,347 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,347 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '99999999999'}}
INFO - 2025-06-12 17:59:37,354 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:59:37,354 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}]
INFO - 2025-06-12 17:59:37,355 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:37,355 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:37,355 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:37,355 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 17:59:37,355 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:37,356 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:37,358 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,360 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,360 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,360 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,360 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索时间范围无数据
INFO - 2025-06-12 17:59:37,360 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,361 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,361 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01 00:00:00', 'endCreateTime': '2025-12-31 23:59:59'}}
INFO - 2025-06-12 17:59:37,381 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 17:59:37,381 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 17:59:37,381 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}]
ERROR - 2025-06-12 17:59:37,381 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 17:59:37,406 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:37,407 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,409 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,409 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,409 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,409 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索条件为空
INFO - 2025-06-12 17:59:37,409 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,410 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,410 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '', 'startCreateTime': '', 'endCreateTime': ''}}
INFO - 2025-06-12 17:59:37,441 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:59:37,442 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:59:37,442 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:37,442 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:37,442 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:37,442 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:37,443 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 17:59:37,446 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：时间范围格式错误
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2b722e15-aa87-4224-92f9-58249d92b089'}
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 17:59:37,448 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2020-13-01', 'endCreateTime': '2020-12-31'}}
INFO - 2025-06-12 17:59:37,473 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 17:59:37,473 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 17:59:37,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 17:59:37,474 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 17:59:37,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 17:59:37,474 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 17:59:37,475 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:01,862 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 18:25:01,863 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 18:25:01,863 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:01,863 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 18:25:01,863 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 18:25:01,863 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:01,864 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 18:25:01,924 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a085a885-e912-4b40-9cd4-b623e43991d7","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 18:25:01,925 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 18:25:01,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:25:01,926 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:25:01,926 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:25:01,927 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:01,929 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:01,929 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:01,930 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:01,930 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：根据手机号搜索用户
INFO - 2025-06-12 18:25:01,930 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:01,930 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:01,930 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:25:01,981 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 18:25:01,982 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].phone': '15321919666'}}]
INFO - 2025-06-12 18:25:01,982 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:25:01,982 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:25:01,983 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:25:01,983 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 18:25:01,983 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:25:01,986 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:01,988 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:01,991 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:01,991 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:01,991 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:01,991 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：根据时间范围搜索用户
INFO - 2025-06-12 18:25:01,991 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:01,992 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:01,992 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2020-01-01 00:00:00', 'endCreateTime': '2020-12-31 23:59:59'}}
INFO - 2025-06-12 18:25:02,044 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 18:25:02,045 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 18:25:02,045 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
ERROR - 2025-06-12 18:25:02,045 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 18:25:02,253 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:02,255 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:02,256 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:02,257 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:02,257 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:02,257 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：组合条件搜索用户
INFO - 2025-06-12 18:25:02,257 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:02,257 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:02,257 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2020-01-01 00:00:00', 'endCreateTime': '2020-12-31 23:59:59'}}
INFO - 2025-06-12 18:25:02,290 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 18:25:02,290 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 18:25:02,291 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].phone': '15321919666'}}]
ERROR - 2025-06-12 18:25:02,291 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 18:25:02,319 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:02,321 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:02,323 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:02,323 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:02,323 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:02,324 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索不存在的用户
INFO - 2025-06-12 18:25:02,324 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:02,324 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:02,324 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '99999999999'}}
INFO - 2025-06-12 18:25:02,356 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:25:02,357 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}]
INFO - 2025-06-12 18:25:02,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:25:02,357 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:25:02,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:25:02,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 18:25:02,358 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:25:02,359 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:02,362 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:02,364 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:02,364 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:02,364 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:02,364 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索时间范围无数据
INFO - 2025-06-12 18:25:02,364 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:02,365 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:02,365 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01 00:00:00', 'endCreateTime': '2025-12-31 23:59:59'}}
INFO - 2025-06-12 18:25:02,397 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP状态 400 - 错误的请求</h1><hr class="line" /><p><b>类型</b> 状态报告</p><p><b>描述</b> 由于被认为是客户端对错误（例如：畸形的请求语法、无效的请求信息帧或者虚拟的请求路由），服务器无法或不会处理当前请求。</p><hr class="line" /><h3>Apache Tomcat/8.5.63</h3></body></html>
ERROR - 2025-06-12 18:25:02,397 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html><html lang="zh"><head><title>HTTP状态 400 - 错误的请求</title><style type="text/css">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-...
INFO - 2025-06-12 18:25:02,397 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}]
ERROR - 2025-06-12 18:25:02,398 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 18:25:02,423 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:02,424 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:02,426 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:02,427 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:02,427 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:02,427 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：搜索条件为空
INFO - 2025-06-12 18:25:02,427 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:02,427 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:02,427 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '', 'startCreateTime': '', 'endCreateTime': ''}}
INFO - 2025-06-12 18:25:02,470 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:25:02,471 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 18:25:02,471 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:25:02,471 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:25:02,471 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:25:02,472 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:25:02,473 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:25:02,477 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:25:02,479 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:25:02,479 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:25:02,480 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:25:02,480 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：时间范围格式错误
INFO - 2025-06-12 18:25:02,480 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a085a885-e912-4b40-9cd4-b623e43991d7'}
INFO - 2025-06-12 18:25:02,480 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:25:02,480 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2020-13-01', 'endCreateTime': '2020-12-31'}}
INFO - 2025-06-12 18:25:02,524 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:25:02,524 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 18:25:02,524 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:25:02,525 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:25:02,525 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:25:02,525 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:25:02,526 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:18,911 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 18:40:18,912 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 18:40:18,912 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:18,912 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 18:40:18,912 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 18:40:18,913 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:18,913 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 18:40:18,935 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"3e399ea9-c6c1-40ad-85f9-f7a12c8264e0","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 18:40:18,936 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 18:40:18,936 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:40:18,936 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:40:18,936 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:18,937 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:18,939 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:18,939 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:18,939 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:18,940 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 18:40:18,940 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:18,940 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:18,940 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:40:18,970 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:18,971 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}, {'contains': {'content.list[0].phone': '15321919666'}}, {'contains': {'content.list[0].portrait': 'https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png'}}, {'contains': {'content.list[0].status': 'DISABLE'}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
INFO - 2025-06-12 18:40:18,972 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:18,973 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:18,973 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:40:18,974 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【15321919666】,实际结果为【1558888】
ERROR - 2025-06-12 18:40:18,975 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【15321919666】,实际结果为【1558888】
ERROR - 2025-06-12 18:40:18,975 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png】,实际结果为【[None]】
ERROR - 2025-06-12 18:40:18,975 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【DISABLE】,实际结果为【ENABLE】
INFO - 2025-06-12 18:40:18,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1594347555000】,实际结果【[1594347555000]】
ERROR - 2025-06-12 18:40:18,976 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:40:19,159 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,160 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,162 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,162 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,162 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,163 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 18:40:19,163 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,163 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,163 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 18:40:19,166 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,166 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].createTime': 1594347555000}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.total': 1}}, {'contains': {'content.pages': 1}}]
INFO - 2025-06-12 18:40:19,167 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:19,167 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:19,168 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:40:19,168 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1594347555000】,实际结果【[1594347555000]】
INFO - 2025-06-12 18:40:19,168 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 18:40:19,169 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
ERROR - 2025-06-12 18:40:19,169 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[12]】
ERROR - 2025-06-12 18:40:19,169 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
ERROR - 2025-06-12 18:40:19,169 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:40:19,181 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,183 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,184 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,184 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,184 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,184 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 18:40:19,184 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,185 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,185 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 18:40:19,188 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,188 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}, {'contains': {'content.list[0].phone': '15321919666'}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
INFO - 2025-06-12 18:40:19,189 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:19,189 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:19,189 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:40:19,190 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【15321919666】,实际结果为【1558888】
ERROR - 2025-06-12 18:40:19,190 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【15321919666】,实际结果为【1558888】
INFO - 2025-06-12 18:40:19,190 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1594347555000】,实际结果【[1594347555000]】
ERROR - 2025-06-12 18:40:19,191 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:40:19,202 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,203 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,205 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,205 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,205 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,206 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 18:40:19,206 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,206 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,206 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 18:40:19,208 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 12,
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": true,
    "isFirstPage": false,
    "isLastPage": true,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030021,
        "is_del": null,
        "name": "1558898",
        "password": "123456",
        "phone": "1558898",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030022,
        "is_del": null,
        "name": "1558899",
        "password": "123456",
        "phone": "1558899",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 0,
    "orderBy": null,
    "pageNum": 2,
    "pageSize": 10,
    "pages": 2,
    "prePage": 1,
    "size": 2,
    "startRow": 11,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,209 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 18:40:19,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:19,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:19,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:40:19,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 18:40:19,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 18:40:19,210 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,210 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:40:19,210 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,211 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,212 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,214 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,214 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,215 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,215 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 18:40:19,215 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,215 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,215 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 18:40:19,218 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 5,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 3,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2,
      3
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 5,
    "pages": 3,
    "prePage": 0,
    "size": 5,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,218 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 18:40:19,218 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:19,219 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:19,219 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:40:19,219 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 18:40:19,220 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 18:40:19,220 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:40:19,220 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,220 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,225 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,227 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,228 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,229 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,229 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,229 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 18:40:19,229 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,229 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,229 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:40:19,232 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,232 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,232 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 18:40:19,232 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,233 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,233 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,234 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,238 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,240 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,240 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,240 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,240 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 18:40:19,240 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,241 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,241 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 18:40:19,243 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,243 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,244 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 18:40:19,244 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,244 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,244 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,245 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,246 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,248 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 18:40:19,251 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,251 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,251 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 18:40:19,251 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,251 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,251 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,252 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,253 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,256 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,256 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,256 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,256 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 18:40:19,256 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,256 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,257 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 18:40:19,259 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,259 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,259 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 18:40:19,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,260 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,261 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,262 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,264 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:40:19,279 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,280 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,280 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 18:40:19,280 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,280 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,281 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,281 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,282 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,287 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,288 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,288 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,288 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 18:40:19,288 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,288 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,288 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 18:40:19,310 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,311 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,311 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 18:40:19,311 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,311 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,311 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,312 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,314 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,316 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:40:19,342 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:40:19,342 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:40:19,343 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 18:40:19,343 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:40:19,343 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:40:19,344 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:40:19,345 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,349 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,354 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,354 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,354 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,354 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 18:40:19,354 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,354 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,355 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 18:40:19,358 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,358 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 18:40:19,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:19,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:19,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:40:19,359 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[]】,实际结果为【[[{'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347555000, 'credentials_non_expired': None, 'id': 100030011, 'is_del': None, 'name': '1558888', 'password': '123456', 'phone': '1558888', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347655000, 'credentials_non_expired': None, 'id': 100030012, 'is_del': None, 'name': '1558889', 'password': '123456', 'phone': '1558889', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347755000, 'credentials_non_expired': None, 'id': 100030013, 'is_del': None, 'name': '1558890', 'password': '123456', 'phone': '1558890', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347855000, 'credentials_non_expired': None, 'id': 100030014, 'is_del': None, 'name': '1558891', 'password': '123456', 'phone': '1558891', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347955000, 'credentials_non_expired': None, 'id': 100030015, 'is_del': None, 'name': '1558892', 'password': '123456', 'phone': '1558892', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348055000, 'credentials_non_expired': None, 'id': 100030016, 'is_del': None, 'name': '1558893', 'password': '123456', 'phone': '1558893', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348155000, 'credentials_non_expired': None, 'id': 100030017, 'is_del': None, 'name': '1558894', 'password': '123456', 'phone': '1558894', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348255000, 'credentials_non_expired': None, 'id': 100030018, 'is_del': None, 'name': '1558895', 'password': '123456', 'phone': '1558895', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348355000, 'credentials_non_expired': None, 'id': 100030019, 'is_del': None, 'name': '1558896', 'password': '123456', 'phone': '1558896', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348455000, 'credentials_non_expired': None, 'id': 100030020, 'is_del': None, 'name': '1558897', 'password': '123456', 'phone': '1558897', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}]]】
ERROR - 2025-06-12 18:40:19,360 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 18:40:19,360 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:40:19,371 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,372 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,374 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,374 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,375 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,375 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 18:40:19,375 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,375 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,375 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 18:40:19,387 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,388 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 18:40:19,388 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【响应成功】
ERROR - 2025-06-12 18:40:19,389 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[200]】
ERROR - 2025-06-12 18:40:19,389 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
ERROR - 2025-06-12 18:40:19,389 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:40:19,404 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:40:19,405 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:40:19,407 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:40:19,407 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:40:19,407 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:40:19,407 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 18:40:19,407 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3e399ea9-c6c1-40ad-85f9-f7a12c8264e0'}
INFO - 2025-06-12 18:40:19,407 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:40:19,408 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 18:40:19,434 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:40:19,435 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 18:40:19,436 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:40:19,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:40:19,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:40:19,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 18:40:19,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 18:40:19,439 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 18:40:19,439 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
INFO - 2025-06-12 18:40:19,440 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:40:19,440 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
INFO - 2025-06-12 18:40:19,440 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 18:40:19,441 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
INFO - 2025-06-12 18:40:19,442 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【8】,实际结果【[8]】
ERROR - 2025-06-12 18:40:19,442 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[1]】,实际结果为【[[1, 2]]】
ERROR - 2025-06-12 18:40:19,442 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:40:19,451 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,185 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 18:42:12,185 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 18:42:12,185 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,186 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 18:42:12,186 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 18:42:12,186 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,186 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 18:42:12,230 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"d3e37544-eb74-4b13-b71e-1f0a90411a12","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 18:42:12,232 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 18:42:12,233 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:42:12,233 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:42:12,233 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,233 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,236 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:42:12,272 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 18:42:12,272 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}, {'contains': {'content.list[0].phone': '15321919666'}}, {'contains': {'content.list[0].portrait': 'https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png'}}, {'contains': {'content.list[0].status': 'DISABLE'}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
INFO - 2025-06-12 18:42:12,273 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,273 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,273 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:42:12,274 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 18:42:12,274 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 18:42:12,274 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png】,实际结果【https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png】
INFO - 2025-06-12 18:42:12,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【DISABLE】,实际结果【DISABLE】
INFO - 2025-06-12 18:42:12,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1594347555000】,实际结果【[1594347555000]】
INFO - 2025-06-12 18:42:12,275 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,281 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,282 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,284 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,284 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,284 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,284 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 18:42:12,284 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,285 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,285 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 18:42:12,304 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:42:12,305 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].createTime': 1594347555000}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.total': 1}}, {'contains': {'content.pages': 1}}]
INFO - 2025-06-12 18:42:12,305 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,305 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,305 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:42:12,306 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 18:42:12,480 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,481 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,483 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 18:42:12,510 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:42:12,510 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}, {'contains': {'content.list[0].phone': '15321919666'}}, {'contains': {'content.list[0].createTime': 1594347555000}}]
INFO - 2025-06-12 18:42:12,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:42:12,511 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 18:42:12,525 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,526 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,528 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 18:42:12,578 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 18:42:12,578 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 18:42:12,578 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,578 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:42:12,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 18:42:12,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 18:42:12,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:42:12,580 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,581 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,583 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,584 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,585 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,585 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,585 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 18:42:12,585 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,585 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,586 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 18:42:12,619 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 18:42:12,620 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 18:42:12,620 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:42:12,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 18:42:12,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 18:42:12,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:42:12,624 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,624 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,627 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,629 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,631 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,631 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,632 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,632 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 18:42:12,632 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,632 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,632 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:42:12,654 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,655 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,655 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 18:42:12,655 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,656 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,656 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,657 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,658 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,661 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 18:42:12,685 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,686 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 18:42:12,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,687 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,688 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,692 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,694 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,694 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,694 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,694 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 18:42:12,695 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,695 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,695 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 18:42:12,716 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,716 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 18:42:12,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,717 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,718 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,719 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,723 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 18:42:12,746 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,746 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 18:42:12,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,747 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,748 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,749 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,751 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,751 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,751 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,752 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 18:42:12,752 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,752 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,752 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:42:12,777 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,778 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,778 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 18:42:12,778 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,778 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,778 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,779 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,780 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,784 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,784 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,784 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,785 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 18:42:12,785 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,785 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,785 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 18:42:12,809 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,809 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,810 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 18:42:12,810 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,810 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,810 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,812 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,815 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,818 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,818 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,818 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,818 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 18:42:12,818 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,818 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,819 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:42:12,839 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:42:12,840 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:42:12,840 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 18:42:12,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:42:12,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:42:12,842 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:42:12,843 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,845 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,848 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,848 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,848 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,848 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 18:42:12,848 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,848 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,849 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 18:42:12,870 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:42:12,870 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 18:42:12,871 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,871 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,871 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:42:12,871 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[]】,实际结果为【[[{'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347555000, 'credentials_non_expired': None, 'id': 100030011, 'is_del': None, 'name': '1558888', 'password': '123456', 'phone': '1558888', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347655000, 'credentials_non_expired': None, 'id': 100030012, 'is_del': None, 'name': '1558889', 'password': '123456', 'phone': '1558889', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347755000, 'credentials_non_expired': None, 'id': 100030013, 'is_del': None, 'name': '1558890', 'password': '123456', 'phone': '1558890', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347855000, 'credentials_non_expired': None, 'id': 100030014, 'is_del': None, 'name': '1558891', 'password': '123456', 'phone': '1558891', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347955000, 'credentials_non_expired': None, 'id': 100030015, 'is_del': None, 'name': '1558892', 'password': '123456', 'phone': '1558892', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348055000, 'credentials_non_expired': None, 'id': 100030016, 'is_del': None, 'name': '1558893', 'password': '123456', 'phone': '1558893', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348155000, 'credentials_non_expired': None, 'id': 100030017, 'is_del': None, 'name': '1558894', 'password': '123456', 'phone': '1558894', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348255000, 'credentials_non_expired': None, 'id': 100030018, 'is_del': None, 'name': '1558895', 'password': '123456', 'phone': '1558895', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348355000, 'credentials_non_expired': None, 'id': 100030019, 'is_del': None, 'name': '1558896', 'password': '123456', 'phone': '1558896', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348455000, 'credentials_non_expired': None, 'id': 100030020, 'is_del': None, 'name': '1558897', 'password': '123456', 'phone': '1558897', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}]]】
ERROR - 2025-06-12 18:42:12,872 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 18:42:12,872 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:42:12,882 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,882 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,884 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,884 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,884 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,884 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 18:42:12,884 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,885 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,885 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 18:42:12,900 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:42:12,901 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 18:42:12,902 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【响应成功】
ERROR - 2025-06-12 18:42:12,902 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[200]】
ERROR - 2025-06-12 18:42:12,902 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
ERROR - 2025-06-12 18:42:12,902 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:42:12,913 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:42:12,914 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:42:12,915 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:42:12,916 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:42:12,916 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:42:12,916 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 18:42:12,916 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd3e37544-eb74-4b13-b71e-1f0a90411a12'}
INFO - 2025-06-12 18:42:12,916 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:42:12,916 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 18:42:12,931 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:42:12,932 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 18:42:12,932 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:42:12,932 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:42:12,933 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:42:12,933 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 18:42:12,934 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 18:42:12,934 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 18:42:12,934 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
INFO - 2025-06-12 18:42:12,935 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:42:12,935 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
INFO - 2025-06-12 18:42:12,935 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 18:42:12,936 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
INFO - 2025-06-12 18:42:12,936 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【8】,实际结果【[8]】
ERROR - 2025-06-12 18:42:12,936 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[1]】,实际结果为【[[1, 2]]】
ERROR - 2025-06-12 18:42:12,936 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:42:12,948 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,174 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 18:54:33,217 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"544b5e90-5f8c-4337-8cd5-e3c2f16e1284","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 18:54:33,220 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 18:54:33,220 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 18:54:33,221 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 18:54:33,221 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,222 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,226 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,226 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,226 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,227 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 18:54:33,227 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,227 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,227 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:54:33,274 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 18:54:33,275 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 18:54:33,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,276 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 18:54:33,276 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,277 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,281 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,283 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,284 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,284 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,284 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 18:54:33,284 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,284 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,284 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 18:54:33,317 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:54:33,318 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 18:54:33,318 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,319 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,319 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,319 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,322 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,325 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,329 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,329 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,330 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,330 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 18:54:33,330 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,330 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,330 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 18:54:33,359 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 18:54:33,360 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 18:54:33,360 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,361 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,361 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,361 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,363 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,364 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,367 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,367 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,367 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,367 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-手机号和时间均为空
INFO - 2025-06-12 18:54:33,368 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,368 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,368 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 18:54:33,398 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 18:54:33,399 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 18:54:33,400 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,401 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,401 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,402 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,404 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,406 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,408 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,408 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,408 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,408 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 18:54:33,408 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,409 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,409 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 18:54:33,421 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 18:54:33,422 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 18:54:33,422 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,422 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,422 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 18:54:33,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 18:54:33,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,423 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,429 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,430 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,431 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,432 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,432 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,432 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 18:54:33,432 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,432 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,432 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 18:54:33,471 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 18:54:33,472 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 18:54:33,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 18:54:33,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 18:54:33,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,474 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,479 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,481 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,483 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:54:33,506 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,507 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,507 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 18:54:33,508 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,508 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,508 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,510 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,514 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,517 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,517 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,517 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,518 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 18:54:33,518 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,518 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,518 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 18:54:33,537 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,537 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,537 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 18:54:33,538 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,538 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,538 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,539 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,543 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,546 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,546 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,546 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,547 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 18:54:33,547 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,547 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,547 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 18:54:33,568 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,569 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 18:54:33,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,570 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,570 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,571 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,573 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,573 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,574 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,574 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 18:54:33,574 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,574 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,574 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 18:54:33,597 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,598 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 18:54:33,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,598 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,599 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,604 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,606 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,606 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,606 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,606 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 18:54:33,607 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,607 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,607 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:54:33,610 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,610 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,610 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 18:54:33,610 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,610 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,610 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,611 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,612 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,614 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,614 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,614 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,614 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 18:54:33,615 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,615 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,615 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 18:54:33,628 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,628 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 18:54:33,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,629 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,629 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,630 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,632 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,633 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,633 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,633 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 18:54:33,633 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,633 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,633 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 18:54:33,659 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 18:54:33,659 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 18:54:33,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 18:54:33,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 18:54:33,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 18:54:33,660 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 18:54:33,661 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,664 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,666 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,666 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,666 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,666 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 18:54:33,667 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,667 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,667 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 18:54:33,690 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:54:33,690 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 18:54:33,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,692 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:54:33,692 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[]】,实际结果为【[[{'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347555000, 'credentials_non_expired': None, 'id': 100030011, 'is_del': None, 'name': '1558888', 'password': '123456', 'phone': '1558888', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347655000, 'credentials_non_expired': None, 'id': 100030012, 'is_del': None, 'name': '1558889', 'password': '123456', 'phone': '1558889', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347755000, 'credentials_non_expired': None, 'id': 100030013, 'is_del': None, 'name': '1558890', 'password': '123456', 'phone': '1558890', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347855000, 'credentials_non_expired': None, 'id': 100030014, 'is_del': None, 'name': '1558891', 'password': '123456', 'phone': '1558891', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347955000, 'credentials_non_expired': None, 'id': 100030015, 'is_del': None, 'name': '1558892', 'password': '123456', 'phone': '1558892', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348055000, 'credentials_non_expired': None, 'id': 100030016, 'is_del': None, 'name': '1558893', 'password': '123456', 'phone': '1558893', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348155000, 'credentials_non_expired': None, 'id': 100030017, 'is_del': None, 'name': '1558894', 'password': '123456', 'phone': '1558894', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348255000, 'credentials_non_expired': None, 'id': 100030018, 'is_del': None, 'name': '1558895', 'password': '123456', 'phone': '1558895', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348355000, 'credentials_non_expired': None, 'id': 100030019, 'is_del': None, 'name': '1558896', 'password': '123456', 'phone': '1558896', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348455000, 'credentials_non_expired': None, 'id': 100030020, 'is_del': None, 'name': '1558897', 'password': '123456', 'phone': '1558897', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}]]】
ERROR - 2025-06-12 18:54:33,693 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 18:54:33,693 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:54:33,856 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,857 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,859 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,859 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,859 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,860 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 18:54:33,860 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,860 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,860 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 18:54:33,862 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:54:33,863 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 18:54:33,863 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【响应成功】
ERROR - 2025-06-12 18:54:33,863 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[200]】
ERROR - 2025-06-12 18:54:33,864 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
ERROR - 2025-06-12 18:54:33,864 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:54:33,876 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 18:54:33,877 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 18:54:33,879 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 18:54:33,879 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 18:54:33,879 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 18:54:33,879 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 18:54:33,879 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '544b5e90-5f8c-4337-8cd5-e3c2f16e1284'}
INFO - 2025-06-12 18:54:33,880 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 18:54:33,880 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 18:54:33,906 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 18:54:33,906 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 18:54:33,907 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 18:54:33,907 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 18:54:33,908 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 18:54:33,908 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 18:54:33,908 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 18:54:33,909 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 18:54:33,909 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
INFO - 2025-06-12 18:54:33,910 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 18:54:33,910 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
INFO - 2025-06-12 18:54:33,910 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 18:54:33,911 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
INFO - 2025-06-12 18:54:33,911 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【8】,实际结果【[8]】
ERROR - 2025-06-12 18:54:33,911 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[1]】,实际结果为【[[1, 2]]】
ERROR - 2025-06-12 18:54:33,911 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 18:54:33,924 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,057 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:03:19,058 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:03:19,058 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,058 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:03:19,058 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:03:19,058 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,060 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:03:19,080 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"476d74b4-3704-414c-abef-efb41a004132","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:03:19,082 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:03:19,082 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:03:19,082 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:03:19,082 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,083 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,085 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,085 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,085 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,085 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:03:19,085 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,086 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,086 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:03:19,104 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:03:19,104 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:03:19,104 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,104 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,105 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,105 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:03:19,105 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,106 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,112 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,114 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:03:19,139 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:03:19,139 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:03:19,140 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,140 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,140 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,140 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,141 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,145 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,147 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,147 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,147 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,147 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:03:19,147 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,147 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,148 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:03:19,162 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:03:19,163 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:03:19,163 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,163 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,163 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,163 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,164 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,168 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,170 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,170 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,170 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,170 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:03:19,170 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,170 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,171 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:03:19,195 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:03:19,196 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].total': 12}}]
INFO - 2025-06-12 19:03:19,196 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,197 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,197 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 19:03:19,198 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:03:19,370 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,371 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,373 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,373 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,373 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,373 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:03:19,373 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,373 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,374 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:03:19,418 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:03:19,418 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:03:19,419 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,419 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,420 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,420 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:03:19,420 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:03:19,421 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,421 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,421 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,425 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,427 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,429 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:03:19,447 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:03:19,447 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:03:19,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:03:19,449 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:03:19,449 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,449 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,449 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,455 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,456 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,458 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:03:19,471 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,471 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,471 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 19:03:19,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,472 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,474 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,475 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,477 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,477 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,477 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,478 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:03:19,478 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,478 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,478 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 19:03:19,502 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,502 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 19:03:19,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,504 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,505 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,508 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,510 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,510 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,511 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,511 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:03:19,511 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,511 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,511 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 19:03:19,533 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,534 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,534 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 19:03:19,534 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,535 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,537 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,538 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,541 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 19:03:19,564 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,564 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,564 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 19:03:19,565 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,565 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,565 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,567 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,568 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,571 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,571 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,572 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,572 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:03:19,572 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,572 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,572 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:03:19,575 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,576 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,576 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 19:03:19,576 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,576 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,576 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,577 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,581 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,583 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,583 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,583 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,584 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:03:19,584 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,584 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,584 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 19:03:19,610 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,611 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,611 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 19:03:19,611 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,612 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,613 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,615 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,618 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,618 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,618 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,618 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:03:19,618 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,619 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,619 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:03:19,621 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:03:19,621 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:03:19,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 19:03:19,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:03:19,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:03:19,621 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:03:19,622 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,623 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,625 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 19:03:19,639 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 0,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 0,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 19:03:19,640 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 19:03:19,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
ERROR - 2025-06-12 19:03:19,641 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 19:03:19,641 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 19:03:19,652 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,653 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,655 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,655 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,655 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,655 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:03:19,655 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,655 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,656 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 19:03:19,678 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "vEEQDKnRq6XD2JW1n96X";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2618657386368">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2618657386944">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2618657387088">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2618657387520">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2618657387664">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2618657387808">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2618657387952">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">165</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 时间格式检查</pre>
<pre class="line before"><span class="ws">    </span>if &#39;startCreateTime&#39; in res_json and res_json[&#39;startCreateTime&#39;]:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>datetime.strptime(res_json[&#39;startCreateTime&#39;], &#39;%Y-%m-%d&#39;)
<span class="ws">            </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;success&#39;: False,</pre>
<pre class="line after"><span class="ws">                </span>&#39;state&#39;: 400,</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 165, in find_all_users
    datetime.strptime(res_json[&#39;startCreateTime&#39;], &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 165, in find_all_users
    datetime.strptime(res_json['startCreateTime'], '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 19:03:19,678 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 19:03:19,678 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:03:19,678 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:03:19,706 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:03:19,706 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:03:19,709 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:03:19,709 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:03:19,709 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:03:19,709 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:03:19,710 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '476d74b4-3704-414c-abef-efb41a004132'}
INFO - 2025-06-12 19:03:19,710 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:03:19,710 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:03:19,732 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "user1",
        "password": "123456",
        "phone": "13800130000",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "user2",
        "password": "123456",
        "phone": "13800130001",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "user3",
        "password": "123456",
        "phone": "13800130002",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "user4",
        "password": "123456",
        "phone": "13800130003",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "user5",
        "password": "123456",
        "phone": "13800130004",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "user6",
        "password": "123456",
        "phone": "13800130005",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "user7",
        "password": "123456",
        "phone": "13800130006",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "user8",
        "password": "123456",
        "phone": "13800130007",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "user9",
        "password": "123456",
        "phone": "13800130008",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "user10",
        "password": "123456",
        "phone": "13800130009",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": null,
        "status": "DISABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 19:03:19,732 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 19:03:19,733 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:03:19,733 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:03:19,734 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:03:19,734 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 19:03:19,734 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 19:03:19,735 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 19:03:19,735 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
INFO - 2025-06-12 19:03:19,735 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 19:03:19,736 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
INFO - 2025-06-12 19:03:19,736 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 19:03:19,736 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
INFO - 2025-06-12 19:03:19,736 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【8】,实际结果【[8]】
ERROR - 2025-06-12 19:03:19,736 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[1]】,实际结果为【[[1, 2]]】
ERROR - 2025-06-12 19:03:19,737 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 19:03:19,748 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,273 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:28:47,274 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:28:47,274 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,274 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:28:47,274 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:28:47,275 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,275 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:28:47,351 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"3d5bf94b-7a9e-4668-b68f-624199769859","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:28:47,352 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:28:47,352 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:28:47,353 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:28:47,353 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,353 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,355 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,355 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,356 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,356 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:28:47,356 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,356 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,356 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:28:47,396 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:28:47,396 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:28:47,397 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:28:47,397 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:28:47,397 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,397 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:28:47,397 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,398 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,400 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,403 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:28:47,422 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:28:47,423 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:28:47,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:28:47,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:28:47,423 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,423 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,425 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,429 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,432 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:28:47,565 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:28:47,566 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:28:47,566 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:28:47,567 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:28:47,567 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,567 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,568 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,571 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,574 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,574 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,574 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,574 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:28:47,575 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,575 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,575 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:28:47,620 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:28:47,621 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].total': 12}}]
INFO - 2025-06-12 19:28:47,621 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:28:47,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:28:47,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 19:28:47,622 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:28:47,806 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,812 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,813 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,814 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,814 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,814 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:28:47,814 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,814 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,814 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:28:47,841 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:28:47,841 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:28:47,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:28:47,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:28:47,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:28:47,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:28:47,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,843 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,843 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,845 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,846 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,848 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,848 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,849 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,849 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:28:47,849 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,849 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,849 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:28:47,883 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:28:47,884 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:28:47,885 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:28:47,885 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:28:47,885 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,885 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:28:47,886 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:28:47,886 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:28:47,886 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,886 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,890 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,892 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,894 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,894 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,894 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,894 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:28:47,894 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,895 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,895 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:28:47,897 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:28:47,897 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:28:47,898 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 19:28:47,898 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:28:47,898 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,898 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,899 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,899 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,901 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,901 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,901 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,901 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:28:47,902 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,902 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,902 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 19:28:47,916 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:28:47,917 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:28:47,917 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 19:28:47,917 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:28:47,917 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,917 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,918 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,922 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,924 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,924 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,925 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,925 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:28:47,925 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,925 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,925 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 19:28:47,947 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:28:47,948 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:28:47,948 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 19:28:47,948 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:28:47,949 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,949 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,949 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,950 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,953 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 19:28:47,955 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:28:47,955 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:28:47,955 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 19:28:47,955 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:28:47,956 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,956 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,956 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,958 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,960 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:28:47,978 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:28:47,978 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:28:47,978 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 19:28:47,978 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:28:47,979 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:47,979 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:47,980 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:47,985 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:47,987 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:47,987 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:47,987 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:47,987 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:28:47,987 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:47,987 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:47,988 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 19:28:48,009 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:28:48,009 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:28:48,009 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 19:28:48,010 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:28:48,010 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:28:48,010 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:28:48,011 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:48,014 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:48,016 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:48,017 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:48,017 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:48,017 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:28:48,017 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:48,017 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:48,017 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:28:48,046 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "AW0zLwqfasWeDAsSywUu";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>FileNotFoundError</h1>
<div class="detail">
  <p class="errormsg">FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2050184227440">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2050184229312">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2050184229456">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2050184229600">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2050184229744">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2050184229888">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2050184230032">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">169</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line current"><span class="ws">    </span>user_data = read_json_data(&#39;mockdata/user.json&#39;)
<span class="ws">    </span>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-2050185319264">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">read_json_data</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>return data</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def read_json_data(file_path):</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;json文件读取&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">    </span>with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
<span class="ws">    </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>result = &#39;&#39;.join([line.strip() for line in f])</pre>
<pre class="line after"><span class="ws">        </span>mer = result.split(&#39;,&#39;)</pre>
<pre class="line after"><span class="ws">        </span>return mer</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 169, in find_all_users
    user_data = read_json_data(&#39;mockdata/user.json&#39;)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 55, in read_json_data
    with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 169, in find_all_users
    user_data = read_json_data('mockdata/user.json')
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 55, in read_json_data
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'mockdata/user.json'


-->

ERROR - 2025-06-12 19:28:48,047 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?...
INFO - 2025-06-12 19:28:48,047 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:28:48,047 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:28:48,077 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:48,078 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:48,080 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:48,080 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:48,081 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:48,081 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:28:48,081 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:48,081 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:48,081 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 19:28:48,088 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "AW0zLwqfasWeDAsSywUu";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>FileNotFoundError</h1>
<div class="detail">
  <p class="errormsg">FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2050185319552">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2050185319696">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2050185319840">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2050185319984">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2050185320128">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2050185320272">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2050185320416">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">169</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line current"><span class="ws">    </span>user_data = read_json_data(&#39;mockdata/user.json&#39;)
<span class="ws">    </span>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-2050185320560">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">read_json_data</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>return data</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def read_json_data(file_path):</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;json文件读取&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">    </span>with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
<span class="ws">    </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>result = &#39;&#39;.join([line.strip() for line in f])</pre>
<pre class="line after"><span class="ws">        </span>mer = result.split(&#39;,&#39;)</pre>
<pre class="line after"><span class="ws">        </span>return mer</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 169, in find_all_users
    user_data = read_json_data(&#39;mockdata/user.json&#39;)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 55, in read_json_data
    with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 169, in find_all_users
    user_data = read_json_data('mockdata/user.json')
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 55, in read_json_data
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'mockdata/user.json'


-->

ERROR - 2025-06-12 19:28:48,088 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?...
INFO - 2025-06-12 19:28:48,088 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 19:28:48,088 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:28:48,118 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:48,119 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:48,121 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:48,121 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:48,121 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:48,121 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:28:48,121 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:48,122 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:48,122 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 19:28:48,152 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "AW0zLwqfasWeDAsSywUu";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>FileNotFoundError</h1>
<div class="detail">
  <p class="errormsg">FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2050185321136">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2050185321712">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2050185320848">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2050185320992">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2050185321856">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2050185322000">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2050185321424">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">169</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line current"><span class="ws">    </span>user_data = read_json_data(&#39;mockdata/user.json&#39;)
<span class="ws">    </span>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-2050185322288">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">read_json_data</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>return data</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def read_json_data(file_path):</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;json文件读取&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">    </span>with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
<span class="ws">    </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>result = &#39;&#39;.join([line.strip() for line in f])</pre>
<pre class="line after"><span class="ws">        </span>mer = result.split(&#39;,&#39;)</pre>
<pre class="line after"><span class="ws">        </span>return mer</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 169, in find_all_users
    user_data = read_json_data(&#39;mockdata/user.json&#39;)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 55, in read_json_data
    with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 169, in find_all_users
    user_data = read_json_data('mockdata/user.json')
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 55, in read_json_data
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'mockdata/user.json'


-->

ERROR - 2025-06-12 19:28:48,152 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?...
INFO - 2025-06-12 19:28:48,153 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:28:48,153 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:28:48,186 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:28:48,187 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3d5bf94b-7a9e-4668-b68f-624199769859'}
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:28:48,189 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:28:48,195 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "AW0zLwqfasWeDAsSywUu";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>FileNotFoundError</h1>
<div class="detail">
  <p class="errormsg">FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2050185322432">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2050185322576">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2050185322720">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2050185322864">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2050185323008">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2050185323152">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2050185323296">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">169</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line current"><span class="ws">    </span>user_data = read_json_data(&#39;mockdata/user.json&#39;)
<span class="ws">    </span>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre></div>
</div>

<li><div class="frame" id="frame-2050185323440">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">55</em>,
      in <code class="function">read_json_data</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>return data</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def read_json_data(file_path):</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;json文件读取&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">    </span>with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
<span class="ws">    </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>result = &#39;&#39;.join([line.strip() for line in f])</pre>
<pre class="line after"><span class="ws">        </span>mer = result.split(&#39;,&#39;)</pre>
<pre class="line after"><span class="ws">        </span>return mer</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 169, in find_all_users
    user_data = read_json_data(&#39;mockdata/user.json&#39;)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 55, in read_json_data
    with open(file_path, &#39;r&#39;, encoding=&#39;utf-8&#39;) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 169, in find_all_users
    user_data = read_json_data('mockdata/user.json')
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 55, in read_json_data
    with open(file_path, 'r', encoding='utf-8') as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'mockdata/user.json'


-->

ERROR - 2025-06-12 19:28:48,195 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>FileNotFoundError: [Errno 2] No such file or directory: &#39;mockdata/user.json&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?...
INFO - 2025-06-12 19:28:48,195 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 19:28:48,195 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:28:48,222 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,001 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:32:35,002 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:32:35,002 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,002 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:32:35,002 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:32:35,002 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,003 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:32:35,024 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"fe0e7698-b74c-49ce-b2f1-0138d146de26","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:32:35,025 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:32:35,025 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:32:35,025 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:32:35,025 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,026 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,028 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:32:35,074 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:32:35,074 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:32:35,074 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:32:35,074 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:32:35,075 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,075 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:32:35,075 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,076 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,077 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,079 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:32:35,092 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:32:35,093 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:32:35,093 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:32:35,093 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:32:35,094 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,094 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,095 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,095 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,097 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,098 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,098 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,098 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:32:35,098 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,098 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,098 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:32:35,124 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:32:35,125 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:32:35,125 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:32:35,125 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:32:35,125 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,125 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,127 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,129 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,131 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,132 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,132 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,132 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:32:35,132 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,133 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,133 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:32:35,183 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:32:35,184 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].total': 12}}]
INFO - 2025-06-12 19:32:35,185 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:32:35,186 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:32:35,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 19:32:35,188 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:32:35,359 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,360 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,362 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,362 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,362 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,362 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:32:35,363 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,363 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,363 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:32:35,387 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:32:35,388 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:32:35,388 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:32:35,388 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:32:35,388 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,389 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:32:35,389 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:32:35,389 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,389 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,390 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,393 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,394 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,396 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,397 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,397 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,397 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:32:35,397 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,397 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,398 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:32:35,462 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:32:35,462 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:32:35,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:32:35,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:32:35,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:32:35,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:32:35,464 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:32:35,465 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,465 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,471 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,472 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,474 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:32:35,487 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:32:35,488 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:32:35,488 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 19:32:35,488 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:32:35,488 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,488 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,489 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,489 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,492 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 19:32:35,518 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:32:35,519 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:32:35,519 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 19:32:35,519 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:32:35,519 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,519 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,520 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,522 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,526 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,527 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,527 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,527 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:32:35,527 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,527 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,528 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 19:32:35,549 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:32:35,550 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:32:35,550 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 19:32:35,550 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:32:35,550 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,550 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,551 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,552 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,559 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,559 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,559 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,559 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:32:35,559 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,560 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,560 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 19:32:35,580 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:32:35,581 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:32:35,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 19:32:35,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:32:35,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,581 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,582 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,584 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,587 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,587 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,587 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,588 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:32:35,588 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,588 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,588 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:32:35,611 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:32:35,612 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:32:35,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 19:32:35,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:32:35,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,613 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,614 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,618 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,620 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 19:32:35,642 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:32:35,643 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:32:35,643 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 19:32:35,643 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:32:35,644 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:32:35,644 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:32:35,645 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,647 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,649 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,649 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,649 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,650 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:32:35,650 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,650 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,650 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:32:35,677 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273839984512">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273839985376">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273839985520">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273839985664">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273839985808">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273839985952">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273839986096">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:32:35,678 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:32:35,678 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:32:35,678 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:32:35,707 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,708 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,710 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,710 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,710 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,710 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:32:35,711 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,711 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,711 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 19:32:35,738 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841058944">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841059376">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841059520">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841059664">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841059808">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841059952">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841060096">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:32:35,738 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:32:35,738 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 19:32:35,739 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:32:35,764 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,765 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,767 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 19:32:35,784 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841060384">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841060960">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841061104">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841061248">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841061392">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841061536">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841061680">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:32:35,784 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:32:35,785 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:32:35,785 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:32:35,812 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:32:35,813 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:32:35,815 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:32:35,815 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:32:35,815 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:32:35,815 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:32:35,815 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fe0e7698-b74c-49ce-b2f1-0138d146de26'}
INFO - 2025-06-12 19:32:35,816 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:32:35,816 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:32:35,849 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841061824">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841062256">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841062400">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841062544">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841062688">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841062832">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841062976">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:32:35,849 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:32:35,850 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 19:32:35,850 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:32:35,879 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,416 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:33:03,416 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:33:03,417 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,417 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:33:03,417 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:33:03,417 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,417 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:33:03,429 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:33:03,430 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:33:03,430 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:33:03,430 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:33:03,430 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,430 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,433 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,433 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,433 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,433 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:33:03,433 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,433 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,434 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:33:03,471 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:33:03,471 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:33:03,471 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:33:03,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:33:03,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:33:03,473 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,475 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,479 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,481 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:33:03,515 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:33:03,515 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:33:03,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:33:03,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:33:03,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,516 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,518 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,520 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,522 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,522 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,523 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,523 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:33:03,523 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,523 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,523 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:33:03,542 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:33:03,542 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:33:03,542 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:33:03,543 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:33:03,543 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,543 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,544 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,545 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,547 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,547 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,547 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,548 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:33:03,548 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,548 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,548 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:33:03,584 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:33:03,585 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 19:33:03,585 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:33:03,586 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:33:03,586 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 19:33:03,587 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,589 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,590 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,592 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,592 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,592 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,592 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:33:03,593 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,593 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,593 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:33:03,635 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:33:03,636 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:33:03,637 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:33:03,637 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:33:03,638 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,638 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:33:03,639 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:33:03,639 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,639 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,640 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,645 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,647 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,650 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:33:03,689 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:33:03,690 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:33:03,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:33:03,692 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:33:03,692 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,693 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:33:03,693 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:33:03,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:33:03,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,694 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,697 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,698 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,701 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,701 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,701 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,701 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:33:03,701 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,701 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,702 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:33:03,722 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:33:03,723 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:33:03,723 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 19:33:03,723 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:33:03,723 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,723 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,726 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,728 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,731 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,731 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,731 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,731 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:33:03,731 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,731 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,732 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 19:33:03,754 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:33:03,755 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:33:03,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 19:33:03,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:33:03,756 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,756 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,758 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,762 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,765 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,765 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,766 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,766 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:33:03,766 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,766 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,766 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 19:33:03,783 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:33:03,784 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:33:03,784 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 19:33:03,784 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:33:03,785 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,785 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,787 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,788 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,791 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,791 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,792 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,792 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:33:03,792 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,792 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,792 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 19:33:03,794 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:33:03,794 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:33:03,794 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 19:33:03,794 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:33:03,795 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,795 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,796 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,796 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,798 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,798 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,798 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,798 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:33:03,799 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,799 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,799 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:33:03,814 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:33:03,815 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:33:03,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 19:33:03,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:33:03,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,815 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,816 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,820 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,822 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,822 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,822 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,822 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:33:03,823 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,823 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,823 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 19:33:03,845 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 19:33:03,846 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 19:33:03,846 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 19:33:03,847 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 19:33:03,847 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:33:03,847 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:33:03,849 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:03,853 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:03,856 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:03,856 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:03,856 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:03,856 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:33:03,856 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:03,856 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:03,857 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:33:03,879 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841063120">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841063696">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841063408">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841063264">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841064272">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841064128">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841063840">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:33:03,879 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:33:03,880 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:33:03,880 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:33:04,071 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:04,072 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:04,075 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 19:33:04,080 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841064416">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841064848">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841064992">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841065136">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841065280">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841065424">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841065568">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:33:04,080 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:33:04,080 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 19:33:04,080 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:33:04,108 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:04,109 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:04,111 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:04,111 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:04,111 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:04,111 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:33:04,111 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:04,111 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:04,112 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 19:33:04,116 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841065712">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841066288">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841066432">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841066576">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841066720">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841066864">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841067008">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:33:04,117 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:33:04,117 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 19:33:04,117 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:33:04,145 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:33:04,146 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:33:04,148 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:33:04,148 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:33:04,148 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:33:04,148 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:33:04,149 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cb43cbd3-60aa-43b4-9d71-a2bf119ea7b7'}
INFO - 2025-06-12 19:33:04,149 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:33:04,149 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:33:04,170 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "0z4nVAs9YY6YRrJV5fsU";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2273841067152">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2273841067584">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2273841067728">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2273841067872">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2273841068016">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2273841068160">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2273841068304">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;message&#39;: &#39;每页条数不能小于0&#39;,</pre>
<pre class="line before"><span class="ws">        </span>}), 400</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 读取用户数据</pre>
<pre class="line before"><span class="ws">    </span>user_data = read_json_data(DIR_BASE + &#39;/data/mockdata/user.json&#39;)</pre>
<pre class="line current"><span class="ws">    </span>users = user_data.get(&#39;RECORDS&#39;, [])
<span class="ws">    </span>        ^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 获取搜索条件</pre>
<pre class="line after"><span class="ws">    </span>username = res_json.get(&#39;username&#39;)</pre>
<pre class="line after"><span class="ws">    </span>start_create_time = res_json.get(&#39;startCreateTime&#39;)</pre>
<pre class="line after"><span class="ws">    </span>end_create_time = res_json.get(&#39;endCreateTime&#39;)</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 170, in find_all_users
    users = user_data.get(&#39;RECORDS&#39;, [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 170, in find_all_users
    users = user_data.get('RECORDS', [])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'get'


-->

ERROR - 2025-06-12 19:33:04,170 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;list&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes...
INFO - 2025-06-12 19:33:04,170 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 19:33:04,171 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 19:33:04,198 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,434 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:38:34,434 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:38:34,434 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,435 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:38:34,435 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:38:34,435 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,436 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:38:34,469 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"d10cd45d-023b-437c-b570-935191fb4a96","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:38:34,470 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:38:34,471 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:38:34,471 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:38:34,471 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,471 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,474 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,475 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,475 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,475 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:38:34,475 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,475 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,475 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:38:34,514 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:38:34,515 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:38:34,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:38:34,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:38:34,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:38:34,516 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,517 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,522 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,524 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,525 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,525 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,525 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:38:34,525 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,525 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,525 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:38:34,555 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:38:34,556 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:38:34,556 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:38:34,556 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:38:34,556 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,556 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,558 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,561 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,563 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:38:34,587 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:38:34,587 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:38:34,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:38:34,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:38:34,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,587 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,589 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,590 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,592 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,593 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,593 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,593 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:38:34,593 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,593 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,593 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:38:34,625 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:38:34,626 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 19:38:34,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:38:34,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:38:34,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 19:38:34,628 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,629 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,630 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,632 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,632 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,633 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,633 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:38:34,633 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,633 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,633 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:38:34,664 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:38:34,665 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:38:34,666 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,666 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,671 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,672 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,674 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,674 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,674 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,675 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:38:34,675 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,675 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,675 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:38:34,689 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:38:34,689 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:38:34,690 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:38:34,690 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:38:34,690 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:38:34,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:38:34,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:38:34,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:38:34,691 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:38:34,696 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:34,697 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:34,699 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:34,699 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:34,699 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:34,699 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:38:34,699 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:34,699 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:34,700 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:38:36,738 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:36,972 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:36,973 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:36,975 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:36,975 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:36,976 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:36,976 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:38:36,976 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:36,976 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:36,976 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:38:39,035 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:39,102 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:39,103 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:39,105 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
ERROR - 2025-06-12 19:38:41,149 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:41,223 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:41,225 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:41,227 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
ERROR - 2025-06-12 19:38:43,261 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:43,326 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:43,327 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:43,329 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:43,329 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:43,330 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:43,330 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:38:43,330 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:43,330 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:43,330 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:38:45,360 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:45,434 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:45,435 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:45,437 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:45,437 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:45,438 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:45,438 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:38:45,438 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:45,438 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:45,438 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:38:47,474 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:47,549 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:47,550 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:47,552 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:47,552 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:47,552 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:47,552 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:38:47,552 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:47,553 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:47,553 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:38:49,638 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:49,711 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:49,712 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:49,714 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:49,714 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:49,715 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:49,715 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:38:49,715 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:49,715 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:49,716 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
ERROR - 2025-06-12 19:38:51,762 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:51,836 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:51,837 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:51,839 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:51,839 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:51,839 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:51,839 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:38:51,839 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:51,840 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:51,840 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
ERROR - 2025-06-12 19:38:53,882 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:53,959 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:38:53,961 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd10cd45d-023b-437c-b570-935191fb4a96'}
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:38:53,963 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
ERROR - 2025-06-12 19:38:55,995 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:38:56,063 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:47,861 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:39:47,861 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:39:47,862 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:47,862 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:39:47,862 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:39:47,862 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:47,863 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:39:47,908 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"1fd9489e-ac9b-40e6-a60b-51e16a720279","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:39:47,911 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:39:47,912 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:39:47,912 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:39:47,912 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:47,913 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:47,917 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:47,917 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:47,917 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:47,918 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:39:47,918 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:47,918 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:47,918 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:39:47,943 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:39:47,943 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:39:47,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:39:47,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:39:47,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:47,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:39:47,945 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:47,946 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:47,960 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:47,964 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:47,964 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:47,964 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:47,964 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:39:47,964 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:47,965 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:47,965 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:39:47,998 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:39:47,998 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:39:47,998 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:39:47,998 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:39:47,999 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:47,999 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:48,000 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:48,006 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:48,008 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:48,008 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:48,009 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:48,009 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:39:48,009 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:48,009 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:48,009 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:39:48,016 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:39:48,017 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:39:48,017 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:39:48,017 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:39:48,017 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:48,017 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:48,018 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:48,021 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:48,023 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:48,023 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:48,023 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:48,024 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:39:48,024 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:48,024 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:48,024 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:39:48,054 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:39:48,054 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 19:39:48,055 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:39:48,055 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:39:48,056 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:48,056 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 19:39:48,056 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:48,067 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:48,069 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:48,071 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:48,071 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:48,071 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:48,071 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:39:48,071 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:48,072 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:48,072 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:39:48,085 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:39:48,086 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:39:48,086 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:39:48,086 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:39:48,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:48,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:39:48,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:39:48,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:39:48,088 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:48,088 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:48,098 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:48,100 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:48,103 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:48,103 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:48,103 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:48,103 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:39:48,104 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:48,104 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:48,104 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:39:48,156 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:39:48,157 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:39:48,157 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:39:48,157 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:39:48,158 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:48,158 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:39:48,159 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:39:48,159 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:39:48,159 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:39:48,160 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:39:48,177 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:48,178 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:48,181 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:48,181 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:48,182 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:48,182 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:39:48,182 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:48,182 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:48,182 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:39:50,228 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:39:50,473 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:50,474 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:50,476 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:50,476 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:50,477 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:50,477 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:39:50,477 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:50,477 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:50,477 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:39:52,516 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:39:52,586 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:52,587 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:52,589 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:52,589 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:52,589 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:52,590 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:39:52,590 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:52,590 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:52,590 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
ERROR - 2025-06-12 19:39:54,632 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:39:54,697 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:54,698 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:54,700 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:54,700 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:54,700 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:54,700 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:39:54,700 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:54,701 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:54,701 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
ERROR - 2025-06-12 19:39:56,753 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:39:56,821 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:56,822 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:56,824 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:56,825 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:56,825 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:56,825 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:39:56,825 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:56,825 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:56,825 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:39:58,888 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:39:58,956 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:39:58,957 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:39:58,959 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:39:58,960 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:39:58,960 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:39:58,960 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:39:58,960 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:39:58,960 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:39:58,960 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:40:00,999 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:40:01,069 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:40:01,071 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:40:01,072 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:40:01,073 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:40:01,073 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:40:01,073 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:40:01,073 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:40:01,073 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:40:01,073 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:40:03,137 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:40:03,213 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:40:03,215 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:40:03,218 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:40:03,218 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:40:03,218 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:40:03,218 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:40:03,219 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:40:03,219 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:40:03,219 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
ERROR - 2025-06-12 19:40:05,251 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:40:05,332 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:40:05,333 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:40:05,335 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:40:05,336 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:40:05,336 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:40:05,336 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:40:05,336 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:40:05,336 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:40:05,336 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
ERROR - 2025-06-12 19:40:07,384 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:40:07,454 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:40:07,455 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:40:07,457 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:40:07,458 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:40:07,458 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:40:07,458 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:40:07,458 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1fd9489e-ac9b-40e6-a60b-51e16a720279'}
INFO - 2025-06-12 19:40:07,458 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:40:07,458 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
ERROR - 2025-06-12 19:40:09,514 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:40:09,697 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,515 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:41:05,515 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:41:05,515 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,516 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:41:05,516 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:41:05,516 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,516 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:41:05,564 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"9cd716a9-2758-464f-8ca2-9135db8631ff","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:41:05,568 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:41:05,568 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:41:05,568 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:41:05,568 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,569 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,574 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,574 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,574 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,574 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:41:05,574 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,575 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,575 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:41:05,600 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:41:05,600 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:41:05,601 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:41:05,601 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:41:05,601 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,601 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:41:05,601 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,603 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,604 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,606 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,606 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,607 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,607 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:41:05,607 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,607 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,607 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:41:05,634 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:41:05,634 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:41:05,635 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:41:05,635 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:41:05,635 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,636 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,637 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,639 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,642 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,642 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,642 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,642 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:41:05,642 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,643 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,643 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:41:05,650 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:41:05,650 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:41:05,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:41:05,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:41:05,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,651 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,653 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,657 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,660 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,661 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,661 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,661 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:41:05,661 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,661 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,661 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:41:05,697 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:41:05,699 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 19:41:05,700 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:41:05,701 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:41:05,701 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,702 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 19:41:05,702 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,708 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,709 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,712 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,712 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,713 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,713 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:41:05,713 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,713 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,713 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:41:05,738 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:41:05,738 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:41:05,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:41:05,739 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:41:05,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:41:05,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:41:05,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:41:05,741 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,741 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,744 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,745 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,747 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,747 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,748 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,748 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:41:05,748 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,748 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,748 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:41:05,786 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:41:05,787 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:41:05,787 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:41:05,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:41:05,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,789 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:41:05,790 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:41:05,790 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:41:05,790 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:41:05,791 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:41:05,796 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:05,797 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:05,800 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:05,800 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:05,800 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:05,801 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:41:05,801 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:05,801 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:05,801 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:41:07,841 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:08,073 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:08,074 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:08,076 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:08,077 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:08,077 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:08,077 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:41:08,077 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:08,077 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:08,077 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:41:10,111 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:10,182 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:10,184 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:10,185 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:10,185 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:10,186 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:10,186 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:41:10,186 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:10,186 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:10,186 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
ERROR - 2025-06-12 19:41:12,225 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:12,294 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:12,296 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:12,297 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:12,298 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:12,298 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:12,298 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:41:12,298 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:12,298 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:12,298 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
ERROR - 2025-06-12 19:41:14,340 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:14,405 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:14,406 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:14,408 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:14,408 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:14,408 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:14,408 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:41:14,408 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:14,409 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:14,409 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:41:16,452 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:16,518 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:16,519 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:16,521 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:16,521 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:16,522 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:16,522 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:41:16,522 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:16,522 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:16,522 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:41:18,553 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:18,628 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:18,629 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:18,631 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:18,631 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:18,631 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:18,632 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:41:18,632 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:18,632 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:18,632 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:41:20,698 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:20,770 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:20,770 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:20,773 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
ERROR - 2025-06-12 19:41:22,827 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:22,899 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:22,900 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:22,902 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:22,902 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:22,902 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:22,902 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:41:22,902 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:22,903 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:22,903 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
ERROR - 2025-06-12 19:41:24,944 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:25,026 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:41:25,028 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:41:25,030 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:41:25,030 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:41:25,031 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:41:25,031 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:41:25,031 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9cd716a9-2758-464f-8ca2-9135db8631ff'}
INFO - 2025-06-12 19:41:25,031 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:41:25,031 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
ERROR - 2025-06-12 19:41:27,086 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:41:27,174 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,554 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 19:55:32,555 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 19:55:32,555 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,555 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 19:55:32,555 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 19:55:32,555 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,556 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 19:55:32,577 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"93213116-a2d4-4a34-b672-c6d15bd48670","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 19:55:32,578 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 19:55:32,578 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 19:55:32,578 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 19:55:32,578 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,579 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,581 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 19:55:32,617 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 19:55:32,618 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 19:55:32,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:55:32,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:55:32,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 19:55:32,619 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,620 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,625 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,627 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,627 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,628 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,628 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 19:55:32,628 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,628 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,628 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:55:32,637 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:55:32,637 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:55:32,637 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:55:32,638 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:55:32,638 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,638 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,640 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,642 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,644 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,645 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,645 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,645 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 19:55:32,645 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,645 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,645 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 19:55:32,671 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 19:55:32,671 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 19:55:32,672 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:55:32,673 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:55:32,673 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,673 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,675 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,677 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,680 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 19:55:32,718 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:55:32,719 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 19:55:32,720 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:55:32,721 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:55:32,721 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,722 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 19:55:32,722 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,727 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,729 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,732 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,732 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,733 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,733 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 19:55:32,733 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,733 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,733 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 19:55:32,767 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 19:55:32,768 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 19:55:32,768 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:55:32,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:55:32,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,770 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 19:55:32,770 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 19:55:32,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:55:32,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,771 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,776 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,777 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,778 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,779 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,779 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,779 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 19:55:32,779 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,779 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,779 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 19:55:32,806 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 19:55:32,807 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 19:55:32,808 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 19:55:32,808 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 19:55:32,808 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,809 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:55:32,810 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 19:55:32,810 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 19:55:32,811 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 19:55:32,811 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 19:55:32,817 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:32,818 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:32,820 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:32,820 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:32,820 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:32,820 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 19:55:32,820 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:32,820 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:32,821 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:55:34,859 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:35,084 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:35,085 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:35,087 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:55:37,131 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:37,199 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:37,200 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:37,202 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:37,202 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:37,202 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:37,202 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 19:55:37,203 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:37,203 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:37,203 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
ERROR - 2025-06-12 19:55:39,252 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:39,317 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:39,318 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:39,320 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:39,320 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:39,320 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:39,320 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 19:55:39,321 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:39,321 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:39,321 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
ERROR - 2025-06-12 19:55:41,369 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:41,438 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:41,439 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:41,441 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:41,441 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:41,442 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:41,442 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 19:55:41,442 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:41,442 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:41,443 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:55:43,485 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:43,555 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:43,556 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:43,558 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:43,558 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:43,558 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:43,558 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 19:55:43,559 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:43,559 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:43,559 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
ERROR - 2025-06-12 19:55:45,602 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:45,682 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:45,684 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:45,686 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
ERROR - 2025-06-12 19:55:47,769 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:47,837 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:47,838 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:47,840 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:47,840 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:47,841 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:47,841 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 19:55:47,841 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:47,841 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:47,841 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
ERROR - 2025-06-12 19:55:49,881 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:49,942 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:49,944 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:49,945 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:49,946 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:49,946 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:49,946 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 19:55:49,946 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:49,946 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:49,946 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
ERROR - 2025-06-12 19:55:51,982 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:52,051 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 19:55:52,052 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 19:55:52,053 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 19:55:52,054 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 19:55:52,054 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 19:55:52,054 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 19:55:52,054 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '93213116-a2d4-4a34-b672-c6d15bd48670'}
INFO - 2025-06-12 19:55:52,054 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 19:55:52,054 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
ERROR - 2025-06-12 19:55:54,114 - sendrequest.py:117 -[sendrequest:send_request] - ConnectionError--连接异常
INFO - 2025-06-12 19:55:54,182 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,289 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:01:15,289 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:01:15,289 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,290 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:01:15,290 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:01:15,290 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,291 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:01:15,325 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:01:15,326 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:01:15,326 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:01:15,326 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:01:15,326 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,327 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,329 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,329 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,329 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,329 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:01:15,329 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,329 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,330 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:01:15,366 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:01:15,367 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:01:15,368 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:01:15,368 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:01:15,368 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,368 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:01:15,368 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,370 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,373 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,375 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,375 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,375 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,375 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:01:15,375 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,375 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,376 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:01:15,409 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:01:15,409 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:01:15,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:01:15,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:01:15,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,410 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,411 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,413 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,415 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,416 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,416 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,416 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:01:15,416 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,416 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,416 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:01:15,452 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:01:15,452 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:01:15,453 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:01:15,453 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:01:15,454 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,454 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,456 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,459 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,461 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,461 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,461 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,462 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:01:15,462 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,462 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,462 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:01:15,502 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:01:15,503 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:01:15,504 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:01:15,505 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:01:15,506 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,507 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:01:15,507 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,510 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,511 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,513 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,513 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,514 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,514 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:01:15,514 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,514 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,514 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:01:15,567 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:01:15,568 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:01:15,568 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:01:15,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:01:15,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:01:15,570 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:01:15,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:01:15,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,571 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,577 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,578 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,580 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,580 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,580 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,580 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:01:15,580 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,580 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,581 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:01:15,625 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:01:15,626 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:01:15,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:01:15,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:01:15,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:01:15,629 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:01:15,629 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:01:15,630 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:01:15,630 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:01:15,634 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,636 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,638 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:01:15,652 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:15,652 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:15,653 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:15,653 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:15,837 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,838 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,840 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,840 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,841 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,841 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:01:15,841 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,841 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,841 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:01:15,869 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:15,869 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:15,870 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:15,870 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:15,900 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,902 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,904 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:01:15,930 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:15,930 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:15,930 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:15,931 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:15,958 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:15,959 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:15,962 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:01:15,975 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:15,976 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:15,976 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:15,977 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,001 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:16,002 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:16,004 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:16,004 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:16,005 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:16,005 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:01:16,005 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:16,005 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:16,005 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:01:16,007 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:16,007 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:16,007 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:16,007 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,036 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:16,037 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:16,039 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:16,039 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:16,039 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:16,040 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:01:16,040 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:16,040 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:16,040 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:01:16,053 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:16,053 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:16,053 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:16,053 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,078 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:16,079 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:16,081 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:01:16,100 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:16,100 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:16,100 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:16,100 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,124 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:16,125 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:16,128 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:01:16,146 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:16,146 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:16,146 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:01:16,146 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,172 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:16,173 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:16,175 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:01:16,192 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:16,193 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:16,193 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:01:16,193 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,218 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:01:16,219 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:01:16,221 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:01:16,221 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:01:16,221 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:01:16,221 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:01:16,222 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '45f6b0e9-8875-44c4-9b8d-13e4b3cfa7d7'}
INFO - 2025-06-12 20:01:16,222 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:01:16,222 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:01:16,239 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:01:16,239 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:01:16,239 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:01:16,239 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:01:16,268 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,120 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:02:00,121 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:02:00,121 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:02:00,121 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:02:00,121 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:02:00,121 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,122 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:02:00,154 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"367c843a-99dd-462e-9c6e-96eac0477943","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:02:00,155 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:02:00,155 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:02:00,155 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:02:00,155 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,156 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,158 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,158 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,159 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,159 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:02:00,159 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,159 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,159 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:02:00,190 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:02:00,190 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:02:00,190 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:02:00,191 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:02:00,191 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,191 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:02:00,191 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,192 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,196 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,197 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,197 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,197 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,198 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:02:00,198 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,198 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,198 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:02:00,237 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:02:00,237 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:02:00,237 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:02:00,237 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:02:00,238 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,238 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,239 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,241 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,243 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,243 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,243 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,243 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:02:00,243 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,243 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,244 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:02:00,274 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:02:00,275 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:02:00,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:02:00,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:02:00,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,276 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,277 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,280 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,282 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:02:00,312 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:02:00,313 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:02:00,313 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:02:00,314 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:02:00,314 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,314 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:02:00,315 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,319 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,320 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,337 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,338 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,339 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,339 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:02:00,339 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,339 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,339 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:02:00,400 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:02:00,400 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:02:00,400 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:02:00,401 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:02:00,401 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,402 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:02:00,402 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:02:00,402 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:02:00,403 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,403 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,407 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,408 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,411 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,412 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,412 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,412 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:02:00,412 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,412 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,412 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:02:00,473 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:02:00,473 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:02:00,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:02:00,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:02:00,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,475 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:02:00,475 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:02:00,475 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:02:00,476 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:02:00,476 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:02:00,481 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,483 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,486 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:02:00,488 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,489 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,489 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,489 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,672 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,673 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,675 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,675 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,675 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,675 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:02:00,675 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,676 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,676 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:02:00,698 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,698 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,698 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,699 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,727 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,728 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,730 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,730 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,730 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,730 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:02:00,731 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,731 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,731 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:02:00,744 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,744 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,745 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,745 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,768 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,770 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,771 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,772 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,772 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,772 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:02:00,772 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,772 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,772 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:02:00,774 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,774 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,774 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,774 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,800 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,801 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,803 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,803 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,803 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,804 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:02:00,804 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,804 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,804 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:02:00,821 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,822 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,822 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,822 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,847 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,848 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,850 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,850 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,850 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,850 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:02:00,850 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,850 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,851 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:02:00,868 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,868 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,868 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,868 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,897 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,898 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,900 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,900 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,900 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,901 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:02:00,901 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,901 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,901 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:02:00,914 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,914 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,915 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:00,915 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,942 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,944 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,946 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,946 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,946 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,946 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:02:00,946 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,947 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,947 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:02:00,960 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:00,960 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:00,961 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:02:00,961 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:00,989 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:00,990 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:00,992 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:00,992 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:00,992 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:00,992 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:02:00,992 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:00,993 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:00,993 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:02:01,007 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:01,007 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:01,007 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:02:01,007 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:01,034 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:02:01,035 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '367c843a-99dd-462e-9c6e-96eac0477943'}
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:02:01,037 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:02:01,053 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:02:01,054 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:02:01,054 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:02:01,054 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:02:01,079 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,372 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:03:08,372 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:03:08,372 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:03:08,372 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:03:08,373 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:03:08,373 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,373 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:03:08,388 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"1ba11d11-4c24-442f-ad9f-42f7d47b1222","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:03:08,389 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:03:08,390 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:03:08,390 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:03:08,390 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:03:08,390 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,393 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,393 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,393 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,394 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 20:03:08,394 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,394 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,394 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:03:08,407 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:03:08,408 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 20:03:08,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:03:08,408 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:03:08,408 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 20:03:08,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:03:08,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:03:08,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:03:08,409 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:03:08,414 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,415 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,417 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,417 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,417 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,417 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 20:03:08,417 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,417 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,418 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:03:08,458 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:03:08,459 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 20:03:08,459 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:03:08,459 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:03:08,460 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:03:08,460 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:03:08,460 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:03:08,461 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,465 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,467 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,467 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,468 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,468 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 20:03:08,468 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,468 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,468 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:03:08,483 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:03:08,483 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 20:03:08,483 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:03:08,483 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:03:08,484 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:03:08,484 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:03:08,484 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:03:08,488 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,489 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,491 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,491 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,491 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,491 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 20:03:08,491 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,491 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,492 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 20:03:08,504 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,505 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,505 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,505 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,694 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,695 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,697 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 20:03:08,722 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,722 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,722 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,723 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,751 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,752 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,754 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:03:08,768 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,768 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,768 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,768 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,795 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,796 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,798 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,798 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,799 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,799 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 20:03:08,799 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,799 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,799 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 20:03:08,814 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,814 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,815 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,815 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,841 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,842 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,843 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,844 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,844 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,844 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 20:03:08,844 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,844 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,844 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 20:03:08,847 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,847 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,847 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,847 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,871 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,872 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,874 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,874 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,874 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,875 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 20:03:08,875 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,875 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,875 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 20:03:08,892 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,892 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,892 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,893 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,918 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:03:08,919 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:03:08,921 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:03:08,921 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:03:08,921 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:03:08,922 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 20:03:08,922 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1ba11d11-4c24-442f-ad9f-42f7d47b1222'}
INFO - 2025-06-12 20:03:08,922 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:03:08,922 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 20:03:08,939 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:03:08,939 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:03:08,940 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:03:08,940 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:03:08,966 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,441 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:04:04,441 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:04:04,442 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:04:04,442 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:04:04,442 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:04:04,442 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,442 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:04:04,460 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"4944fa73-2328-45cf-95e3-ea74208afdc1","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:04:04,461 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:04:04,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:04,461 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:04,461 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:04,462 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,464 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,464 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,464 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,464 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 20:04:04,464 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,465 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,465 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:04:04,508 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:04:04,509 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 20:04:04,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:04,510 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:04,510 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 20:04:04,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:04:04,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:04:04,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:04:04,512 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:04,515 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,516 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,518 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,518 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,518 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,518 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 20:04:04,519 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,519 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,519 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:04:04,568 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:04:04,570 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 20:04:04,570 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:04,570 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:04,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:04:04,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:04:04,571 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:04,573 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,577 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,579 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,580 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,580 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,580 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 20:04:04,580 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,580 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,580 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:04:04,622 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:04:04,622 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 20:04:04,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:04,623 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:04,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:04:04,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:04:04,623 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:04,626 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,627 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,629 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,629 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,630 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,630 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 20:04:04,630 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,630 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,630 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 20:04:04,650 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:04,651 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:04,651 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:04,651 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:04,835 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,836 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,838 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,838 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,839 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,839 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 20:04:04,839 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,839 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,840 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 20:04:04,864 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:04,864 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:04,865 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:04,865 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:04,891 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,893 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,895 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,895 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,896 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,896 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 20:04:04,896 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,896 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,896 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:04:04,899 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:04,899 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:04,899 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:04,899 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:04,927 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,928 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,930 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,930 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,930 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,930 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 20:04:04,931 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,931 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,931 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 20:04:04,959 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:04,959 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:04,960 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:04,960 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:04,984 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:04,985 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:04,988 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 20:04:05,003 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:05,003 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:05,003 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:05,004 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:05,030 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:05,031 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:05,033 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 20:04:05,048 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:05,049 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:05,049 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:05,049 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:05,076 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:05,077 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:05,079 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:05,079 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:05,080 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:05,080 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 20:04:05,080 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '4944fa73-2328-45cf-95e3-ea74208afdc1'}
INFO - 2025-06-12 20:04:05,080 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:05,080 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 20:04:05,082 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:05,083 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:05,083 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:05,083 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:05,110 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:33,988 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:04:33,989 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:04:33,989 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:04:33,989 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:04:33,989 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:04:33,989 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:33,991 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:04:34,024 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f8be3e56-ae4b-4d87-b7d7-d80be94b11fe","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:04:34,025 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:04:34,025 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:34,025 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:34,025 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:34,026 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,028 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,028 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,028 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,028 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 20:04:34,029 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,029 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,029 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:04:34,063 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:04:34,064 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 20:04:34,064 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:34,064 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:34,064 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 20:04:34,065 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:04:34,065 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:04:34,066 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:04:34,066 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:34,067 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,068 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,070 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,070 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,070 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,071 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 20:04:34,071 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,071 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,071 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:04:34,107 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:04:34,107 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 20:04:34,108 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:34,108 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:34,108 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:04:34,108 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:04:34,108 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:34,110 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,113 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,115 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,115 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,116 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,116 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 20:04:34,116 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,116 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,116 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:04:34,164 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:04:34,164 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 20:04:34,165 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:04:34,165 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:04:34,166 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:04:34,167 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:04:34,167 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:04:34,168 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,169 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,171 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 20:04:34,198 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,198 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,199 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,199 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,383 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,384 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,386 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 20:04:34,389 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,389 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,389 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,389 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,414 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,415 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,417 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,417 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,417 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,417 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 20:04:34,418 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,418 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,418 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:04:34,420 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,420 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,420 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,420 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,449 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,449 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,451 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,451 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,451 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,452 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 20:04:34,452 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,452 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,452 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 20:04:34,477 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,477 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,477 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,477 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,504 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,506 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,508 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 20:04:34,523 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,523 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,524 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,524 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,549 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,550 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,552 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,552 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,552 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,552 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 20:04:34,552 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,552 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,553 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 20:04:34,569 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,570 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,570 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,570 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,599 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:04:34,600 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:04:34,601 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:04:34,602 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:04:34,602 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:04:34,602 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 20:04:34,602 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f8be3e56-ae4b-4d87-b7d7-d80be94b11fe'}
INFO - 2025-06-12 20:04:34,602 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:04:34,602 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 20:04:34,616 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

ERROR - 2025-06-12 20:04:34,616 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try agai...
INFO - 2025-06-12 20:04:34,616 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:04:34,617 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:04:34,644 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,518 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:07:15,518 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:07:15,518 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:07:15,518 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:07:15,518 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:07:15,518 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,519 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:07:15,570 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a42cfd00-97c6-4ee4-bf89-02244ae903a5","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:07:15,574 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:07:15,574 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:15,574 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:15,574 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,575 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,577 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,578 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,578 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,578 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 20:07:15,578 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,578 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,578 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:07:15,618 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:07:15,619 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 20:07:15,620 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:15,620 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:15,620 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 20:07:15,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:07:15,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:07:15,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:07:15,624 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,627 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,628 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,631 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,631 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,631 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,631 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 20:07:15,632 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,632 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,632 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:07:15,679 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:07:15,679 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 20:07:15,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:15,680 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:15,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:07:15,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:07:15,681 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,682 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,684 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,686 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,686 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,687 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,687 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 20:07:15,687 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,687 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,687 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:07:15,713 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:07:15,714 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 20:07:15,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:15,715 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:15,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:07:15,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:07:15,716 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,723 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,724 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,726 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 20:07:15,739 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:15,739 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:15,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 20:07:15,740 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:15,740 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:15,740 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,741 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,742 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,743 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,743 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,744 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,744 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 20:07:15,744 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,744 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,744 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 20:07:15,770 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:15,770 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:15,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 20:07:15,771 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:15,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:15,771 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,772 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,773 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,778 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:07:15,801 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:15,802 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:15,802 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
ERROR - 2025-06-12 20:07:15,802 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:15,802 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:15,802 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,805 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,806 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,810 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,810 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,810 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,811 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 20:07:15,811 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,811 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,811 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 20:07:15,831 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:15,832 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:15,832 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 20:07:15,832 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:15,832 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:15,832 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,833 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,835 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,837 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,838 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,838 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,838 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 20:07:15,838 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,838 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,838 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 20:07:15,840 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:15,841 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:15,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 20:07:15,841 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:15,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:15,842 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,842 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,843 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,845 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,845 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,845 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,845 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 20:07:15,845 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,846 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,846 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 20:07:15,863 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:15,864 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:15,864 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 20:07:15,864 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:15,864 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:15,865 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:15,866 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:15,868 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:15,871 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:15,871 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:15,871 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:15,872 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 20:07:15,872 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a42cfd00-97c6-4ee4-bf89-02244ae903a5'}
INFO - 2025-06-12 20:07:15,872 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:15,872 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 20:07:15,898 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "4j39y4xgd9UOrqNazfb2";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NameError</h1>
<div class="detail">
  <p class="errormsg">NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1576807477264">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1576807477840">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1576807477984">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1576807478128">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1576807478416">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1576807478272">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1576807478560">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">189</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 模拟数据 - 总记录数</pre>
<pre class="line before"><span class="ws">    </span>total_records = 12</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 计算分页信息</pre>
<pre class="line current"><span class="ws">    </span>total_pages = math.ceil(total_records / page_size) if page_size &gt; 0 else 0
<span class="ws">    </span>              ^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 检查页码是否超出范围</pre>
<pre class="line after"><span class="ws">    </span>if page_size &gt; 0 and current_page &gt; total_pages:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre>
<pre class="line after"><span class="ws">            </span>&#39;success&#39;: False,</pre></div>
</div>
</ul>
  <blockquote>NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 189, in find_all_users
    total_pages = math.ceil(total_records / page_size) if page_size &gt; 0 else 0
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 189, in find_all_users
    total_pages = math.ceil(total_records / page_size) if page_size > 0 else 0
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'math' is not defined. Did you forget to import 'math'


-->

ERROR - 2025-06-12 20:07:15,898 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href=...
INFO - 2025-06-12 20:07:15,899 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:07:15,899 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:07:16,085 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,734 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:07:30,734 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:07:30,734 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:07:30,735 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:07:30,735 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:07:30,735 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,735 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:07:30,762 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f377f03e-7f82-4b2f-a38d-03aa1eb98520","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:07:30,764 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:07:30,764 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:30,764 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:30,764 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,764 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,766 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,766 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,767 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,767 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 20:07:30,767 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,767 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,767 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:07:30,791 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:07:30,792 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 20:07:30,792 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:30,792 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:30,793 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 20:07:30,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:07:30,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:07:30,794 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:07:30,794 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,797 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,799 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,801 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:07:30,812 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:07:30,813 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 20:07:30,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:30,813 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:30,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:07:30,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:07:30,813 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,814 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,818 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,819 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,820 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,820 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,820 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 20:07:30,820 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,820 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,820 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:07:30,854 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:07:30,855 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 20:07:30,856 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:07:30,856 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:07:30,857 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:07:30,858 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:07:30,858 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,861 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,863 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,867 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 20:07:30,893 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:30,894 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:30,895 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 20:07:30,895 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:30,895 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:30,896 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,898 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,900 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,904 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,904 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,904 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,904 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 20:07:30,904 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,905 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,905 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 20:07:30,907 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:30,907 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:30,908 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 20:07:30,908 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:30,909 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:30,909 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,910 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,911 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,915 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,915 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,915 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,915 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 20:07:30,915 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,916 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,916 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:07:30,918 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:30,918 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:30,918 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
ERROR - 2025-06-12 20:07:30,918 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:30,918 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:30,918 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,919 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,920 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,921 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,921 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,922 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,922 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 20:07:30,922 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,922 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,923 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 20:07:30,937 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:30,938 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:30,938 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 20:07:30,938 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:30,938 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:30,938 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,940 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,944 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,947 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,947 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,947 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,948 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 20:07:30,948 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,948 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,948 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 20:07:30,970 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:30,970 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:30,970 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 20:07:30,971 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:30,971 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:30,972 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:30,973 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:30,975 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:30,980 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 20:07:30,999 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:07:31,000 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:07:31,000 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 20:07:31,000 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:07:31,000 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:07:31,001 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:07:31,001 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:07:31,002 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f377f03e-7f82-4b2f-a38d-03aa1eb98520'}
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:07:31,007 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 20:07:31,036 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "4j39y4xgd9UOrqNazfb2";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NameError</h1>
<div class="detail">
  <p class="errormsg">NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1576808551696">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1576808551984">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1576808552560">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1576808552272">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1576808551408">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1576808551840">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1576808551552">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">189</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 模拟数据 - 总记录数</pre>
<pre class="line before"><span class="ws">    </span>total_records = 12</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 计算分页信息</pre>
<pre class="line current"><span class="ws">    </span>total_pages = math.ceil(total_records / page_size) if page_size &gt; 0 else 0
<span class="ws">    </span>              ^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># 检查页码是否超出范围</pre>
<pre class="line after"><span class="ws">    </span>if page_size &gt; 0 and current_page &gt; total_pages:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre>
<pre class="line after"><span class="ws">            </span>&#39;success&#39;: False,</pre></div>
</div>
</ul>
  <blockquote>NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 189, in find_all_users
    total_pages = math.ceil(total_records / page_size) if page_size &gt; 0 else 0
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 189, in find_all_users
    total_pages = math.ceil(total_records / page_size) if page_size > 0 else 0
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'math' is not defined. Did you forget to import 'math'


-->

ERROR - 2025-06-12 20:07:31,036 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>NameError: name &#39;math&#39; is not defined. Did you forget to import &#39;math&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href=...
INFO - 2025-06-12 20:07:31,037 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:07:31,037 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:07:31,229 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,205 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:08:07,205 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:08:07,205 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:08:07,205 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:08:07,206 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:08:07,206 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,206 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:08:07,234 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"ba9bd318-3bb4-4e33-9197-11f2236a7416","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:08:07,235 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:08:07,236 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:08:07,236 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:08:07,236 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,236 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常查询第一页用户列表
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,238 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:08:07,251 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:08:07,252 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'eq': {'success': True}}, {'contains': {'state': 200}}, {'contains': {'content.pageNum': 1}}, {'contains': {'content.pageSize': 10}}]
INFO - 2025-06-12 20:08:07,252 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:08:07,252 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:08:07,253 - assertions.py:70 -[assertions:equal_assert] - 相等断言成功：接口实际结果：{'success': True}，等于预期结果：{'success': True}
INFO - 2025-06-12 20:08:07,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:07,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:08:07,254 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:08:07,254 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,258 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,259 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.查询第二页用户列表
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,261 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:08:07,284 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:08:07,284 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}]
INFO - 2025-06-12 20:08:07,284 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:08:07,285 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:08:07,285 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:07,285 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:08:07,285 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,287 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,288 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,291 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,291 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,291 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,291 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.每页显示5条数据
INFO - 2025-06-12 20:08:07,291 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,292 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,292 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:08:07,322 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:08:07,322 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}]
INFO - 2025-06-12 20:08:07,323 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:08:07,323 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:08:07,323 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:08:07,323 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:08:07,323 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,327 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,328 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,330 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,330 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,330 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,331 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.缺少必填参数currentPage
INFO - 2025-06-12 20:08:07,331 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,331 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,331 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10}}
INFO - 2025-06-12 20:08:07,353 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,354 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,354 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
ERROR - 2025-06-12 20:08:07,355 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,356 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,356 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,357 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,359 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,361 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,362 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,362 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,362 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.缺少必填参数pageSize
INFO - 2025-06-12 20:08:07,362 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,362 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,362 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1}}
INFO - 2025-06-12 20:08:07,384 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,385 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,385 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
ERROR - 2025-06-12 20:08:07,385 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,386 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,387 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,389 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,393 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,393 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,394 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,394 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.请求参数为空
INFO - 2025-06-12 20:08:07,394 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,394 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,394 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:08:07,414 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,415 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,415 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
ERROR - 2025-06-12 20:08:07,415 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,416 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,416 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,418 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,419 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,422 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,422 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,423 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,423 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.参数类型错误
INFO - 2025-06-12 20:08:07,423 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,423 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,423 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def'}}
INFO - 2025-06-12 20:08:07,446 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,446 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,446 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
ERROR - 2025-06-12 20:08:07,447 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,447 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,448 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,450 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.页码小于1
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,453 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10}}
INFO - 2025-06-12 20:08:07,455 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,455 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,456 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
ERROR - 2025-06-12 20:08:07,456 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,456 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,456 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,457 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,457 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.每页条数小于0
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,463 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1}}
INFO - 2025-06-12 20:08:07,490 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,491 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,491 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
ERROR - 2025-06-12 20:08:07,491 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,491 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,491 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,492 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:07,493 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:07,496 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：查询用户列表
INFO - 2025-06-12 20:08:07,496 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:07,496 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:07,496 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码超出范围
INFO - 2025-06-12 20:08:07,497 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ba9bd318-3bb4-4e33-9197-11f2236a7416'}
INFO - 2025-06-12 20:08:07,497 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:07,497 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 20:08:07,522 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:07,522 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'status_code': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:07,522 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
ERROR - 2025-06-12 20:08:07,522 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【400】,实际结果【400】
INFO - 2025-06-12 20:08:07,522 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:07,522 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:07,523 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,541 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:08:17,541 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:08:17,541 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:08:17,541 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:08:17,542 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:08:17,542 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,543 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:08:17,571 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"28ecd506-74f5-4a9e-9308-9874b456fb40","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:08:17,573 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:08:17,573 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:08:17,573 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:08:17,574 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,574 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,577 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:08:17,594 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:08:17,594 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:08:17,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:17,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:17,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:08:17,595 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,596 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,598 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,600 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,600 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,601 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,601 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:08:17,601 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,601 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,601 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:08:17,626 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:08:17,626 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:08:17,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:17,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:17,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,627 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,628 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,633 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,635 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:08:17,661 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:08:17,662 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:08:17,663 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:17,663 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:17,663 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,663 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,665 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,667 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,670 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,670 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,670 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,670 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:08:17,671 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,671 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,671 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:08:17,691 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:08:17,692 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:08:17,693 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:17,693 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:17,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:08:17,695 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,697 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,698 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,700 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:08:17,761 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:08:17,762 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:08:17,762 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:17,763 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:17,763 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,763 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:08:17,763 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:08:17,764 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,764 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,764 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,768 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,769 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,771 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,771 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,771 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,772 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:08:17,772 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,772 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,772 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:08:17,812 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:08:17,812 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:08:17,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:17,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:17,814 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,814 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:08:17,814 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:08:17,814 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:17,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,815 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,819 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,820 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,822 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,822 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,822 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,822 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:08:17,823 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,823 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,823 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:08:17,825 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:17,825 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:17,825 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:08:17,825 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:17,826 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,826 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,827 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,828 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,830 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:08:17,851 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:17,852 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:17,852 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:08:17,852 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:17,852 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,852 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,853 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,856 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,859 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,859 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,859 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,859 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:08:17,860 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,860 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,860 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:08:17,884 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:17,884 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:17,885 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:08:17,885 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:17,886 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,886 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,887 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,888 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,892 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,892 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,892 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,892 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:08:17,892 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,893 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,893 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:08:17,913 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:17,914 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:17,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:08:17,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:17,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,914 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,915 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,918 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,920 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,920 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,920 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,920 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:08:17,920 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,920 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,921 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:08:17,944 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:17,944 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:17,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:08:17,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:17,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,945 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,946 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,950 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,953 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,953 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,953 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,953 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:08:17,954 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,954 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,954 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:08:17,976 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:17,976 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:17,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:08:17,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:17,977 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:17,977 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:17,978 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:17,980 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:17,982 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:08:18,007 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:08:18,007 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:08:18,007 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 20:08:18,007 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:08:18,007 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:08:18,007 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:08:18,008 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:18,009 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:18,011 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:18,011 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:18,011 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:18,011 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:08:18,012 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:18,012 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:18,012 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:08:18,037 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:08:18,038 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 20:08:18,038 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:18,038 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:18,039 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 20:08:18,039 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[]】,实际结果为【[[{'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347555000, 'credentials_non_expired': None, 'id': 100030011, 'is_del': None, 'name': '1558888', 'password': '123456', 'phone': '1558888', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347655000, 'credentials_non_expired': None, 'id': 100030012, 'is_del': None, 'name': '1558889', 'password': '123456', 'phone': '1558889', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347755000, 'credentials_non_expired': None, 'id': 100030013, 'is_del': None, 'name': '1558890', 'password': '123456', 'phone': '1558890', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347855000, 'credentials_non_expired': None, 'id': 100030014, 'is_del': None, 'name': '1558891', 'password': '123456', 'phone': '1558891', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347955000, 'credentials_non_expired': None, 'id': 100030015, 'is_del': None, 'name': '1558892', 'password': '123456', 'phone': '1558892', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348055000, 'credentials_non_expired': None, 'id': 100030016, 'is_del': None, 'name': '1558893', 'password': '123456', 'phone': '1558893', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348155000, 'credentials_non_expired': None, 'id': 100030017, 'is_del': None, 'name': '1558894', 'password': '123456', 'phone': '1558894', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348255000, 'credentials_non_expired': None, 'id': 100030018, 'is_del': None, 'name': '1558895', 'password': '123456', 'phone': '1558895', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348355000, 'credentials_non_expired': None, 'id': 100030019, 'is_del': None, 'name': '1558896', 'password': '123456', 'phone': '1558896', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348455000, 'credentials_non_expired': None, 'id': 100030020, 'is_del': None, 'name': '1558897', 'password': '123456', 'phone': '1558897', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}]]】
ERROR - 2025-06-12 20:08:18,039 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 20:08:18,040 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:08:18,211 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:18,212 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:18,214 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:08:18,239 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:08:18,239 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:08:18,239 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【响应成功】
ERROR - 2025-06-12 20:08:18,240 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[200]】
ERROR - 2025-06-12 20:08:18,240 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
ERROR - 2025-06-12 20:08:18,240 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:08:18,251 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:08:18,252 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:08:18,254 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:08:18,254 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:08:18,255 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:08:18,255 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:08:18,255 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '28ecd506-74f5-4a9e-9308-9874b456fb40'}
INFO - 2025-06-12 20:08:18,255 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:08:18,255 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:08:18,270 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:08:18,271 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 20:08:18,271 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:08:18,272 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:08:18,272 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:08:18,272 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:08:18,273 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 20:08:18,273 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 20:08:18,273 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
INFO - 2025-06-12 20:08:18,274 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 20:08:18,274 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
INFO - 2025-06-12 20:08:18,274 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:08:18,275 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
INFO - 2025-06-12 20:08:18,275 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【8】,实际结果【[8]】
ERROR - 2025-06-12 20:08:18,275 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[1]】,实际结果为【[[1, 2]]】
ERROR - 2025-06-12 20:08:18,276 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:08:18,289 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,470 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:10:05,470 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:10:05,471 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:10:05,471 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:10:05,471 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:10:05,471 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,472 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:10:05,510 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"9e657832-9af2-4484-a495-40e67fc25f4e","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:10:05,511 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:10:05,511 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:10:05,512 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:10:05,512 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,512 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,514 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,514 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,514 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,514 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:10:05,514 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,515 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,515 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:10:05,530 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:10:05,530 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:10:05,530 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:10:05,531 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:10:05,531 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,531 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:10:05,531 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,532 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,533 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,535 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,536 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,536 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,536 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:10:05,536 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,536 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,536 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:10:05,573 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:10:05,573 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:10:05,574 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:10:05,574 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:10:05,574 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,575 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,576 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,578 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,580 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,580 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,580 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,580 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:10:05,580 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,581 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,581 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:10:05,611 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:10:05,611 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:10:05,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:10:05,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:10:05,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,612 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,613 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,615 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,617 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,617 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,617 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,617 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:10:05,617 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,617 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,618 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:10:05,648 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:10:05,649 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:10:05,650 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:10:05,650 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:10:05,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:10:05,652 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,654 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,655 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,657 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,657 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,657 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,657 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:10:05,657 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,657 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,658 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:10:05,691 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:10:05,692 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:10:05,693 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:10:05,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:10:05,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:10:05,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:10:05,695 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,695 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,695 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,700 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,701 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,703 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,703 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,704 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,704 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:10:05,704 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,704 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,704 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:10:05,716 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:10:05,717 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:10:05,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:10:05,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:10:05,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,718 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:10:05,718 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:10:05,718 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:10:05,718 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,718 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,724 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,725 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,727 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,727 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,727 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,727 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:10:05,727 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,727 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,728 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:10:05,742 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:10:05,742 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:10:05,743 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:10:05,743 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:10:05,743 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,743 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,744 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,749 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,751 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,751 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,751 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,751 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:10:05,752 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,752 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,752 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:10:05,754 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:10:05,754 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:10:05,754 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:10:05,754 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:10:05,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,755 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,755 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,757 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,759 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:10:05,773 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:10:05,773 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:10:05,773 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:10:05,773 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:10:05,773 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,773 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,774 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,775 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,777 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:10:05,804 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:10:05,804 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:10:05,805 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:10:05,805 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:10:05,805 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,805 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,806 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,809 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,813 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,813 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,813 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,813 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:10:05,814 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,814 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,814 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:10:05,835 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:10:05,835 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:10:05,836 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:10:05,836 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:10:05,836 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,836 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,837 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,838 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,842 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:10:05,845 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:10:05,845 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:10:05,845 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:10:05,845 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:10:05,845 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:10:05,845 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:10:05,846 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:05,851 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:05,853 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:10:05,855 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:10:05,855 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:10:05,856 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:10:05,856 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:10:05,856 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:10:05,856 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:10:06,025 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:06,025 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:06,027 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:06,027 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:06,027 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:06,028 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:10:06,028 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:06,028 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:06,028 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:10:06,030 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:10:06,030 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:10:06,030 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:10:06,031 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:10:06,031 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:10:06,031 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:10:06,043 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:06,044 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:06,046 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:10:06,066 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:10:06,067 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:10:06,067 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:10:06,067 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:10:06,067 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:10:06,067 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:10:06,078 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:10:06,079 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:10:06,080 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:10:06,081 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:10:06,081 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:10:06,081 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:10:06,081 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '9e657832-9af2-4484-a495-40e67fc25f4e'}
INFO - 2025-06-12 20:10:06,081 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:10:06,081 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:10:06,097 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:10:06,097 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:10:06,097 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:10:06,098 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:10:06,098 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:10:06,098 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:10:06,109 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,555 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:11:07,555 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:11:07,555 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:11:07,556 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:11:07,556 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:11:07,556 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,556 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:11:07,585 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"c6dd402c-8d25-40af-9bf2-ab162d893b1a","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:11:07,586 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:11:07,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:11:07,587 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:11:07,587 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,588 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,589 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,589 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,590 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,590 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:11:07,590 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,590 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,590 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:11:07,625 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:11:07,625 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:11:07,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:11:07,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:11:07,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:11:07,627 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,628 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,630 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,633 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:11:07,673 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:11:07,673 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:11:07,674 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:11:07,674 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:11:07,674 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,675 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,677 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,680 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,683 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,684 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,684 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,684 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:11:07,684 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,684 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,685 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:11:07,718 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:11:07,719 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:11:07,719 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:11:07,720 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:11:07,720 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,720 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,723 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,725 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,728 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,728 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,728 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,728 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:11:07,729 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,729 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,729 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:11:07,774 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:11:07,775 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:11:07,776 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:11:07,777 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:11:07,778 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,779 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:11:07,779 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,780 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,781 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,783 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,783 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,783 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,783 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:11:07,784 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,784 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,784 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:11:07,811 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:11:07,811 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:11:07,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:11:07,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:11:07,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:11:07,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:11:07,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,813 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,815 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,817 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,819 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,820 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,820 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,820 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:11:07,821 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,821 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,821 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:11:07,875 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:11:07,875 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:11:07,876 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:11:07,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:11:07,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:11:07,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:11:07,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:11:07,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,877 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,882 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,882 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,884 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,884 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,884 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,885 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:11:07,885 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,885 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,885 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:11:07,887 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:11:07,888 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:11:07,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:11:07,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:11:07,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,888 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,889 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,891 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,892 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,892 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,892 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,892 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:11:07,892 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,893 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,893 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:11:07,918 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:11:07,919 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:11:07,919 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:11:07,919 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:11:07,919 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,919 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,920 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,925 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,927 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,928 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,928 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,928 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:11:07,928 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,928 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,929 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:11:07,931 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:11:07,931 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:11:07,931 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:11:07,932 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:11:07,932 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,932 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,933 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,934 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,936 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,936 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,936 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,936 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:11:07,936 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,936 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,937 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:11:07,950 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:11:07,950 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:11:07,951 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:11:07,951 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:11:07,951 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,951 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,952 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,957 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,960 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,960 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,960 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,960 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:11:07,960 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,960 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,961 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:11:07,980 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:11:07,981 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:11:07,981 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:11:07,981 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:11:07,981 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:07,981 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:07,982 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:07,986 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:07,988 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:11:08,012 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:11:08,013 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:11:08,014 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:11:08,014 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:11:08,014 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:11:08,014 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:11:08,016 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:08,020 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:08,024 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:08,025 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:08,025 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:08,025 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:11:08,025 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:08,026 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:08,026 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:11:08,042 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:11:08,043 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:11:08,043 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:11:08,043 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:11:08,044 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:11:08,044 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:11:08,215 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:08,216 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:08,218 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:08,218 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:08,218 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:08,218 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:11:08,218 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:08,219 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:08,219 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:11:08,221 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:11:08,221 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:11:08,221 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:11:08,221 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:11:08,221 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:11:08,221 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:11:08,234 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:08,235 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:08,237 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:11:08,258 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:11:08,258 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:11:08,258 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:11:08,259 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:11:08,259 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:11:08,259 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:11:08,270 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:11:08,271 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c6dd402c-8d25-40af-9bf2-ab162d893b1a'}
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:11:08,273 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:11:08,275 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:11:08,275 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:11:08,276 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:11:08,276 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:11:08,276 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:11:08,276 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:11:08,286 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:12,981 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:12:12,981 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:12:12,982 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:12:12,982 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:12:12,982 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:12:12,982 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:12,982 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:12:13,001 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"be6a69af-6013-40bb-8f5b-cdc2e234f450","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:12:13,003 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:12:13,003 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:12:13,003 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:12:13,003 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,004 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,006 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,007 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,007 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,007 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:12:13,007 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,007 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,007 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:12:13,030 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:12:13,031 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:12:13,031 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:12:13,032 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:12:13,032 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,032 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:12:13,033 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,034 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,040 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,042 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:12:13,086 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:12:13,087 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:12:13,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:12:13,088 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:12:13,088 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,088 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,090 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,094 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,096 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,096 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,096 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,097 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:12:13,097 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,097 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,097 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:12:13,133 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:12:13,134 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:12:13,134 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:12:13,134 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:12:13,135 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,135 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,137 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,139 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,144 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,144 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,144 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,145 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:12:13,145 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,145 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,145 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:12:13,179 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:12:13,179 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:12:13,180 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:12:13,181 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:12:13,182 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,183 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:12:13,183 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,189 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,191 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,194 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,194 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,194 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,195 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:12:13,195 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,195 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,195 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:12:13,209 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:12:13,210 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:12:13,210 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:12:13,210 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:12:13,211 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,211 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:12:13,211 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:12:13,211 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,212 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,212 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,215 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,216 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,220 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,221 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,221 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,221 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:12:13,221 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,221 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,221 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:12:13,255 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:12:13,256 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:12:13,256 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:12:13,257 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:12:13,257 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,258 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:12:13,258 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:12:13,258 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:12:13,259 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,259 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,262 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,264 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,266 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,266 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,266 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,266 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:12:13,266 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,267 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,267 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:12:13,284 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:12:13,285 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:12:13,285 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:12:13,285 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:12:13,285 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,285 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,287 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,291 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,294 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:12:13,315 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:12:13,315 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:12:13,315 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:12:13,316 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:12:13,316 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,316 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,318 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,321 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,323 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,323 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,323 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,323 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:12:13,323 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,324 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,324 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:12:13,346 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:12:13,346 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:12:13,346 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:12:13,347 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:12:13,347 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,347 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,348 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,349 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,350 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,351 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,351 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,351 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:12:13,352 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,352 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,352 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:12:13,377 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:12:13,377 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:12:13,378 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:12:13,378 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:12:13,378 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,378 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,379 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,383 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,385 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,386 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,386 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,386 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:12:13,386 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,386 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,386 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:12:13,407 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:12:13,408 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:12:13,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:12:13,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:12:13,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,408 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,409 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,411 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,413 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,413 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,413 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,413 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:12:13,413 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,413 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,414 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:12:13,438 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:12:13,439 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:12:13,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:12:13,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:12:13,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:12:13,439 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:12:13,440 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,445 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,447 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:12:13,470 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:12:13,470 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:12:13,471 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:12:13,471 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:12:13,471 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:12:13,471 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:12:13,658 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,659 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,661 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:12:13,685 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:12:13,686 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:12:13,686 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:12:13,686 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:12:13,686 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:12:13,687 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:12:13,697 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,698 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,700 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,700 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,700 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,700 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:12:13,701 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,701 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,701 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:12:13,716 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:12:13,717 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:12:13,717 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:12:13,717 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:12:13,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:12:13,717 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:12:13,727 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:12:13,728 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:12:13,729 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:12:13,730 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:12:13,730 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:12:13,730 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:12:13,730 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'be6a69af-6013-40bb-8f5b-cdc2e234f450'}
INFO - 2025-06-12 20:12:13,730 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:12:13,730 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:12:13,749 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:12:13,749 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:12:13,750 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:12:13,750 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:12:13,750 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:12:13,750 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:12:13,763 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,471 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:13:25,471 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:13:25,471 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:13:25,471 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:13:25,472 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:13:25,472 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,472 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:13:25,488 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"2cdd6f93-aaa9-45fa-b450-cd5705b7fbef","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:13:25,489 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:13:25,489 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:13:25,489 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:13:25,489 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,490 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,492 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:13:25,524 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:13:25,525 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:13:25,525 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:13:25,525 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:13:25,526 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,526 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:13:25,526 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,527 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,530 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,532 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,532 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,532 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,532 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:13:25,532 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,533 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,533 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:13:25,550 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:13:25,551 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:13:25,551 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:13:25,551 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:13:25,551 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,551 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,553 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,554 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,556 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:13:25,570 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:13:25,571 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:13:25,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:13:25,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:13:25,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,571 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,572 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,574 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,576 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:13:25,606 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:13:25,607 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:13:25,608 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:13:25,609 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:13:25,610 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,611 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:13:25,611 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,614 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,615 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,618 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,618 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,618 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,619 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:13:25,619 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,619 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,619 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:13:25,650 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:13:25,651 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:13:25,652 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:13:25,652 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:13:25,653 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,653 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:13:25,654 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:13:25,654 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,654 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,655 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,660 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,661 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,664 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,665 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,665 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,665 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:13:25,665 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,665 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,666 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:13:25,678 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:13:25,679 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:13:25,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:13:25,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:13:25,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:13:25,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:13:25,681 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:13:25,681 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,681 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,685 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,686 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,688 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,688 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,688 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,688 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:13:25,689 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,689 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,689 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:13:25,716 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:13:25,716 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:13:25,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:13:25,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:13:25,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,717 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,719 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,721 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,723 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,723 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,723 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,723 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:13:25,724 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,724 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,724 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:13:25,746 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:13:25,746 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:13:25,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:13:25,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:13:25,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,747 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,748 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,749 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,751 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:13:25,754 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:13:25,754 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:13:25,754 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:13:25,754 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:13:25,754 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,754 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,755 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,756 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,759 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,759 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,759 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,760 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:13:25,760 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,760 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,760 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:13:25,762 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:13:25,762 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:13:25,762 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:13:25,762 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:13:25,762 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,762 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,763 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,765 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,767 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:13:25,769 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:13:25,769 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:13:25,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:13:25,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:13:25,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,769 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,770 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,772 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,774 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:13:25,793 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:13:25,793 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:13:25,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:13:25,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:13:25,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:13:25,793 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:13:25,794 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,796 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,798 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:13:25,824 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:13:25,824 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:13:25,825 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:13:25,825 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:13:25,825 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:13:25,825 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:13:25,994 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:25,995 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:25,997 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:13:26,000 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:13:26,000 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:13:26,000 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:13:26,000 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:13:26,000 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:13:26,000 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:13:26,012 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:26,013 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:26,015 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:26,015 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:26,015 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:26,015 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:13:26,015 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:26,015 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:26,016 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:13:26,041 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:13:26,041 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:13:26,042 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:13:26,042 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:13:26,043 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:13:26,043 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:13:26,058 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:13:26,059 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:13:26,061 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:13:26,061 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:13:26,061 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:13:26,061 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:13:26,061 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '2cdd6f93-aaa9-45fa-b450-cd5705b7fbef'}
INFO - 2025-06-12 20:13:26,062 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:13:26,062 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:13:26,064 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:13:26,064 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:13:26,064 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:13:26,064 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:13:26,065 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:13:26,065 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:13:26,077 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,004 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:15:41,005 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:15:41,005 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:15:41,005 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:15:41,005 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:15:41,005 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,006 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:15:41,054 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"ce766202-7fae-4533-929c-8273d3d598bc","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:15:41,056 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:15:41,056 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:15:41,056 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:15:41,056 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,057 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,060 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,061 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,061 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,061 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:15:41,061 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,061 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,061 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:15:41,091 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:15:41,092 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:15:41,092 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:15:41,093 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:15:41,093 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,093 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:15:41,093 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,094 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,099 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,100 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,101 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,101 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,101 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:15:41,101 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,101 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,101 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:15:41,128 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:15:41,128 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:15:41,128 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:15:41,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:15:41,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,129 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,130 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,132 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,135 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,135 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,136 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,136 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:15:41,136 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,136 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,137 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:15:41,168 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:15:41,169 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:15:41,169 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:15:41,169 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:15:41,170 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,170 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,172 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,176 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,179 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,179 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,180 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,180 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:15:41,181 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,181 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,181 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:15:41,217 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:15:41,218 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:15:41,219 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:15:41,219 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:15:41,220 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,220 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:15:41,221 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,226 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,228 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,230 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,231 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,231 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,231 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:15:41,231 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,231 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,231 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:15:41,262 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:15:41,263 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:15:41,264 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:15:41,264 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:15:41,264 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,264 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:15:41,265 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:15:41,265 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,266 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,266 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,270 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,272 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,274 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,275 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,275 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,275 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:15:41,275 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,275 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,275 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:15:41,297 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:15:41,297 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:15:41,298 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:15:41,298 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:15:41,298 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,299 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:15:41,299 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:15:41,300 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:15:41,300 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,300 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,306 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,307 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,309 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:15:41,329 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:15:41,329 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:15:41,329 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:15:41,330 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:15:41,330 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,330 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,331 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,335 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,337 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:15:41,359 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:15:41,360 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:15:41,360 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:15:41,360 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:15:41,360 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,360 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,362 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,365 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,367 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,368 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,368 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,368 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:15:41,368 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,368 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,368 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:15:41,390 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:15:41,391 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:15:41,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:15:41,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:15:41,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,392 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,394 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,395 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,400 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,400 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,401 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,401 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:15:41,401 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,401 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,402 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:15:41,405 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:15:41,405 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:15:41,406 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:15:41,406 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:15:41,406 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,406 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,407 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,410 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,412 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,412 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,413 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,413 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:15:41,413 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,413 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,413 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:15:41,436 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:15:41,437 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:15:41,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:15:41,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:15:41,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,437 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,439 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,440 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,443 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,444 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,444 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,444 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:15:41,444 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,444 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,444 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:15:41,447 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:15:41,447 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:15:41,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:15:41,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:15:41,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:15:41,447 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:15:41,448 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,449 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,451 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:15:41,453 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:15:41,453 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:15:41,454 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'】
ERROR - 2025-06-12 20:15:41,454 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:15:41,454 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:15:41,454 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:15:41,630 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,631 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,633 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,634 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,634 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,634 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:15:41,634 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,634 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,634 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:15:41,637 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:15:41,637 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:15:41,637 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'】
ERROR - 2025-06-12 20:15:41,637 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:15:41,637 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:15:41,637 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:15:41,649 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,650 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,652 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,652 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,652 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,652 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:15:41,652 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,653 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,653 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:15:41,668 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:15:41,668 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:15:41,668 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'】
ERROR - 2025-06-12 20:15:41,669 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:15:41,669 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:15:41,669 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:15:41,679 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:15:41,680 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:15:41,682 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:15:41,682 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:15:41,682 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:15:41,683 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:15:41,683 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce766202-7fae-4533-929c-8273d3d598bc'}
INFO - 2025-06-12 20:15:41,683 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:15:41,683 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:15:41,699 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:15:41,699 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:15:41,700 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'mock_server/api_server/data/mockdata/user.json'】
ERROR - 2025-06-12 20:15:41,700 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:15:41,700 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:15:41,700 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:15:41,714 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,557 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:19:53,557 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:19:53,558 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:19:53,558 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:19:53,558 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:19:53,558 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,559 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:19:53,571 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"62e07d06-336a-4936-b6a5-30b83b1f5e16","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:19:53,573 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:19:53,573 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:19:53,573 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:19:53,573 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,573 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,576 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:19:53,612 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:19:53,612 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:19:53,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:19:53,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:19:53,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:19:53,613 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,614 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,615 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,617 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,617 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,617 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,617 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:19:53,618 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,618 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,618 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:19:53,656 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:19:53,657 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:19:53,657 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:19:53,657 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:19:53,657 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,657 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,658 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,659 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,662 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,662 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,663 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,663 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:19:53,663 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,663 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,663 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:19:53,675 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:19:53,675 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:19:53,675 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:19:53,676 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:19:53,676 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,676 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,677 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,679 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,681 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,681 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,681 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,681 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:19:53,681 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,681 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,682 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:19:53,713 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:19:53,714 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:19:53,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:19:53,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:19:53,719 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,719 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:19:53,720 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,723 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,724 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,726 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,726 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,727 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,727 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:19:53,727 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,727 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,727 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:19:53,758 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:19:53,759 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:19:53,760 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:19:53,760 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:19:53,761 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,761 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:19:53,762 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:19:53,763 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,763 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,763 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,768 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,770 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,773 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,773 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,773 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,773 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:19:53,774 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,774 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,774 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:19:53,810 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:19:53,811 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:19:53,811 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:19:53,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:19:53,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,814 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:19:53,814 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:19:53,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:19:53,816 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,816 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,819 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,821 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,823 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,824 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,824 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,824 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:19:53,824 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,824 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,825 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:19:53,828 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:19:53,828 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:19:53,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:19:53,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:19:53,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,828 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,829 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,830 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,832 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,832 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,832 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,832 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:19:53,832 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,832 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,833 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:19:53,856 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:19:53,857 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:19:53,857 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:19:53,857 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:19:53,857 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,858 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,860 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,863 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,867 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,867 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,867 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,868 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:19:53,868 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,868 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,868 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:19:53,887 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:19:53,887 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:19:53,887 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:19:53,887 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:19:53,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,888 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,889 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,890 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,895 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,895 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,895 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,895 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:19:53,895 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,896 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,896 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:19:53,917 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:19:53,917 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:19:53,917 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:19:53,917 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:19:53,918 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,918 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,919 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,921 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,923 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:19:53,949 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:19:53,949 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:19:53,949 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:19:53,949 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:19:53,949 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,949 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,950 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,954 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,956 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:19:53,979 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:19:53,980 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:19:53,980 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:19:53,980 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:19:53,980 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:19:53,981 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:19:53,982 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:53,983 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:53,986 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:53,986 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:53,986 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:53,986 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:19:53,986 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:53,987 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:53,987 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:19:53,989 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:19:53,989 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:19:53,989 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:19:53,989 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:19:53,989 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:19:53,989 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:19:54,163 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:54,164 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:54,166 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:19:54,180 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:19:54,180 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:19:54,180 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:19:54,180 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:19:54,181 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:19:54,181 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:19:54,192 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:54,193 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:54,194 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:54,194 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:54,194 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:54,195 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:19:54,195 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:54,195 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:54,195 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:19:54,210 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:19:54,210 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:19:54,210 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:19:54,210 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:19:54,210 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:19:54,210 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:19:54,221 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:19:54,222 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:19:54,224 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:19:54,224 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:19:54,224 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:19:54,224 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:19:54,224 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '62e07d06-336a-4936-b6a5-30b83b1f5e16'}
INFO - 2025-06-12 20:19:54,225 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:19:54,225 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:19:54,241 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\tocode\\\\Project\\\\cursor\\\\Test_API_Framework\\\\mock_server\\\\api_server\\\\base\\\\data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:19:54,242 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:19:54,242 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\tocode\\Project\\cursor\\Test_API_Framework\\mock_server\\api_server\\base\\data/mockdata/user.json'】
ERROR - 2025-06-12 20:19:54,242 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:19:54,242 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:19:54,242 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:19:54,251 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,122 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:23:44,123 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:23:44,123 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:23:44,123 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:23:44,123 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:23:44,123 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,124 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:23:44,167 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"ed80c255-70b1-47d8-a2d9-f34824eeaa15","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:23:44,169 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:23:44,169 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:23:44,170 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:23:44,170 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,170 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,173 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,174 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,174 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,174 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:23:44,174 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,175 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,175 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:23:44,192 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:23:44,193 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:23:44,193 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:23:44,193 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:23:44,193 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,194 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:23:44,194 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,195 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,197 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,199 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:23:44,235 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:23:44,235 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:23:44,235 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:23:44,236 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:23:44,236 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,236 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,238 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,241 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,243 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,243 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,243 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,243 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:23:44,244 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,244 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,244 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:23:44,252 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:23:44,252 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:23:44,252 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:23:44,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:23:44,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,253 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,254 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,259 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,261 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:23:44,368 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:23:44,368 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:23:44,369 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:23:44,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:23:44,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,371 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:23:44,371 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,376 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,378 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,380 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:23:44,462 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:23:44,462 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:23:44,462 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:23:44,462 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:23:44,462 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:23:44,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:23:44,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,463 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,463 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,469 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,470 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,472 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,472 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,472 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,472 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:23:44,473 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,473 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,473 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:23:44,533 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:23:44,533 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:23:44,534 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:23:44,534 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:23:44,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:23:44,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:23:44,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:23:44,536 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,536 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,539 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,540 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,542 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,542 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,542 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,543 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:23:44,543 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,543 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,543 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:23:44,566 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:23:44,566 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:23:44,567 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:23:44,567 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:23:44,567 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,567 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,568 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,569 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,572 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:23:44,597 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:23:44,598 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:23:44,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:23:44,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:23:44,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,598 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,599 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,600 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,602 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,602 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,602 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,602 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:23:44,602 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,603 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,603 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:23:44,629 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:23:44,629 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:23:44,629 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:23:44,629 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:23:44,630 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,630 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,631 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,632 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,635 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:23:44,660 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:23:44,660 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:23:44,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:23:44,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:23:44,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,660 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,661 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,666 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,668 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:23:44,690 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:23:44,691 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:23:44,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:23:44,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:23:44,691 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,691 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,692 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,694 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,696 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,696 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,696 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,696 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:23:44,696 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,697 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,697 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:23:44,721 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:23:44,722 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:23:44,722 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:23:44,722 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:23:44,722 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:23:44,722 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:23:44,723 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,724 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,727 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:23:44,730 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:23:44,730 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:23:44,730 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:23:44,730 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:23:44,730 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:23:44,731 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:23:44,925 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,926 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,928 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,928 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,929 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,929 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:23:44,929 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,929 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,929 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:23:44,953 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:23:44,953 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:23:44,953 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:23:44,954 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:23:44,954 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:23:44,954 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:23:44,966 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,967 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,969 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,969 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,969 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,969 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:23:44,969 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,970 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,970 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:23:44,984 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:23:44,984 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:23:44,984 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:23:44,985 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:23:44,985 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:23:44,985 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:23:44,995 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:23:44,996 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:23:44,998 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:23:44,998 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:23:44,998 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:23:44,998 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:23:44,999 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ed80c255-70b1-47d8-a2d9-f34824eeaa15'}
INFO - 2025-06-12 20:23:44,999 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:23:44,999 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:23:45,014 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:23:45,015 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:23:45,015 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:23:45,015 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:23:45,015 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:23:45,015 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:23:45,025 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:32,904 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:25:32,904 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:25:32,904 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:25:32,904 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:25:32,905 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:25:32,905 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:32,905 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:25:32,946 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"c24e520e-67a5-41af-8353-f417440540b6","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:25:32,948 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:25:32,948 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:25:32,948 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:25:32,948 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:32,949 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:32,951 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:32,952 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:32,952 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:32,952 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:25:32,952 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:32,952 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:32,952 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:25:32,984 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:25:32,984 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:25:32,984 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:25:32,984 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:25:32,985 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:32,985 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:25:32,985 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:32,986 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:32,991 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:32,993 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:25:33,010 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:25:33,011 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:25:33,011 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:25:33,011 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:25:33,011 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,011 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,013 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,014 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,016 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,016 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,016 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,016 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:25:33,016 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,017 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,017 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:25:33,050 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:25:33,050 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:25:33,050 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:25:33,050 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:25:33,050 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,050 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,051 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,053 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,055 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,055 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,055 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,055 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:25:33,055 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,055 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,056 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:25:33,076 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:25:33,077 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:25:33,077 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:25:33,077 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:25:33,078 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,078 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:25:33,078 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,082 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,083 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,085 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,085 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,085 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,085 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:25:33,085 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,086 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,086 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:25:33,122 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:25:33,123 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:25:33,123 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:25:33,124 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:25:33,124 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,125 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:25:33,125 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:25:33,126 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,126 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,126 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,129 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,131 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,134 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,134 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,134 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,134 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:25:33,134 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,134 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,135 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:25:33,179 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:25:33,179 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:25:33,179 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:25:33,180 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:25:33,180 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,180 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:25:33,180 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:25:33,181 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:25:33,181 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,181 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,184 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,185 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,187 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,187 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,187 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,187 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:25:33,188 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,188 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,188 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:25:33,210 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:25:33,210 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:25:33,210 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:25:33,211 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:25:33,211 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,211 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,212 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,213 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,216 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,216 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,216 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,216 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:25:33,217 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,217 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,217 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:25:33,241 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:25:33,241 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:25:33,241 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:25:33,241 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:25:33,241 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,241 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,242 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,243 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,245 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,245 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,245 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,245 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:25:33,245 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,245 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,246 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:25:33,271 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:25:33,271 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:25:33,271 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:25:33,271 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:25:33,271 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,272 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,272 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,273 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,279 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,279 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,279 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,280 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:25:33,280 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,280 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,280 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:25:33,302 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:25:33,302 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:25:33,302 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:25:33,303 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:25:33,303 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,303 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,304 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,304 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,306 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,307 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,307 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,307 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:25:33,307 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,307 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,307 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:25:33,310 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:25:33,310 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:25:33,310 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:25:33,310 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:25:33,310 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,310 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,311 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,312 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,314 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,314 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,314 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,314 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:25:33,315 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,315 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,315 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:25:33,333 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:25:33,333 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:25:33,333 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:25:33,333 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:25:33,333 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:25:33,333 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:25:33,334 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,335 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,337 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,337 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,337 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,337 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:25:33,337 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,337 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,338 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:25:33,340 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:25:33,340 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:25:33,340 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:25:33,340 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:25:33,340 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:25:33,340 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:25:33,518 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,519 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,521 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,521 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,521 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,521 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:25:33,521 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,521 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,522 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:25:33,534 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:25:33,534 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:25:33,534 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:25:33,534 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:25:33,534 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:25:33,535 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:25:33,547 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,548 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,550 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:25:33,565 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:25:33,565 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:25:33,565 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:25:33,565 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:25:33,566 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:25:33,566 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:25:33,577 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:25:33,578 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:25:33,580 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:25:33,581 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:25:33,581 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:25:33,581 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:25:33,581 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c24e520e-67a5-41af-8353-f417440540b6'}
INFO - 2025-06-12 20:25:33,581 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:25:33,581 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:25:33,595 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:25:33,596 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:25:33,596 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:25:33,596 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:25:33,596 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:25:33,596 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:25:33,607 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:01,901 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:28:01,901 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:28:01,901 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:28:01,901 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:28:01,901 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:28:01,901 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:01,902 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:28:01,941 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:28:01,944 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:28:01,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:28:01,944 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:28:01,944 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:01,945 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:01,948 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:01,948 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:01,948 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:01,949 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:28:01,949 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:01,949 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:01,949 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:28:01,981 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:28:01,981 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:28:01,982 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:28:01,982 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:28:01,982 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:01,983 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:28:01,983 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:01,985 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:01,986 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:01,988 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:01,988 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:01,988 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:01,989 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:28:01,989 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:01,989 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:01,989 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:28:02,019 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:28:02,020 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:28:02,020 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:28:02,021 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:28:02,021 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,022 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,023 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,026 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,028 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,029 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,029 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,029 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:28:02,030 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,030 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,030 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:28:02,036 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:28:02,036 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:28:02,036 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:28:02,037 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:28:02,037 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,037 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,038 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,039 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,041 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,041 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,041 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,041 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:28:02,041 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,042 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,042 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:28:02,070 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:28:02,070 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:28:02,071 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:28:02,072 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:28:02,072 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,073 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:28:02,073 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,078 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,079 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,082 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,082 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,082 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,082 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:28:02,082 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,084 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,084 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:28:02,117 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:28:02,118 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:28:02,118 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:28:02,119 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:28:02,120 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,120 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:28:02,121 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:28:02,121 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,122 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,122 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,128 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,130 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,133 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,134 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,134 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,134 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:28:02,134 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,134 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,134 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:28:02,148 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:28:02,149 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:28:02,149 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:28:02,150 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:28:02,150 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,151 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:28:02,151 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:28:02,152 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:28:02,152 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,152 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,154 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,155 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,157 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:28:02,183 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:28:02,183 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:28:02,184 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:28:02,184 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:28:02,184 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,184 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,185 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,188 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,190 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,190 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,190 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,191 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:28:02,191 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,191 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,191 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:28:02,213 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:28:02,214 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:28:02,214 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:28:02,215 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:28:02,215 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,215 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,217 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,218 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,221 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,221 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,221 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,221 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:28:02,222 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,222 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,222 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:28:02,244 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:28:02,244 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:28:02,244 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:28:02,244 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:28:02,244 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,244 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,245 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,246 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,249 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:28:02,251 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:28:02,251 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:28:02,251 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:28:02,252 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:28:02,252 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,252 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,252 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,254 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,256 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:28:02,257 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:28:02,257 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:28:02,258 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:28:02,258 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:28:02,258 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,258 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,259 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,261 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,263 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,263 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,263 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,263 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:28:02,263 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,263 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,264 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:28:02,290 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:28:02,290 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:28:02,290 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:28:02,290 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:28:02,290 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:28:02,290 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:28:02,291 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,296 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,298 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,298 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,298 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,298 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:28:02,298 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,299 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,299 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:28:02,321 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\data\\\\mockdata\\\\user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:28:02,322 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:28:02,322 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\data\\mockdata\\user.json'】
ERROR - 2025-06-12 20:28:02,322 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:28:02,322 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:28:02,323 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:28:02,489 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,490 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,493 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,493 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,493 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,493 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:28:02,493 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,493 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,494 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:28:02,496 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\data\\\\mockdata\\\\user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:28:02,496 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:28:02,496 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\data\\mockdata\\user.json'】
ERROR - 2025-06-12 20:28:02,496 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:28:02,496 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:28:02,497 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:28:02,510 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,511 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,513 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,513 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,513 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,514 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:28:02,514 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,514 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,514 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:28:02,516 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\data\\\\mockdata\\\\user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:28:02,517 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:28:02,517 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\data\\mockdata\\user.json'】
ERROR - 2025-06-12 20:28:02,517 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:28:02,517 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:28:02,517 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:28:02,529 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:28:02,530 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f3c24ed8-5a7e-48fa-8d74-6ced1d3000ba'}
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:28:02,532 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:28:02,534 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:\\\\data\\\\mockdata\\\\user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:28:02,534 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:28:02,534 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:\\data\\mockdata\\user.json'】
ERROR - 2025-06-12 20:28:02,535 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:28:02,535 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:28:02,535 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:28:02,544 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,329 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:29:32,330 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:29:32,330 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:29:32,330 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:29:32,330 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:29:32,330 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,331 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:29:32,364 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"85bec86a-eb1c-4a8b-bac4-0889b83b6219","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:29:32,366 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:29:32,366 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:29:32,366 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:29:32,367 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,367 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,370 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,371 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,371 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,371 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:29:32,371 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,371 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,371 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:29:32,413 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:29:32,414 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:29:32,414 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:29:32,415 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:29:32,416 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,416 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:29:32,416 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,418 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,420 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,422 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,422 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,422 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,422 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:29:32,423 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,423 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,423 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:29:32,450 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:29:32,451 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:29:32,451 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:29:32,451 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:29:32,452 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,452 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,453 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,454 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,456 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,456 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,457 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,457 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:29:32,457 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,457 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,457 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:29:32,491 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:29:32,491 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:29:32,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:29:32,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:29:32,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,492 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,493 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,494 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,496 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,496 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,496 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,496 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:29:32,496 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,497 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,497 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:29:32,551 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:29:32,552 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:29:32,552 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:29:32,554 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:29:32,554 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,555 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:29:32,555 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,560 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,561 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,564 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:29:32,595 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:29:32,596 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:29:32,597 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:29:32,597 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:29:32,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,598 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:29:32,599 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:29:32,599 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,600 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,600 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,606 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,607 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,610 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,610 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,610 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,611 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:29:32,611 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,611 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,611 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:29:32,646 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:29:32,646 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:29:32,647 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:29:32,647 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:29:32,647 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,647 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:29:32,647 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:29:32,648 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:29:32,648 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,648 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,652 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,653 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,655 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,656 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,656 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,656 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:29:32,657 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,657 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,657 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:29:32,676 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:29:32,676 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:29:32,677 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:29:32,677 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:29:32,677 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,677 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,678 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,682 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,684 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,684 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,685 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,685 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:29:32,685 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,685 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,685 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:29:32,707 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:29:32,707 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:29:32,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:29:32,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:29:32,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,707 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,708 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,711 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,713 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,713 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,714 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,714 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:29:32,714 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,714 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,714 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:29:32,738 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:29:32,738 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:29:32,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:29:32,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:29:32,739 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,739 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,740 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,740 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,742 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,742 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,742 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,742 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:29:32,743 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,743 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,743 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:29:32,745 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:29:32,745 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:29:32,745 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:29:32,745 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:29:32,745 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,745 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,746 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,747 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,749 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,749 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,749 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,750 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:29:32,750 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,750 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,750 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:29:32,768 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:29:32,769 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:29:32,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:29:32,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:29:32,769 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,769 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,770 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,775 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,777 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:29:32,779 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:29:32,780 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:29:32,780 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:29:32,780 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:29:32,780 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:29:32,780 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:29:32,781 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,784 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,785 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,785 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,785 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,786 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:29:32,786 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,786 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,786 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:29:32,799 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:29:32,799 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:29:32,800 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:29:32,800 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:29:32,800 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:29:32,800 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:29:32,977 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,978 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,980 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,981 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,981 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,981 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:29:32,981 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,981 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:32,981 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:29:32,983 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:29:32,983 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:29:32,984 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:29:32,984 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:29:32,984 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:29:32,984 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:29:32,996 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:32,997 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:32,999 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:32,999 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:32,999 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:32,999 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:29:32,999 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:32,999 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:33,000 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:29:33,001 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:29:33,002 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:29:33,002 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:29:33,002 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:29:33,002 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:29:33,002 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:29:33,010 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:29:33,011 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '85bec86a-eb1c-4a8b-bac4-0889b83b6219'}
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:29:33,014 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:29:33,031 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:29:33,031 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:29:33,031 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:29:33,031 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:29:33,032 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:29:33,032 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:29:33,046 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:33:59,805 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:33:59,805 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:33:59,805 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:33:59,805 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:33:59,806 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:33:59,806 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:33:59,806 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:33:59,839 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"c47c0159-a4e7-4309-8aa4-fb7ae05d77c0","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:33:59,841 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:33:59,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:33:59,841 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:33:59,841 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:33:59,842 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:33:59,845 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:33:59,845 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:33:59,845 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:33:59,845 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:33:59,846 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:33:59,846 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:33:59,846 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:33:59,880 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:33:59,880 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:33:59,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:33:59,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:33:59,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:33:59,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:33:59,881 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:33:59,882 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:33:59,884 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:33:59,886 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:33:59,886 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:33:59,886 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:33:59,887 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:33:59,887 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:33:59,887 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:33:59,887 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:33:59,917 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:33:59,918 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:33:59,918 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:33:59,918 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:33:59,919 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:33:59,919 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:33:59,920 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:33:59,923 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:33:59,924 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:33:59,925 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:33:59,925 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:33:59,925 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:33:59,925 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:33:59,925 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:33:59,925 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:33:59,943 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:33:59,943 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:33:59,943 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:33:59,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:33:59,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:33:59,944 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:33:59,946 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:33:59,951 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:33:59,954 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:33:59,954 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:33:59,954 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:33:59,954 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:33:59,955 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:33:59,955 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:33:59,955 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:33:59,994 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:33:59,995 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:33:59,996 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:33:59,997 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:33:59,998 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:33:59,999 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:33:59,999 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,005 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,007 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,010 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,010 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,011 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,011 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:34:00,011 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,011 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,011 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:34:00,032 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:34:00,032 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:34:00,033 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:34:00,033 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:34:00,033 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:34:00,033 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:34:00,034 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:34:00,034 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,034 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:34:00,034 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,036 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,038 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,040 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,040 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,040 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,040 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:34:00,041 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,041 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,041 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:34:00,068 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:34:00,068 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:34:00,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:34:00,070 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:34:00,070 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:34:00,070 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:34:00,071 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:34:00,071 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:34:00,072 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,072 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,077 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,079 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,081 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,082 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,082 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,082 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:34:00,082 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,082 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,082 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:34:00,106 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:34:00,107 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:34:00,108 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:34:00,108 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:34:00,108 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,109 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,112 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,114 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,119 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,119 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,120 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,120 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:34:00,120 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,121 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,121 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:34:00,136 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:34:00,136 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:34:00,137 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:34:00,137 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:34:00,137 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,138 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,139 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,140 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,143 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,144 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,144 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,144 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:34:00,144 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,144 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,145 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:34:00,166 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:34:00,167 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:34:00,167 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:34:00,167 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:34:00,168 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,168 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,169 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,171 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,178 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,178 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,179 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,179 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:34:00,179 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,180 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,180 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:34:00,183 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:34:00,183 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:34:00,183 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:34:00,183 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:34:00,183 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,183 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,184 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,186 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,188 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,188 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,188 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,188 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:34:00,188 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,188 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,189 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:34:00,213 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:34:00,213 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:34:00,214 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:34:00,214 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:34:00,214 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,214 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,215 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,219 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,221 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,221 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,221 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,221 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:34:00,221 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,221 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,222 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:34:00,244 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:34:00,245 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:34:00,245 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:34:00,245 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:34:00,245 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:34:00,245 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:34:00,246 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,248 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,250 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:34:00,275 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:34:00,276 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:34:00,276 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:34:00,276 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:34:00,276 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:34:00,277 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:34:00,445 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,446 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,448 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:34:00,461 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:34:00,461 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:34:00,461 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:34:00,461 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:34:00,461 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:34:00,461 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:34:00,476 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,477 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,479 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,479 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,480 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,480 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:34:00,480 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,480 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,480 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:34:00,507 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:34:00,507 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:34:00,507 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:34:00,507 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:34:00,507 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:34:00,507 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:34:00,517 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:34:00,518 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:34:00,520 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:34:00,520 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:34:00,521 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:34:00,521 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:34:00,521 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c47c0159-a4e7-4309-8aa4-fb7ae05d77c0'}
INFO - 2025-06-12 20:34:00,521 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:34:00,521 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:34:00,538 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:34:00,538 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:34:00,539 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:34:00,539 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:34:00,539 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:34:00,539 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:34:00,553 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,480 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:38:04,480 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:38:04,480 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:38:04,480 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:38:04,480 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:38:04,480 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,481 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:38:04,493 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a444f487-abdf-47e0-ac84-fe8a1720b4c1","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:38:04,494 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:38:04,495 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:38:04,495 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:38:04,495 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,495 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,497 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,497 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,498 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,498 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:38:04,498 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,498 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,498 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:38:04,520 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:38:04,520 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:38:04,521 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:38:04,521 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:38:04,521 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,521 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:38:04,521 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,522 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,527 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,529 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:38:04,535 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:38:04,535 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:38:04,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:38:04,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:38:04,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,536 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,537 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,541 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,543 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,543 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,543 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,543 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:38:04,544 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,544 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,544 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:38:04,549 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:38:04,549 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:38:04,549 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:38:04,550 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:38:04,550 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,550 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,551 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,554 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,556 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,556 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,556 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,556 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:38:04,557 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,557 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,557 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:38:04,578 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:38:04,579 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:38:04,580 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:38:04,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:38:04,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,581 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:38:04,581 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,583 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,584 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,587 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:38:04,595 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:38:04,595 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:38:04,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:38:04,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:38:04,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:38:04,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:38:04,597 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,597 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,597 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,602 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,603 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,605 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,605 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,605 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,605 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:38:04,605 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,606 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,606 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:38:04,626 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:38:04,627 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:38:04,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:38:04,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:38:04,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:38:04,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:38:04,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:38:04,629 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,629 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,632 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,634 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,635 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,635 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,635 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,636 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:38:04,636 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,636 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,636 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:38:04,650 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:38:04,651 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:38:04,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:38:04,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:38:04,651 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,651 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,653 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,657 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,659 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,660 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,660 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,660 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:38:04,660 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,660 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,660 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:38:04,681 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:38:04,682 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:38:04,682 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:38:04,682 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:38:04,682 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,682 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,684 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,687 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,689 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,689 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,689 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,690 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:38:04,690 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,690 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,690 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:38:04,712 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:38:04,713 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:38:04,713 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:38:04,713 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:38:04,713 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,713 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,714 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,715 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,717 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:38:04,743 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:38:04,744 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:38:04,744 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:38:04,744 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:38:04,744 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,744 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,745 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,750 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,752 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:38:04,774 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:38:04,774 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:38:04,775 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:38:04,775 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:38:04,775 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,775 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,776 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,778 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,780 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,780 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,780 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,781 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:38:04,781 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,781 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,781 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:38:04,783 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:38:04,783 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:38:04,784 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:38:04,784 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:38:04,784 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:38:04,784 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:38:04,785 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,786 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,788 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,788 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,788 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,788 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:38:04,788 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,789 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,789 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:38:04,805 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:38:04,805 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:38:04,806 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:38:04,806 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:38:04,806 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:38:04,806 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:38:04,989 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:04,990 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:04,992 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:38:05,006 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:38:05,006 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:38:05,006 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:38:05,007 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:38:05,007 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:38:05,007 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:38:05,020 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:05,022 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:05,024 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:38:05,037 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:38:05,037 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:38:05,038 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:38:05,038 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:38:05,038 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:38:05,038 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:38:05,049 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:38:05,050 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a444f487-abdf-47e0-ac84-fe8a1720b4c1'}
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:38:05,053 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:38:05,055 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:38:05,055 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:38:05,056 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:38:05,056 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:38:05,056 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:38:05,056 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:38:05,068 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,255 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:42:01,255 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:42:01,255 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:42:01,255 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:42:01,256 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:42:01,256 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,257 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:42:01,289 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"feb8e735-210d-4a84-ab82-36c247b39958","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:42:01,292 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:42:01,293 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:42:01,293 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:42:01,293 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,294 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,298 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,298 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,298 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,299 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:42:01,299 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,299 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,299 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:42:01,326 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:42:01,327 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:42:01,327 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:42:01,327 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:42:01,327 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,327 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:42:01,327 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,328 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,330 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,332 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:42:01,343 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:42:01,343 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:42:01,343 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:42:01,343 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:42:01,343 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,343 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,344 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,347 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,349 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,349 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,349 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,350 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:42:01,350 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,350 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,350 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:42:01,356 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:42:01,356 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:42:01,356 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:42:01,356 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:42:01,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,357 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,358 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,361 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,363 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:42:01,394 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:42:01,394 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:42:01,395 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:42:01,395 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:42:01,395 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,395 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:42:01,396 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,399 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,400 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,402 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:42:01,435 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:42:01,436 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:42:01,436 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:42:01,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:42:01,437 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:42:01,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:42:01,440 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,440 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,441 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,444 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,445 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,447 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,447 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,447 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,447 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:42:01,447 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,448 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,448 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:42:01,459 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:42:01,460 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:42:01,460 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:42:01,460 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:42:01,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:42:01,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:42:01,462 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:42:01,462 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,462 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,463 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,464 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,466 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,466 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,466 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,466 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:42:01,466 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,467 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,467 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:42:01,486 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:42:01,486 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:42:01,487 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:42:01,487 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:42:01,487 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,487 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,489 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,493 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,496 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,496 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,496 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,496 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:42:01,496 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,497 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,497 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:42:01,499 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:42:01,499 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:42:01,499 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:42:01,499 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:42:01,499 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,500 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,500 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,501 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,503 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:42:01,505 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:42:01,505 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:42:01,506 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:42:01,506 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:42:01,506 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,506 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,507 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,508 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,510 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,510 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,510 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,510 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:42:01,510 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,511 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,511 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:42:01,532 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:42:01,533 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:42:01,533 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:42:01,533 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:42:01,533 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,533 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,534 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,536 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,538 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,538 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,538 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,538 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:42:01,539 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,539 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,539 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:42:01,561 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:42:01,562 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:42:01,562 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:42:01,562 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:42:01,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,563 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,564 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,566 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,569 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,569 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,569 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,569 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:42:01,570 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,570 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,570 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:42:01,593 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:42:01,594 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:42:01,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:42:01,595 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:42:01,595 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:42:01,595 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:42:01,597 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,601 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,605 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,606 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,606 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,606 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:42:01,606 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,607 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,607 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:42:01,624 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:42:01,624 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:42:01,624 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:42:01,624 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:42:01,625 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:42:01,625 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:42:01,791 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,792 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,794 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:42:01,797 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:42:01,797 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:42:01,797 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:42:01,797 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:42:01,798 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:42:01,798 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:42:01,810 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,811 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,813 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:42:01,838 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:42:01,838 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:42:01,838 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:42:01,839 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[500]】
INFO - 2025-06-12 20:42:01,839 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:42:01,839 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:42:01,850 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:42:01,851 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:42:01,853 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:42:01,854 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:42:01,854 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:42:01,854 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:42:01,854 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'feb8e735-210d-4a84-ab82-36c247b39958'}
INFO - 2025-06-12 20:42:01,854 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:42:01,854 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:42:01,868 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u52a0\u8f7d\u7528\u6237\u6570\u636e\u5931\u8d25: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'",
  "state": 500,
  "success": false
}

INFO - 2025-06-12 20:42:01,869 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:42:01,869 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【响应成功】,实际结果为【加载用户数据失败: [Errno 2] No such file or directory: 'C:/data/mockdata/user.json'】
ERROR - 2025-06-12 20:42:01,869 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【200】,实际结果为【[500]】
ERROR - 2025-06-12 20:42:01,869 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
ERROR - 2025-06-12 20:42:01,869 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:42:01,881 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:29,842 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:49:29,843 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:49:29,843 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:49:29,843 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:49:29,843 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:49:29,843 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:29,844 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:49:29,879 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"3be659c7-94bc-405d-84a1-e7db8ec0b5a1","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:49:29,880 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:49:29,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:49:29,881 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:49:29,881 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:29,881 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:29,884 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:29,884 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:29,885 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:29,885 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:49:29,885 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:29,885 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:29,885 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:49:29,925 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:49:29,925 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:49:29,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:49:29,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:49:29,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:29,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:49:29,926 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:29,928 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:29,929 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:29,931 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:49:29,968 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:49:29,968 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:49:29,969 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:49:29,969 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:49:29,970 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:29,970 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:29,972 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:29,974 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:29,977 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:29,977 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:29,978 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:29,978 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:49:29,978 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:29,978 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:29,978 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:49:29,988 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:49:29,989 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:49:29,990 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:49:29,990 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:49:29,990 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:29,990 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:29,991 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:29,993 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:29,995 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:29,995 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:29,996 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:29,996 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:49:29,996 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:29,996 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:29,996 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:49:30,043 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:49:30,044 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:49:30,045 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:49:30,046 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:49:30,047 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:30,048 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:49:30,048 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,054 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,056 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,058 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,059 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,059 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,059 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:49:30,059 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,059 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,059 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:49:30,093 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:49:30,094 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:49:30,095 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:49:30,095 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:49:30,096 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:30,096 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:49:30,097 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:49:30,097 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,098 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:30,098 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,104 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,106 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,108 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,109 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,109 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,109 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:49:30,109 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,109 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,109 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:49:30,136 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:49:30,137 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:49:30,138 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:49:30,138 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:49:30,139 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:30,139 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:49:30,140 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:49:30,140 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:49:30,140 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,141 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,143 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,144 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,146 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,146 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,146 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,147 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:49:30,147 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,147 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,147 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:49:30,150 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:49:30,150 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:49:30,150 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:49:30,150 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:49:30,150 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,150 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,151 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,152 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,154 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:49:30,175 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:49:30,176 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:49:30,176 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:49:30,176 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:49:30,176 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,176 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,177 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,181 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,184 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,184 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,184 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,184 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:49:30,184 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,185 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,185 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:49:30,187 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:49:30,187 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:49:30,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:49:30,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:49:30,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,187 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,188 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,189 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,191 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:49:30,206 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:49:30,206 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:49:30,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:49:30,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:49:30,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,207 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,207 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,208 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,210 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,210 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,210 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,210 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:49:30,211 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,211 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,211 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:49:30,236 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:49:30,237 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:49:30,237 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:49:30,238 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:49:30,238 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,238 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,239 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,241 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,244 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,244 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,245 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,245 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:49:30,245 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,245 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,245 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:49:30,267 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:49:30,267 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:49:30,267 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:49:30,267 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:49:30,268 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:49:30,268 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:49:30,269 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,270 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,272 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,272 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,273 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,273 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:49:30,273 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,273 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,273 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:49:30,299 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：[
  "{\"RECORDS\": [{\"id\": \"100030011\"",
  "\"name\": \"15321919666\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png\"",
  "\"phone\": \"15321919666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:19:15\"",
  "\"update_time\": \"10/7/2020 10:19:15\"}",
  "{\"id\": \"100030012\"",
  "\"name\": \"15588886623\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886623\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:43:01\"",
  "\"update_time\": \"10/7/2020 10:43:01\"}",
  "{\"id\": \"100030013\"",
  "\"name\": \"15588886665\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886665\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:09:11\"",
  "\"update_time\": \"10/7/2020 11:09:11\"}",
  "{\"id\": \"100030014\"",
  "\"name\": \"15588886664\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886664\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:10:26\"",
  "\"update_time\": \"10/7/2020 11:10:26\"}",
  "{\"id\": \"100030015\"",
  "\"name\": \"15588886663\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886663\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:21:50\"",
  "\"update_time\": \"10/7/2020 11:21:50\"}",
  "{\"id\": \"100030016\"",
  "\"name\": \"15588886644\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886644\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:23:56\"",
  "\"update_time\": \"10/7/2020 11:23:56\"}",
  "{\"id\": \"100030017\"",
  "\"name\": \"15811111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"1\"",
  "\"create_time\": \"10/7/2020 11:25:45\"",
  "\"update_time\": \"13/7/2020 10:56:31\"}",
  "{\"id\": \"100030018\"",
  "\"name\": \"15588886123\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886123\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:17:35\"",
  "\"update_time\": \"10/7/2020 12:17:35\"}",
  "{\"id\": \"100030019\"",
  "\"name\": \"15588886234\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png\"",
  "\"phone\": \"15588886234\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:20:16\"",
  "\"update_time\": \"10/7/2020 12:20:16\"}",
  "{\"id\": \"100030020\"",
  "\"name\": \"18211111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"18211111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 13:57:41\"",
  "\"update_time\": \"10/7/2020 13:57:41\"}",
  "{\"id\": \"100030021\"",
  "\"name\": \"15811112222\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811112222\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 11:35:20\"",
  "\"update_time\": \"13/7/2020 11:35:20\"}",
  "{\"id\": \"100030022\"",
  "\"name\": \"15811111122\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111122\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 17:43:52\"",
  "\"update_time\": \"13/7/2020 17:43:52\"}",
  "{\"id\": \"100030026\"",
  "\"name\": \"15588886666\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"24/8/2020 17:23:24\"",
  "\"update_time\": \"24/8/2020 17:23:27\"}]}"
]

INFO - 2025-06-12 20:49:30,299 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:49:30,300 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:49:30,464 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,465 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,467 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,467 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,468 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,468 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:49:30,468 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,468 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,468 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:49:30,482 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：[
  "{\"RECORDS\": [{\"id\": \"100030011\"",
  "\"name\": \"15321919666\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png\"",
  "\"phone\": \"15321919666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:19:15\"",
  "\"update_time\": \"10/7/2020 10:19:15\"}",
  "{\"id\": \"100030012\"",
  "\"name\": \"15588886623\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886623\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:43:01\"",
  "\"update_time\": \"10/7/2020 10:43:01\"}",
  "{\"id\": \"100030013\"",
  "\"name\": \"15588886665\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886665\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:09:11\"",
  "\"update_time\": \"10/7/2020 11:09:11\"}",
  "{\"id\": \"100030014\"",
  "\"name\": \"15588886664\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886664\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:10:26\"",
  "\"update_time\": \"10/7/2020 11:10:26\"}",
  "{\"id\": \"100030015\"",
  "\"name\": \"15588886663\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886663\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:21:50\"",
  "\"update_time\": \"10/7/2020 11:21:50\"}",
  "{\"id\": \"100030016\"",
  "\"name\": \"15588886644\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886644\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:23:56\"",
  "\"update_time\": \"10/7/2020 11:23:56\"}",
  "{\"id\": \"100030017\"",
  "\"name\": \"15811111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"1\"",
  "\"create_time\": \"10/7/2020 11:25:45\"",
  "\"update_time\": \"13/7/2020 10:56:31\"}",
  "{\"id\": \"100030018\"",
  "\"name\": \"15588886123\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886123\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:17:35\"",
  "\"update_time\": \"10/7/2020 12:17:35\"}",
  "{\"id\": \"100030019\"",
  "\"name\": \"15588886234\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png\"",
  "\"phone\": \"15588886234\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:20:16\"",
  "\"update_time\": \"10/7/2020 12:20:16\"}",
  "{\"id\": \"100030020\"",
  "\"name\": \"18211111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"18211111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 13:57:41\"",
  "\"update_time\": \"10/7/2020 13:57:41\"}",
  "{\"id\": \"100030021\"",
  "\"name\": \"15811112222\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811112222\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 11:35:20\"",
  "\"update_time\": \"13/7/2020 11:35:20\"}",
  "{\"id\": \"100030022\"",
  "\"name\": \"15811111122\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111122\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 17:43:52\"",
  "\"update_time\": \"13/7/2020 17:43:52\"}",
  "{\"id\": \"100030026\"",
  "\"name\": \"15588886666\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"24/8/2020 17:23:24\"",
  "\"update_time\": \"24/8/2020 17:23:27\"}]}"
]

INFO - 2025-06-12 20:49:30,482 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
ERROR - 2025-06-12 20:49:30,482 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:49:30,495 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,496 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,498 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,498 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,498 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,498 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:49:30,498 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,498 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,499 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:49:30,513 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：[
  "{\"RECORDS\": [{\"id\": \"100030011\"",
  "\"name\": \"15321919666\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png\"",
  "\"phone\": \"15321919666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:19:15\"",
  "\"update_time\": \"10/7/2020 10:19:15\"}",
  "{\"id\": \"100030012\"",
  "\"name\": \"15588886623\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886623\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:43:01\"",
  "\"update_time\": \"10/7/2020 10:43:01\"}",
  "{\"id\": \"100030013\"",
  "\"name\": \"15588886665\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886665\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:09:11\"",
  "\"update_time\": \"10/7/2020 11:09:11\"}",
  "{\"id\": \"100030014\"",
  "\"name\": \"15588886664\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886664\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:10:26\"",
  "\"update_time\": \"10/7/2020 11:10:26\"}",
  "{\"id\": \"100030015\"",
  "\"name\": \"15588886663\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886663\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:21:50\"",
  "\"update_time\": \"10/7/2020 11:21:50\"}",
  "{\"id\": \"100030016\"",
  "\"name\": \"15588886644\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886644\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:23:56\"",
  "\"update_time\": \"10/7/2020 11:23:56\"}",
  "{\"id\": \"100030017\"",
  "\"name\": \"15811111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"1\"",
  "\"create_time\": \"10/7/2020 11:25:45\"",
  "\"update_time\": \"13/7/2020 10:56:31\"}",
  "{\"id\": \"100030018\"",
  "\"name\": \"15588886123\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886123\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:17:35\"",
  "\"update_time\": \"10/7/2020 12:17:35\"}",
  "{\"id\": \"100030019\"",
  "\"name\": \"15588886234\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png\"",
  "\"phone\": \"15588886234\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:20:16\"",
  "\"update_time\": \"10/7/2020 12:20:16\"}",
  "{\"id\": \"100030020\"",
  "\"name\": \"18211111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"18211111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 13:57:41\"",
  "\"update_time\": \"10/7/2020 13:57:41\"}",
  "{\"id\": \"100030021\"",
  "\"name\": \"15811112222\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811112222\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 11:35:20\"",
  "\"update_time\": \"13/7/2020 11:35:20\"}",
  "{\"id\": \"100030022\"",
  "\"name\": \"15811111122\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111122\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 17:43:52\"",
  "\"update_time\": \"13/7/2020 17:43:52\"}",
  "{\"id\": \"100030026\"",
  "\"name\": \"15588886666\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"24/8/2020 17:23:24\"",
  "\"update_time\": \"24/8/2020 17:23:27\"}]}"
]

INFO - 2025-06-12 20:49:30,513 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:49:30,514 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:49:30,525 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:49:30,526 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:49:30,528 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:49:30,529 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:49:30,529 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:49:30,529 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:49:30,529 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '3be659c7-94bc-405d-84a1-e7db8ec0b5a1'}
INFO - 2025-06-12 20:49:30,529 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:49:30,529 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:49:30,543 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：[
  "{\"RECORDS\": [{\"id\": \"100030011\"",
  "\"name\": \"15321919666\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png\"",
  "\"phone\": \"15321919666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:19:15\"",
  "\"update_time\": \"10/7/2020 10:19:15\"}",
  "{\"id\": \"100030012\"",
  "\"name\": \"15588886623\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886623\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 10:43:01\"",
  "\"update_time\": \"10/7/2020 10:43:01\"}",
  "{\"id\": \"100030013\"",
  "\"name\": \"15588886665\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886665\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:09:11\"",
  "\"update_time\": \"10/7/2020 11:09:11\"}",
  "{\"id\": \"100030014\"",
  "\"name\": \"15588886664\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886664\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:10:26\"",
  "\"update_time\": \"10/7/2020 11:10:26\"}",
  "{\"id\": \"100030015\"",
  "\"name\": \"15588886663\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886663\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:21:50\"",
  "\"update_time\": \"10/7/2020 11:21:50\"}",
  "{\"id\": \"100030016\"",
  "\"name\": \"15588886644\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886644\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 11:23:56\"",
  "\"update_time\": \"10/7/2020 11:23:56\"}",
  "{\"id\": \"100030017\"",
  "\"name\": \"15811111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"DISABLE\"",
  "\"is_del\": \"1\"",
  "\"create_time\": \"10/7/2020 11:25:45\"",
  "\"update_time\": \"13/7/2020 10:56:31\"}",
  "{\"id\": \"100030018\"",
  "\"name\": \"15588886123\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886123\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:17:35\"",
  "\"update_time\": \"10/7/2020 12:17:35\"}",
  "{\"id\": \"100030019\"",
  "\"name\": \"15588886234\"",
  "\"portrait\": \"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png\"",
  "\"phone\": \"15588886234\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 12:20:16\"",
  "\"update_time\": \"10/7/2020 12:20:16\"}",
  "{\"id\": \"100030020\"",
  "\"name\": \"18211111111\"",
  "\"portrait\": \"\"",
  "\"phone\": \"18211111111\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"10/7/2020 13:57:41\"",
  "\"update_time\": \"10/7/2020 13:57:41\"}",
  "{\"id\": \"100030021\"",
  "\"name\": \"15811112222\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811112222\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 11:35:20\"",
  "\"update_time\": \"13/7/2020 11:35:20\"}",
  "{\"id\": \"100030022\"",
  "\"name\": \"15811111122\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15811111122\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"13/7/2020 17:43:52\"",
  "\"update_time\": \"13/7/2020 17:43:52\"}",
  "{\"id\": \"100030026\"",
  "\"name\": \"15588886666\"",
  "\"portrait\": \"\"",
  "\"phone\": \"15588886666\"",
  "\"password\": \"123456\"",
  "\"reg_ip\": \"\"",
  "\"account_non_expired\": \"1\"",
  "\"credentials_non_expired\": \"1\"",
  "\"account_non_locked\": \"1\"",
  "\"status\": \"ENABLE\"",
  "\"is_del\": \"0\"",
  "\"create_time\": \"24/8/2020 17:23:24\"",
  "\"update_time\": \"24/8/2020 17:23:27\"}]}"
]

INFO - 2025-06-12 20:49:30,544 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
ERROR - 2025-06-12 20:49:30,544 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:49:30,558 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,651 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:51:45,651 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:51:45,651 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:51:45,651 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:51:45,652 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:51:45,652 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,653 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:51:45,687 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"623d4946-6897-4dfa-a019-104f6562dcbf","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:51:45,689 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:51:45,689 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:51:45,690 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:51:45,690 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,690 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,692 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,693 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,693 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,693 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:51:45,693 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,693 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,693 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:51:45,713 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:51:45,714 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:51:45,714 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:45,714 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:45,714 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:51:45,715 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,716 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,719 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,721 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:51:45,732 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:51:45,732 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:51:45,732 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:45,733 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:45,733 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,733 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,734 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,738 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,740 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,740 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,740 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,741 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:51:45,741 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,741 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,741 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:51:45,765 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:51:45,766 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:51:45,766 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:45,766 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:45,767 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,767 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,769 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,771 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,774 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,774 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,774 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,775 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:51:45,775 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,775 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,775 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:51:45,784 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:51:45,785 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:51:45,785 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:45,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:45,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:51:45,786 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,790 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,791 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,793 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,793 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,793 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,793 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:51:45,793 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,794 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,794 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:51:45,825 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:51:45,825 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:51:45,826 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:45,826 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:45,827 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,827 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:51:45,827 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:51:45,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:45,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,828 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,830 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,831 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,834 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,834 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,834 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,834 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:51:45,834 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,834 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,835 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:51:45,853 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:51:45,853 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:51:45,854 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:45,854 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:45,854 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,855 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:51:45,855 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:51:45,855 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:45,856 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:45,856 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,860 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,861 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,864 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,864 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,864 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,864 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:51:45,864 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,864 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,865 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:51:45,879 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:45,879 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:45,879 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:51:45,879 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:45,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:45,880 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,881 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,885 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,886 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,887 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,887 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,887 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:51:45,887 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,887 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,887 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:51:45,910 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:45,910 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:45,911 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:51:45,911 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:45,911 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:45,911 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,912 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,914 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,916 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,917 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,917 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,917 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:51:45,917 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,917 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,917 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:51:45,941 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:45,942 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:45,942 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:51:45,942 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:45,942 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:45,943 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,944 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,945 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,949 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,950 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,950 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,950 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:51:45,950 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,950 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,950 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:51:45,973 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:45,974 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:45,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:51:45,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:45,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:45,976 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:45,978 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:45,980 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:45,985 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:45,986 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:45,986 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:45,986 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:51:45,986 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:45,987 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:45,987 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:51:46,003 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:46,004 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:46,004 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:51:46,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:46,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:46,005 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:46,007 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:46,009 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:46,012 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:46,012 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:46,013 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:46,013 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:51:46,013 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:46,013 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:46,013 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:51:46,034 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:46,035 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:46,035 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:51:46,036 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:46,036 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:46,037 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:46,038 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:46,042 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:46,045 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:46,046 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:46,046 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:46,046 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:51:46,046 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:46,046 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:46,046 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:51:46,050 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:51:46,050 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:51:46,050 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 20:51:46,051 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:51:46,051 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:51:46,051 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:51:46,052 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:46,056 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:46,059 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:46,059 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:46,059 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:46,059 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:51:46,059 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:46,060 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:46,060 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:51:46,080 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:51:46,081 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 20:51:46,082 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:46,083 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:46,083 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 20:51:46,084 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[]】,实际结果为【[[{'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347555000, 'credentials_non_expired': None, 'id': 100030011, 'is_del': None, 'name': '1558888', 'password': '123456', 'phone': '1558888', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347655000, 'credentials_non_expired': None, 'id': 100030012, 'is_del': None, 'name': '1558889', 'password': '123456', 'phone': '1558889', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347755000, 'credentials_non_expired': None, 'id': 100030013, 'is_del': None, 'name': '1558890', 'password': '123456', 'phone': '1558890', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347855000, 'credentials_non_expired': None, 'id': 100030014, 'is_del': None, 'name': '1558891', 'password': '123456', 'phone': '1558891', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594347955000, 'credentials_non_expired': None, 'id': 100030015, 'is_del': None, 'name': '1558892', 'password': '123456', 'phone': '1558892', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348055000, 'credentials_non_expired': None, 'id': 100030016, 'is_del': None, 'name': '1558893', 'password': '123456', 'phone': '1558893', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348155000, 'credentials_non_expired': None, 'id': 100030017, 'is_del': None, 'name': '1558894', 'password': '123456', 'phone': '1558894', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348255000, 'credentials_non_expired': None, 'id': 100030018, 'is_del': None, 'name': '1558895', 'password': '123456', 'phone': '1558895', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348355000, 'credentials_non_expired': None, 'id': 100030019, 'is_del': None, 'name': '1558896', 'password': '123456', 'phone': '1558896', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}, {'account_non_expired': None, 'account_non_locked': None, 'createTime': 1594348455000, 'credentials_non_expired': None, 'id': 100030020, 'is_del': None, 'name': '1558897', 'password': '123456', 'phone': '1558897', 'portrait': None, 'reg_ip': None, 'status': 'ENABLE', 'updateTime': None}]]】
ERROR - 2025-06-12 20:51:46,085 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 20:51:46,085 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:51:46,260 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:46,261 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:46,262 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:46,263 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:46,263 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:46,263 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:51:46,263 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:46,263 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:46,263 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:51:46,281 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:51:46,281 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:51:46,282 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【时间格式错误，正确格式为：YYYY-MM-DD】,实际结果为【响应成功】
ERROR - 2025-06-12 20:51:46,283 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【400】,实际结果为【[200]】
ERROR - 2025-06-12 20:51:46,283 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
ERROR - 2025-06-12 20:51:46,284 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:51:46,296 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:51:46,297 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '623d4946-6897-4dfa-a019-104f6562dcbf'}
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:51:46,299 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:51:46,327 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "endRow": 10,
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "lastPage": 2,
    "list": [
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347555000,
        "credentials_non_expired": null,
        "id": 100030011,
        "is_del": null,
        "name": "1558888",
        "password": "123456",
        "phone": "1558888",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347655000,
        "credentials_non_expired": null,
        "id": 100030012,
        "is_del": null,
        "name": "1558889",
        "password": "123456",
        "phone": "1558889",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347755000,
        "credentials_non_expired": null,
        "id": 100030013,
        "is_del": null,
        "name": "1558890",
        "password": "123456",
        "phone": "1558890",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347855000,
        "credentials_non_expired": null,
        "id": 100030014,
        "is_del": null,
        "name": "1558891",
        "password": "123456",
        "phone": "1558891",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594347955000,
        "credentials_non_expired": null,
        "id": 100030015,
        "is_del": null,
        "name": "1558892",
        "password": "123456",
        "phone": "1558892",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348055000,
        "credentials_non_expired": null,
        "id": 100030016,
        "is_del": null,
        "name": "1558893",
        "password": "123456",
        "phone": "1558893",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348155000,
        "credentials_non_expired": null,
        "id": 100030017,
        "is_del": null,
        "name": "1558894",
        "password": "123456",
        "phone": "1558894",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348255000,
        "credentials_non_expired": null,
        "id": 100030018,
        "is_del": null,
        "name": "1558895",
        "password": "123456",
        "phone": "1558895",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348355000,
        "credentials_non_expired": null,
        "id": 100030019,
        "is_del": null,
        "name": "1558896",
        "password": "123456",
        "phone": "1558896",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      },
      {
        "account_non_expired": null,
        "account_non_locked": null,
        "createTime": 1594348455000,
        "credentials_non_expired": null,
        "id": 100030020,
        "is_del": null,
        "name": "1558897",
        "password": "123456",
        "phone": "1558897",
        "portrait": null,
        "reg_ip": null,
        "status": "ENABLE",
        "updateTime": null
      }
    ],
    "navigatePages": 8,
    "navigatepageNums": [
      1,
      2
    ],
    "nextPage": 2,
    "orderBy": null,
    "pageNum": 1,
    "pageSize": 10,
    "pages": 2,
    "prePage": 0,
    "size": 10,
    "startRow": 1,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:51:46,327 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 20:51:46,328 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:51:46,328 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:51:46,328 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:51:46,329 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:51:46,329 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 20:51:46,329 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 20:51:46,330 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【1】,实际结果为【[2]】
INFO - 2025-06-12 20:51:46,330 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 20:51:46,330 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【True】,实际结果为【[False]】
INFO - 2025-06-12 20:51:46,331 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:51:46,331 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【False】,实际结果为【[True]】
INFO - 2025-06-12 20:51:46,331 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【8】,实际结果【[8]】
ERROR - 2025-06-12 20:51:46,331 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【[1]】,实际结果为【[[1, 2]]】
ERROR - 2025-06-12 20:51:46,332 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:51:46,342 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,057 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:56:31,058 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:56:31,058 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:56:31,058 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:56:31,058 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:56:31,058 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,059 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:56:31,110 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"5d57d34f-ff40-4eff-988a-3c1e2f467b38","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:56:31,112 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:56:31,112 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:56:31,112 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:56:31,113 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,113 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,116 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:56:31,155 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:56:31,156 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:56:31,157 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,157 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,158 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,158 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:56:31,158 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,160 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,162 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,165 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,165 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,166 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,166 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:56:31,166 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,166 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,166 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:56:31,192 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:56:31,192 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:56:31,193 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,193 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,193 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,194 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,195 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,197 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,199 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,199 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,199 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,199 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:56:31,199 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,199 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,200 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:56:31,225 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:56:31,225 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:56:31,226 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,226 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,226 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,227 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,228 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,230 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,232 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,232 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,232 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,232 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:56:31,232 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,232 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,233 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:56:31,260 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:56:31,260 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:56:31,261 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,261 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:56:31,263 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,269 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,271 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,274 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,274 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,274 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,274 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:56:31,274 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,275 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,275 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:56:31,306 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:56:31,307 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:56:31,307 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,308 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,308 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:56:31,310 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:56:31,310 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:56:31,311 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,311 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,315 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,317 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,321 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,321 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,321 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,321 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:56:31,322 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,322 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,322 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:56:31,362 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:56:31,362 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:56:31,363 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,363 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,363 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,363 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:56:31,364 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:56:31,364 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,364 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:56:31,364 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,366 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,367 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,369 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,370 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,370 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,370 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:56:31,370 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,370 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,370 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:56:31,383 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:56:31,383 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:56:31,383 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:56:31,383 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:56:31,383 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:56:31,383 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,385 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,386 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,388 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:56:31,391 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:56:31,391 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:56:31,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:56:31,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:56:31,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:56:31,391 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,392 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,394 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,396 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:56:31,418 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "6yXLcZKIulAEHwJXvqgM";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1887229946768">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1887229948496">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1887229948640">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1887229948784">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1887229948928">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1887229949072">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1887229949216">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">146</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>&#39;state&#39;: 400,</pre>
<pre class="line before"><span class="ws">            </span>&#39;success&#39;: False</pre>
<pre class="line before"><span class="ws">        </span>})</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证必填参数</pre>
<pre class="line current"><span class="ws">    </span>current_page = request_data.get(&#39;currentPage&#39;)
<span class="ws">    </span>               ^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>page_size = request_data.get(&#39;pageSize&#39;)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>if not current_page:</pre>
<pre class="line after"><span class="ws">        </span>return jsonify({</pre>
<pre class="line after"><span class="ws">            </span>&#39;message&#39;: &#39;缺少必填参数currentPage&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 146, in find_all_users
    current_page = request_data.get(&#39;currentPage&#39;)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 146, in find_all_users
    current_page = request_data.get('currentPage')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'get'


-->

ERROR - 2025-06-12 20:56:31,419 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: &#39;str&#39; object has no attribute &#39;get&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&...
INFO - 2025-06-12 20:56:31,419 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:56:31,419 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:56:31,613 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,614 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,616 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,616 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,617 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,617 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:56:31,617 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,617 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,617 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:56:31,630 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:56:31,630 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:56:31,630 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:56:31,630 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:56:31,630 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:56:31,630 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,631 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,633 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,635 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,635 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,635 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,635 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:56:31,635 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,635 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,636 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:56:31,637 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:56:31,638 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:56:31,638 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码必须大于0】,实际结果为【缺少必填参数currentPage】
INFO - 2025-06-12 20:56:31,638 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:56:31,638 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:56:31,638 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:56:31,647 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,648 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,650 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:56:31,653 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:56:31,653 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:56:31,653 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:56:31,653 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:56:31,653 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:56:31,653 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,654 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,657 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,659 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:56:31,676 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:56:31,677 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:56:31,677 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 20:56:31,677 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:56:31,677 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:56:31,678 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:56:31,686 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,687 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,689 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,689 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,689 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,690 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:56:31,690 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,690 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,690 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:56:31,707 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:56:31,707 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 20:56:31,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,707 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 20:56:31,708 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 20:56:31,708 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:56:31,709 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,712 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,714 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,714 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,714 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,714 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:56:31,714 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,715 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,715 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:56:31,743 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "6yXLcZKIulAEHwJXvqgM";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1887231023072">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1887231022064">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1887231022640">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1887231022352">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1887231022928">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1887231022208">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1887231021920">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 20:56:31,744 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 20:56:31,744 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:56:31,744 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:56:31,778 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:56:31,779 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:56:31,781 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:56:31,781 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:56:31,781 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:56:31,781 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:56:31,781 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5d57d34f-ff40-4eff-988a-3c1e2f467b38'}
INFO - 2025-06-12 20:56:31,781 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:56:31,782 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:56:31,784 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:56:31,784 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 20:56:31,785 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:56:31,785 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:56:31,785 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:56:31,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:56:31,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 20:56:31,786 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 20:56:31,787 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:56:31,800 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,350 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:57:26,351 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:57:26,351 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:57:26,351 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:57:26,351 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:57:26,352 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,352 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:57:26,420 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"27e60d30-2d94-47c2-a14d-ac27c102b07e","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:57:26,421 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:57:26,422 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:57:26,422 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:57:26,422 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,422 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,425 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:57:26,454 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:57:26,455 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:57:26,455 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:26,455 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:26,455 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,456 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:57:26,456 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,457 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,458 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,459 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,460 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,460 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,460 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:57:26,460 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,461 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,461 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:57:26,492 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:57:26,492 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:57:26,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:26,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:26,493 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,493 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,494 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,496 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,498 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,498 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,498 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,499 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:57:26,499 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,499 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,499 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:57:26,523 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:57:26,523 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:57:26,523 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:26,523 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:26,524 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,524 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,525 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,526 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,528 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:57:26,557 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:57:26,557 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:57:26,558 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:26,558 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:26,558 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,559 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:57:26,559 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,560 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,561 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,564 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:57:26,612 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:57:26,612 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:57:26,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:26,612 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:26,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:57:26,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:57:26,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,613 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,614 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,617 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,618 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,620 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,621 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,621 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,621 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:57:26,621 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,621 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,621 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:57:26,639 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:57:26,639 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:57:26,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:26,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:26,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:57:26,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:57:26,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:26,641 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,641 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,647 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,649 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,651 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:57:26,654 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:26,654 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:57:26,654 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:57:26,654 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:26,655 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,655 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,656 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,657 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,658 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,659 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,659 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,659 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:57:26,659 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,659 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,659 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:57:26,685 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:26,686 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:57:26,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:57:26,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:26,686 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,686 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,688 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,691 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,693 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,693 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,693 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,694 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:57:26,694 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,694 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,694 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:57:26,716 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:26,716 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:57:26,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:57:26,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:26,717 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,717 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,718 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,719 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,721 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,721 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,722 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,722 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:57:26,722 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,722 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,722 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:57:26,746 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:26,747 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:57:26,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:57:26,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:26,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,747 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,748 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,749 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,751 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,752 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,752 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,752 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:57:26,752 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,752 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,752 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:57:26,778 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:26,778 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:57:26,778 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码必须大于0】,实际结果为【缺少必填参数currentPage】
INFO - 2025-06-12 20:57:26,778 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:26,779 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:57:26,779 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:57:26,951 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,952 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,954 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,954 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,954 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,954 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:57:26,954 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,954 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,955 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:57:26,979 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:26,979 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:57:26,979 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:57:26,979 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:26,979 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:57:26,980 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:26,981 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:26,981 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:26,983 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:26,983 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:26,984 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:26,984 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:57:26,984 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:26,984 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:26,984 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:57:27,009 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:57:27,009 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:57:27,010 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 20:57:27,010 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:57:27,010 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:57:27,010 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:57:27,020 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:27,021 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:27,024 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:27,024 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:27,024 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:27,024 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:57:27,024 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:27,024 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:27,025 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:57:27,040 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:57:27,041 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 20:57:27,041 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:27,041 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:27,042 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:27,042 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 20:57:27,042 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 20:57:27,042 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:57:27,044 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:27,045 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:27,048 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:57:27,076 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "cEqyvrpX8dWXAA43ZQge";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-1376829877136">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-1376829879152">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1376829878144">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1376829879296">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-1376829879440">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-1376829879584">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1376829879728">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 20:57:27,077 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 20:57:27,077 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:57:27,077 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:57:27,111 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:57:27,112 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:57:27,114 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:57:27,115 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:57:27,115 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:57:27,115 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:57:27,115 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '27e60d30-2d94-47c2-a14d-ac27c102b07e'}
INFO - 2025-06-12 20:57:27,115 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:57:27,115 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:57:27,133 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:57:27,133 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 20:57:27,133 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:57:27,134 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:57:27,134 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:57:27,134 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:57:27,135 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 20:57:27,135 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 20:57:27,135 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:57:27,153 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,263 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 20:59:52,263 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 20:59:52,263 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 20:59:52,263 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 20:59:52,264 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 20:59:52,264 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,264 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 20:59:52,307 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"7bbdf5ec-567d-417f-892f-2e14b180ae1f","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 20:59:52,308 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 20:59:52,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 20:59:52,309 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 20:59:52,309 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,310 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,314 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:59:52,341 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 20:59:52,342 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 20:59:52,342 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,342 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,342 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,342 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 20:59:52,342 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,344 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,349 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,350 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,350 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,351 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,351 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 20:59:52,351 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,351 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,351 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:59:52,370 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:59:52,370 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:59:52,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,371 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,371 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,372 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,373 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,375 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,375 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,375 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,375 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 20:59:52,376 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,376 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,376 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 20:59:52,403 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 20:59:52,403 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 20:59:52,403 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,404 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,404 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,404 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,405 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,407 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,408 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,408 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,409 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,409 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 20:59:52,409 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,409 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,409 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:59:52,451 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:59:52,452 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 20:59:52,452 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,453 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,453 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,453 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 20:59:52,453 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,458 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,459 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,461 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,462 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,462 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,462 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 20:59:52,462 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,462 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,462 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 20:59:52,480 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 20:59:52,480 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 20:59:52,480 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,480 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,481 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,481 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 20:59:52,481 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 20:59:52,481 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,482 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,482 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,483 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,484 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,485 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,485 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,486 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,486 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 20:59:52,486 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,486 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,486 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 20:59:52,514 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 20:59:52,515 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 20:59:52,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,515 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:59:52,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 20:59:52,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,516 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,516 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,522 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,523 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,525 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,525 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,525 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,525 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 20:59:52,526 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,526 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,526 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:59:52,552 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,552 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:59:52,552 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 20:59:52,552 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,552 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,553 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,554 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,557 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,560 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,560 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,560 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,560 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 20:59:52,561 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,561 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,561 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 20:59:52,582 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,583 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:59:52,583 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 20:59:52,583 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,583 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,583 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,584 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,586 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,588 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 20:59:52,614 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,614 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:59:52,614 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 20:59:52,615 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,615 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,615 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,616 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,617 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,622 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 20:59:52,624 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,624 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:59:52,625 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 20:59:52,625 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,625 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,625 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,626 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,627 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,629 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:59:52,631 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,632 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:59:52,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 20:59:52,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,632 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,632 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,633 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,635 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,637 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 20:59:52,639 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,640 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 20:59:52,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 20:59:52,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,640 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 20:59:52,640 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,641 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,643 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,645 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 20:59:52,660 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 20:59:52,660 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:59:52,661 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 20:59:52,661 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 20:59:52,661 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 20:59:52,661 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 20:59:52,834 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,835 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,837 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,837 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,837 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,837 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 20:59:52,837 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,838 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,838 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 20:59:52,862 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:59:52,862 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 20:59:52,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 20:59:52,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 20:59:52,863 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 20:59:52,864 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,870 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,872 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 20:59:52,878 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "tgn12oIv0IF1cEyqXLH7";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2541531083344">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2541531082912">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2541531082768">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2541531083776">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2541531083920">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2541531084064">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2541531084208">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 20:59:52,879 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 20:59:52,879 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 20:59:52,879 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:59:52,905 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 20:59:52,906 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 20:59:52,909 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 20:59:52,909 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 20:59:52,909 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 20:59:52,910 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 20:59:52,910 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '7bbdf5ec-567d-417f-892f-2e14b180ae1f'}
INFO - 2025-06-12 20:59:52,910 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 20:59:52,910 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 20:59:52,924 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 20:59:52,924 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 20:59:52,925 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 20:59:52,925 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 20:59:52,925 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 20:59:52,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 20:59:52,926 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 20:59:52,926 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 20:59:52,926 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 20:59:52,937 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:07,823 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:03:07,823 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:03:07,823 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:03:07,824 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:03:07,824 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:03:07,824 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:07,825 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:03:07,851 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"df808280-1e5f-40e0-84b6-4ebbb8aec9a8","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:03:07,852 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:03:07,852 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:03:07,853 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:03:07,853 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:07,853 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:07,855 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:07,855 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:07,856 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:07,856 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:03:07,856 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:07,856 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:07,856 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:03:08,022 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:03:08,023 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:03:08,023 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,023 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,024 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,024 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:03:08,024 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,026 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,030 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,034 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:03:08,065 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:03:08,066 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:03:08,066 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,066 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,066 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,067 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,068 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,076 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,079 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,079 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,080 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,080 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:03:08,080 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,080 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,080 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:03:08,117 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:03:08,118 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:03:08,118 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,118 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,118 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,119 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,120 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,122 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,124 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:03:08,144 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:03:08,144 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:03:08,145 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,145 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,145 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,146 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:03:08,146 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,153 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,154 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,156 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:03:08,175 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:03:08,176 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:03:08,176 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,176 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,176 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,177 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:03:08,177 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:03:08,177 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,177 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,177 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,183 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,184 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,186 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:03:08,205 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:03:08,205 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:03:08,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:03:08,206 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:03:08,207 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,207 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,207 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,215 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,216 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,218 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:03:08,231 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,231 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:03:08,232 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:03:08,232 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,232 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,232 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,233 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,245 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,247 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,248 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,248 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,248 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:03:08,248 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,248 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,248 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:03:08,262 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,262 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:03:08,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:03:08,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,263 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,264 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,275 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,278 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,279 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,279 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,279 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:03:08,279 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,279 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,279 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:03:08,293 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,293 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:03:08,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:03:08,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,294 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,295 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,296 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,309 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,309 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,309 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,310 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:03:08,310 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,310 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,310 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:03:08,324 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,324 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:03:08,324 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:03:08,325 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,325 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,325 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,326 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,337 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,341 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,341 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,341 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,341 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:03:08,342 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,342 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,342 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:03:08,344 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,345 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:03:08,345 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:03:08,345 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,345 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,345 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,346 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,353 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,355 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,355 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,355 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,355 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:03:08,356 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,356 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,356 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:03:08,369 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,369 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:03:08,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:03:08,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,370 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:03:08,370 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,371 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,383 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,387 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,387 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,387 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,387 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:03:08,387 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,387 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,388 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:03:08,401 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:03:08,401 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:03:08,401 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:03:08,402 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:03:08,402 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:03:08,402 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:03:08,569 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,570 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,572 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,573 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,573 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,573 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:03:08,573 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,573 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,573 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:03:08,586 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:03:08,586 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:03:08,586 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,586 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:03:08,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:03:08,587 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:03:08,588 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,589 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,590 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,590 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,590 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,590 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:03:08,591 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,591 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,591 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:03:08,621 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "smpZCBhe1uZ28UOntVZr";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2045069013008">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2045069013728">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2045069013872">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2045069014160">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2045069014016">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2045069014304">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2045069014448">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:03:08,622 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:03:08,622 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:03:08,622 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:03:08,656 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:03:08,657 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:03:08,659 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:03:08,659 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:03:08,659 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:03:08,659 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:03:08,659 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'df808280-1e5f-40e0-84b6-4ebbb8aec9a8'}
INFO - 2025-06-12 21:03:08,659 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:03:08,660 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:03:08,679 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:03:08,680 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:03:08,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:03:08,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:03:08,681 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:03:08,681 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:03:08,681 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:03:08,681 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:03:08,682 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:03:08,693 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,513 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:04:07,513 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:04:07,513 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:04:07,513 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:04:07,514 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:04:07,514 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,514 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:04:07,524 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"1dfa837f-8e98-48b4-ba66-febf723785ae","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:04:07,525 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:04:07,525 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:04:07,525 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:04:07,525 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,526 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,528 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,528 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,528 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,528 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:04:07,528 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,529 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,529 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:04:07,562 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:04:07,563 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:04:07,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:07,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:07,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:04:07,563 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,565 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,567 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,568 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,569 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,569 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,569 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:04:07,569 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,569 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,569 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:04:07,578 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:04:07,578 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:04:07,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:07,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:07,579 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,579 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,580 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,585 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,587 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:04:07,594 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:04:07,594 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:04:07,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:07,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:07,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,594 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,595 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,597 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,599 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,600 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,600 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,600 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:04:07,600 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,600 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,600 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:04:07,621 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:04:07,622 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:04:07,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:07,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:07,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:04:07,623 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,626 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,627 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,629 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:04:07,648 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:04:07,648 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:04:07,648 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:07,648 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:07,649 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,649 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:04:07,649 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:04:07,649 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,650 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,650 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,652 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,653 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,655 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,655 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,655 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,655 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:04:07,655 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,656 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,656 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:04:07,685 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:04:07,686 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:04:07,687 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:07,687 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:07,687 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,688 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:04:07,688 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:04:07,688 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:07,689 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,689 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,692 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,693 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,695 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,695 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,696 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,696 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:04:07,696 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,696 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,696 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:04:07,698 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,699 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:04:07,699 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:04:07,699 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,699 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,699 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,700 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,701 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,703 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,703 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,703 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,703 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:04:07,703 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,704 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,704 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:04:07,727 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,727 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:04:07,727 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:04:07,727 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,727 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,727 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,728 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,730 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,732 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:04:07,757 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,757 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:04:07,757 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:04:07,758 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,758 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,758 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,759 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,760 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,764 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,765 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,765 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,765 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:04:07,765 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,765 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,765 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:04:07,788 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,788 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:04:07,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:04:07,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,789 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,789 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,790 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,791 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,793 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:04:07,795 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,795 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:04:07,796 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:04:07,796 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,796 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,796 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,797 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,799 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,800 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,801 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,801 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,801 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:04:07,801 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,801 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,802 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:04:07,803 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,803 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:04:07,804 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:04:07,804 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,804 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:04:07,804 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:07,805 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,808 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,809 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,810 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,810 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,810 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:04:07,810 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,810 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,810 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:04:07,812 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:04:07,812 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:04:07,812 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:04:07,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:04:07,812 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:04:07,812 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:04:07,987 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:07,988 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:07,990 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:07,990 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:07,991 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:07,991 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:04:07,991 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:07,991 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:07,991 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:04:08,004 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:04:08,004 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:04:08,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:08,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:08,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:08,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:04:08,005 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:04:08,005 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:04:08,006 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:08,007 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:08,009 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:08,009 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:08,009 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:08,010 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:04:08,010 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:08,010 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:08,010 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:04:08,040 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "yll2RespxOyXciVIaSRp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-3225481097664">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-3225481097088">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-3225481097808">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-3225481098384">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-3225481098240">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-3225481098528">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-3225481098672">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:04:08,040 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:04:08,040 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:04:08,040 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:04:08,068 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:04:08,069 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '1dfa837f-8e98-48b4-ba66-febf723785ae'}
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:04:08,071 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:04:08,098 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:04:08,099 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:04:08,100 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:04:08,101 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:04:08,102 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:04:08,102 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:04:08,103 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:04:08,104 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:04:08,104 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:04:08,115 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,032 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:05:59,033 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:05:59,033 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:05:59,033 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:05:59,033 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:05:59,033 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,034 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:05:59,091 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"5685102c-0cf4-4a5e-b95c-a4d781279a84","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:05:59,092 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:05:59,092 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:05:59,092 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:05:59,092 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,093 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,096 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,096 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,096 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,096 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:05:59,096 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,097 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,097 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:05:59,141 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:05:59,142 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:05:59,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,143 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,143 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,144 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:05:59,144 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,146 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,150 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,152 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,152 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,153 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,153 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:05:59,153 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,153 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,153 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:05:59,182 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:05:59,182 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:05:59,182 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,182 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,183 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,183 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,184 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,197 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,199 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,199 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,199 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,199 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:05:59,199 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,200 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,200 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:05:59,212 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:05:59,212 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:05:59,213 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,213 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,213 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,213 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,214 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,228 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,230 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,231 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,231 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,231 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:05:59,231 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,231 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,231 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:05:59,246 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:05:59,247 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:05:59,248 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,249 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,249 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,250 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:05:59,250 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,259 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,260 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,261 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,262 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,262 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,262 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:05:59,262 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,262 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,262 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:05:59,308 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:05:59,308 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:05:59,308 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:05:59,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:05:59,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,309 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,310 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,320 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,321 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,323 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,323 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,324 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,324 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:05:59,324 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,324 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,324 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:05:59,349 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:05:59,350 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:05:59,350 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,351 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,351 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,352 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:05:59,352 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:05:59,352 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,353 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,353 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,367 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,369 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,370 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,371 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,371 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,371 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:05:59,371 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,371 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,371 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:05:59,374 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,374 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,375 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:05:59,375 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,375 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,375 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,382 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,383 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,385 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,385 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,385 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,385 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:05:59,385 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,386 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,386 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:05:59,399 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,399 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,399 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:05:59,399 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,399 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,400 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,401 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,413 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,415 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,416 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,416 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,416 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:05:59,416 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,416 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,416 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:05:59,430 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,431 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,431 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:05:59,431 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,431 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,431 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,432 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,433 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,446 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,446 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,446 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,446 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:05:59,447 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,447 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,447 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:05:59,461 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,461 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:05:59,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,461 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,462 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,462 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,475 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,478 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,478 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,478 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,478 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:05:59,478 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,478 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,479 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:05:59,492 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,492 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:05:59,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,492 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,492 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,493 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,506 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,508 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,509 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,509 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,509 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:05:59,509 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,509 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,509 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:05:59,523 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,523 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,523 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:05:59,523 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,524 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,524 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,524 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,537 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,542 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,543 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,543 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,543 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:05:59,543 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,543 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,544 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:05:59,569 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:05:59,570 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:05:59,570 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 21:05:59,570 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:05:59,570 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:05:59,570 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:05:59,571 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,584 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,587 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,588 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,588 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,588 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:05:59,588 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,589 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,589 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:05:59,617 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:05:59,618 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:05:59,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,618 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,619 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,619 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
ERROR - 2025-06-12 21:05:59,619 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 21:05:59,620 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:05:59,800 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,801 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,803 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,803 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,803 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,803 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:05:59,803 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,804 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,804 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:05:59,824 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "jzlq9ZdGdAZP75MOCKGp";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2538876678880">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2538876678448">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2538876678016">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2538876679168">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2538876679312">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2538876679456">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2538876679600">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:05:59,825 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:05:59,825 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:05:59,825 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:05:59,878 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:05:59,879 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:05:59,881 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:05:59,881 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:05:59,881 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:05:59,882 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:05:59,882 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '5685102c-0cf4-4a5e-b95c-a4d781279a84'}
INFO - 2025-06-12 21:05:59,882 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:05:59,882 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:05:59,911 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:05:59,911 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:05:59,912 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:05:59,913 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:05:59,913 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:05:59,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:05:59,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:05:59,915 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:05:59,915 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:05:59,955 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:38,804 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:06:38,804 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:06:38,804 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:06:38,804 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:06:38,804 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:06:38,804 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:38,805 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:06:38,844 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"b390b4a0-8957-4a2d-9557-eca52df42dff","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:06:38,847 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:06:38,847 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:06:38,848 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:06:38,848 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:38,849 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:38,854 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:38,854 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:38,854 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:38,855 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:06:38,855 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:38,855 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:38,855 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:06:38,872 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:06:38,872 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:06:38,873 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:38,873 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:38,873 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:38,873 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:06:38,873 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:38,875 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:38,879 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:38,881 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:38,882 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:38,882 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:38,882 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:06:38,882 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:38,882 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:38,882 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:06:38,893 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:06:38,893 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:06:38,893 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:38,893 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:38,893 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:38,893 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:38,895 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:38,898 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:38,900 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:38,901 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:38,901 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:38,901 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:06:38,901 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:38,901 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:38,901 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:06:38,934 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:06:38,935 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:06:38,935 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:38,936 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:38,936 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:38,936 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:38,938 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:38,943 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:38,946 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:38,946 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:38,946 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:38,946 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:06:38,946 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:38,947 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:38,947 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:06:38,984 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:06:38,985 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:06:38,986 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:38,986 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:38,987 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:38,988 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:06:38,989 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:38,994 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:38,996 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,000 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,000 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,000 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,000 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:06:39,000 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,001 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,002 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:06:39,017 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:06:39,017 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:06:39,018 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:39,018 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:39,018 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:39,019 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:06:39,019 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:06:39,019 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,020 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:39,020 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,024 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,026 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,028 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,028 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,028 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,029 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:06:39,029 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,029 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,029 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:06:39,053 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:06:39,054 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:06:39,054 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:39,054 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:39,054 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:39,055 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:06:39,055 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:06:39,055 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:39,055 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,055 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,060 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,061 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,063 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,063 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,064 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,064 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:06:39,064 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,064 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,064 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:06:39,079 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,080 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:06:39,080 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:06:39,080 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,080 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,080 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,081 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,082 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,084 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,084 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,084 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,084 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:06:39,084 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,085 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,085 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:06:39,112 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,112 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:06:39,112 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:06:39,113 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,113 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,113 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,114 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,116 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,119 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,119 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,119 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,120 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:06:39,120 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,120 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,120 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:06:39,141 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,142 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:06:39,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:06:39,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,142 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,143 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,145 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,148 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:06:39,173 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,173 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:06:39,173 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:06:39,173 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,174 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,174 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,176 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,179 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,183 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,183 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,183 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,184 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:06:39,184 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,184 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,184 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:06:39,186 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,186 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:06:39,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:06:39,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,187 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,187 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,188 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,193 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,195 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:06:39,197 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,198 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:06:39,198 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:06:39,198 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,198 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:06:39,198 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,199 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,200 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,203 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,203 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,203 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,203 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:06:39,203 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,204 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,204 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:06:39,206 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:06:39,206 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:06:39,206 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:06:39,207 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:06:39,207 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:06:39,207 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:06:39,373 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,374 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,376 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,376 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,376 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,376 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:06:39,376 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,377 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,377 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:06:39,403 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:06:39,403 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:06:39,403 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:39,403 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:39,403 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:39,404 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:06:39,404 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:06:39,404 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:06:39,405 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,407 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,410 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:06:39,416 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "PmXXr7kEqO83feiO1rGK";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2512361205776">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2512361206496">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2512361206064">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2512361206928">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2512361206784">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2512361207072">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2512361207216">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:06:39,416 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:06:39,416 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:06:39,416 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:06:39,448 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:06:39,449 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b390b4a0-8957-4a2d-9557-eca52df42dff'}
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:06:39,451 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:06:39,454 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:06:39,454 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:06:39,455 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:06:39,455 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:06:39,455 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:06:39,456 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:06:39,456 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:06:39,456 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:06:39,457 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:06:39,470 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,579 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:07:43,579 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:07:43,579 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:07:43,580 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:07:43,580 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:07:43,580 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,580 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:07:43,588 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"18c9419f-f538-483a-95d2-4f5ed538dc94","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:07:43,589 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:07:43,589 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:07:43,589 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:07:43,589 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,590 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,593 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:07:43,603 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:07:43,603 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:07:43,604 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:43,604 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:43,604 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,605 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:07:43,605 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,606 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,609 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,611 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,611 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,611 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,611 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:07:43,611 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,612 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,612 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:07:43,622 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:07:43,622 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:07:43,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:43,622 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:43,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,623 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,624 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,626 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,628 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,628 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,628 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,628 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:07:43,629 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,629 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,629 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:07:43,651 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:07:43,651 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:07:43,652 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:43,652 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:43,652 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,652 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,653 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,654 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,656 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,656 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,656 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,656 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:07:43,657 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,657 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,657 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:07:43,683 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:07:43,684 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:07:43,684 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:43,685 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:43,685 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,685 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:07:43,685 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,688 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,689 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,692 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:07:43,714 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:07:43,714 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:07:43,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:43,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:43,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,715 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:07:43,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:07:43,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,716 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,716 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,718 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,719 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,721 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,721 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,721 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,721 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:07:43,722 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,722 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,722 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:07:43,745 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:07:43,745 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:07:43,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:43,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:43,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,747 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:07:43,748 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:07:43,748 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:43,748 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,748 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,753 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,754 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,757 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:07:43,770 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,771 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:07:43,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:07:43,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,771 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,771 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,773 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,777 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,779 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,779 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,779 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,779 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:07:43,779 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,779 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,780 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:07:43,801 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,802 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:07:43,802 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:07:43,802 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,802 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,802 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,803 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,806 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,808 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,808 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,808 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,808 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:07:43,808 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,808 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,809 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:07:43,811 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,811 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:07:43,811 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:07:43,811 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,811 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,811 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,813 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,813 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,816 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:07:43,819 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,819 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:07:43,819 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:07:43,819 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,819 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,819 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,820 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,821 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,822 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,822 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,824 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,824 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:07:43,824 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,824 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,824 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:07:43,848 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,848 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:07:43,848 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:07:43,848 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,849 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,849 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,850 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,850 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,852 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,852 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,853 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,853 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:07:43,853 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,853 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,853 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:07:43,878 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,879 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:07:43,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:07:43,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:07:43,880 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:43,881 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:43,885 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:43,887 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:43,887 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:43,887 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:43,887 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:07:43,888 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:43,888 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:43,888 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:07:43,910 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:07:43,910 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:07:43,910 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:07:43,911 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:07:43,911 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:07:43,911 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:07:44,080 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:44,081 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:44,083 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:07:44,086 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:07:44,086 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:07:44,086 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:44,086 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:44,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:44,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:07:44,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:07:44,087 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:07:44,087 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:44,088 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:44,090 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:44,090 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:44,091 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:44,091 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:07:44,091 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:44,091 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:44,091 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:07:44,096 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "PmXXr7kEqO83feiO1rGK";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2512362296880">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2512362297168">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2512362297312">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2512362296592">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2512362297744">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2512362297600">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2512362297888">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:07:44,096 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:07:44,096 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:07:44,097 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:07:44,124 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:07:44,126 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:07:44,127 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:07:44,128 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:07:44,128 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:07:44,128 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:07:44,128 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '18c9419f-f538-483a-95d2-4f5ed538dc94'}
INFO - 2025-06-12 21:07:44,128 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:07:44,128 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:07:44,141 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:07:44,142 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:07:44,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:07:44,143 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:07:44,143 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:07:44,143 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:07:44,144 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:07:44,144 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:07:44,144 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:07:44,156 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,065 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:08:06,065 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:08:06,065 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:08:06,065 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:08:06,066 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:08:06,066 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,066 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:08:06,074 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"ce5bb15e-5d00-4cdd-8160-9621b0a84303","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:08:06,075 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:08:06,075 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:08:06,075 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:08:06,076 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,076 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,078 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:08:06,105 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:08:06,106 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:08:06,106 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,106 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,107 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,107 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:08:06,108 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,109 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,114 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,115 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,116 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,116 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,116 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:08:06,116 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,116 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,116 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:08:06,141 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:08:06,141 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:08:06,141 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,142 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,142 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,144 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,147 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,149 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,149 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,149 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,149 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:08:06,149 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,149 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,150 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:08:06,164 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:08:06,165 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:08:06,165 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,165 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,165 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,165 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,166 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,171 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,173 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,173 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,173 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,174 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:08:06,174 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,174 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,174 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:08:06,205 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:08:06,206 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:08:06,207 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,208 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,209 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:08:06,210 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,212 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,214 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,217 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,217 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,217 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,218 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:08:06,218 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,218 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,218 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:08:06,251 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:08:06,251 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:08:06,251 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,251 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,252 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:08:06,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:08:06,253 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,254 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,254 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,259 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,260 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,262 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,263 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,263 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,263 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:08:06,263 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,263 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,263 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:08:06,294 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:08:06,294 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:08:06,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,295 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,295 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,295 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:08:06,295 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:08:06,296 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,296 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,296 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,298 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,299 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,301 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,301 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,302 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,302 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:08:06,302 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,302 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,302 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:08:06,305 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,306 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,306 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:08:06,306 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,306 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,306 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,307 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,308 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,310 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,310 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,310 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,310 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:08:06,310 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,311 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,311 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:08:06,313 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,313 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,313 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:08:06,314 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,314 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,314 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,315 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,317 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,320 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,320 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,320 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,320 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:08:06,320 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,320 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,321 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:08:06,348 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,348 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,348 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:08:06,348 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,348 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,349 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,350 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,350 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,354 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,354 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,354 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,354 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:08:06,354 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,355 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,355 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:08:06,378 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,379 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,379 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:08:06,379 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,379 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,379 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,380 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,385 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,387 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,387 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,387 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,388 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:08:06,388 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,388 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,388 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:08:06,411 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,411 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,411 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:08:06,412 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,412 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,412 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,414 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,416 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,420 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,420 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,420 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,420 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:08:06,420 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,420 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,421 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:08:06,441 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,441 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,441 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:08:06,442 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,442 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,443 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,443 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,446 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,448 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,448 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,448 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,448 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:08:06,449 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,449 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,449 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:08:06,471 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:08:06,472 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:08:06,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 21:08:06,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:08:06,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:08:06,473 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:08:06,474 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,476 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,478 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:08:06,502 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:08:06,502 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:08:06,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
ERROR - 2025-06-12 21:08:06,503 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[12]】
ERROR - 2025-06-12 21:08:06,503 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:08:06,680 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,681 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,682 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,682 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,682 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,682 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:08:06,683 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,683 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,683 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:08:06,689 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "kDeyvH7aAi67q720jWNg";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2173793120416">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2173793120992">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2173793120704">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2173793121280">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2173793121424">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2173793121568">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2173793121712">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:08:06,689 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:08:06,690 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:08:06,690 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:08:06,722 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:08:06,723 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:08:06,725 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:08:06,725 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:08:06,725 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:08:06,725 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:08:06,725 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'ce5bb15e-5d00-4cdd-8160-9621b0a84303'}
INFO - 2025-06-12 21:08:06,725 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:08:06,726 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:08:06,728 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 12
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:08:06,729 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:08:06,729 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:08:06,729 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:08:06,729 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:08:06,730 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:08:06,730 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:08:06,731 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:08:06,731 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:08:06,742 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,546 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:10:01,547 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:10:01,547 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:10:01,547 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:10:01,547 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:10:01,547 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,548 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:10:01,583 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f481d79b-5d75-49b7-a45c-18a455944212","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:10:01,585 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:10:01,585 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:10:01,586 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:10:01,586 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,586 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,588 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,588 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,588 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,588 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:10:01,588 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,588 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,589 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:10:01,627 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:10:01,627 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:10:01,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:01,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:01,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:10:01,628 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,629 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,638 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,639 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,640 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,640 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,640 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:10:01,640 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,640 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,640 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:10:01,678 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:10:01,679 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:10:01,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:01,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:01,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,680 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,681 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,684 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,686 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:10:01,703 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:10:01,703 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:10:01,703 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:01,703 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:01,704 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,704 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,705 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,715 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,717 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,717 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,717 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,718 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:10:01,718 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,718 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,718 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:10:01,737 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:10:01,737 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:10:01,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:01,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:01,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,738 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:10:01,738 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,747 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,748 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,750 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:10:01,791 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:10:01,791 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:10:01,792 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:01,792 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:01,792 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:10:01,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:10:01,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,793 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,794 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,808 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,809 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,812 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:10:01,828 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:10:01,829 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:10:01,829 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:01,829 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:01,830 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,830 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:10:01,830 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:10:01,830 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:01,831 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,831 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,838 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,839 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,840 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,841 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,841 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,841 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:10:01,841 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,841 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,841 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:10:01,846 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,846 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:10:01,846 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:10:01,846 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,846 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,846 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,853 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,854 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,856 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,856 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,857 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,857 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:10:01,857 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,857 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,857 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:10:01,870 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,870 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:10:01,870 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:10:01,870 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,870 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,870 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,871 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,884 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,886 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,887 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,887 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,887 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:10:01,887 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,887 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,887 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:10:01,901 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,901 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:10:01,901 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:10:01,901 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,901 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,901 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,902 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,903 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,918 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,918 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,918 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,918 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:10:01,918 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,918 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,919 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:10:01,922 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,922 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:10:01,922 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:10:01,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,923 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,924 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,933 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,935 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,935 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,936 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,936 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:10:01,936 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,936 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,936 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:10:01,938 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,939 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:10:01,939 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:10:01,939 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,939 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,939 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,940 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,947 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,948 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,949 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,949 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,949 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:10:01,949 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,949 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,949 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:10:01,963 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,963 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:10:01,963 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:10:01,963 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,964 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:10:01,964 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:01,965 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:01,978 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:01,980 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:01,980 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:01,981 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:01,981 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:10:01,981 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:01,981 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:01,981 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:10:01,994 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:10:01,994 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:10:01,994 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:10:01,994 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:10:01,994 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:10:01,995 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:10:02,209 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:02,210 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:02,211 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:02,212 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:02,212 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:02,212 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:10:02,212 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:02,212 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:02,212 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:10:02,215 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:10:02,215 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:10:02,215 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:02,215 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:02,215 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:02,216 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:10:02,216 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:10:02,216 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:10:02,224 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:02,225 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:02,227 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:02,227 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:02,227 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:02,227 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:10:02,228 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:02,228 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:02,228 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:10:02,233 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "BCDvZBdops3ZhTNusXtn";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2868934717456">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2868934718176">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2868934717744">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2868934718608">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2868934718464">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2868934718752">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2868934718896">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:10:02,234 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:10:02,234 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:10:02,234 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:10:02,285 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:10:02,286 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:10:02,288 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:10:02,289 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:10:02,289 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:10:02,289 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:10:02,289 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f481d79b-5d75-49b7-a45c-18a455944212'}
INFO - 2025-06-12 21:10:02,289 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:10:02,289 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:10:02,293 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:10:02,293 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:10:02,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:10:02,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:10:02,294 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:10:02,295 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:10:02,295 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:10:02,295 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:10:02,296 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:10:02,332 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,160 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:11:14,160 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:11:14,161 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:11:14,161 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:11:14,161 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:11:14,161 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,162 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:11:14,184 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"b0ed934a-4f9d-4a96-bb14-39b542d0f25d","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:11:14,185 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:11:14,185 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:11:14,186 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:11:14,186 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,186 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,188 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:14,216 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:11:14,217 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:11:14,217 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,218 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,218 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,219 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:11:14,219 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,221 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,224 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,227 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:11:14,232 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:11:14,232 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:11:14,233 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,233 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,233 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,233 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,239 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,239 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,242 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:11:14,259 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:11:14,259 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:11:14,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,260 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,261 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,270 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,272 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,273 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,273 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,273 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:11:14,273 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,273 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,273 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:11:14,297 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:11:14,298 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:11:14,298 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,299 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,300 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,300 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:11:14,301 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,316 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,319 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,322 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,322 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,322 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,323 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:11:14,323 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,323 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,323 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:11:14,355 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:11:14,356 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:11:14,356 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:11:14,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:11:14,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,358 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,362 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,363 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,365 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,365 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,365 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,365 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:11:14,365 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,366 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,366 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:11:14,375 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:11:14,375 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:11:14,375 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,375 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,376 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,376 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:11:14,376 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:11:14,376 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,377 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,377 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,393 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,394 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,396 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,396 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,397 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,397 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:11:14,397 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,397 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,397 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:14,425 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,426 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:14,426 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:11:14,426 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,427 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,427 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,428 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,438 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,442 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,442 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,442 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,442 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:11:14,443 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,443 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,443 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:14,473 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,474 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:14,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:11:14,474 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,475 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,475 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,477 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,485 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,491 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,491 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,491 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,491 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:11:14,491 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,491 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,492 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:11:14,494 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,495 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:14,495 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:11:14,495 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,495 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,495 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,496 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,501 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,502 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,502 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,503 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,503 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:11:14,503 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,503 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,503 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:11:14,517 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,517 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:14,517 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:11:14,518 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,518 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,518 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,519 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,531 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,534 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,534 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,534 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,534 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:11:14,534 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,535 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,535 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:14,540 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,540 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:14,540 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:11:14,540 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,540 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,541 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,541 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,547 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,550 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:14,553 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,553 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:14,554 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:11:14,554 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,554 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:14,554 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,562 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,563 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,566 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,566 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,566 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,566 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:11:14,567 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,567 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,567 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:14,595 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:14,595 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:11:14,596 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:11:14,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:14,596 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:11:14,596 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:11:14,778 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,779 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,781 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:11:14,787 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:11:14,787 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:11:14,787 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:11:14,788 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:11:14,788 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:14,793 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,794 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,796 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,796 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,796 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,796 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:11:14,796 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,796 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,797 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:11:14,818 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "BCDvZBdops3ZhTNusXtn";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2868935808560">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2868935808272">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2868935808992">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2868935808704">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2868935809424">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2868935809280">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2868935809568">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:11:14,818 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:11:14,818 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:11:14,819 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:11:14,871 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:14,872 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:14,874 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:14,874 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:14,874 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:14,874 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:11:14,875 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'b0ed934a-4f9d-4a96-bb14-39b542d0f25d'}
INFO - 2025-06-12 21:11:14,875 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:14,875 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:11:14,879 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:11:14,879 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:11:14,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:14,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:14,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:14,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:11:14,881 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:11:14,882 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:11:14,882 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:11:14,917 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,722 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:11:31,722 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:11:31,722 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:11:31,722 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:11:31,722 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:11:31,722 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,723 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:11:31,758 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"d613376b-ef61-4d9b-861f-33297d3d4c4a","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:11:31,760 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:11:31,760 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:11:31,761 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:11:31,761 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,761 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,765 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,765 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,766 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,766 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:11:31,766 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,766 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,766 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:31,798 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:11:31,798 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:11:31,798 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:31,799 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:31,799 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,799 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:11:31,799 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,801 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,803 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,805 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,805 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,806 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,806 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:11:31,806 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,806 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,806 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:11:31,818 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:11:31,818 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:11:31,818 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:31,818 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:31,819 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,819 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,820 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,821 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,823 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,823 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,823 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,824 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:11:31,824 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,824 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,824 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:11:31,840 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:11:31,841 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:11:31,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:31,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:31,842 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,842 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,843 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,846 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,848 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,848 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,848 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,849 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:11:31,849 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,849 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,849 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:11:31,873 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:11:31,874 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:11:31,874 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:31,875 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:31,876 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,876 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:11:31,876 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,879 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,880 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,882 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:11:31,921 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:11:31,922 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:11:31,922 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:31,922 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:31,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:11:31,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:11:31,924 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:31,924 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,924 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,928 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,928 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,931 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:11:31,974 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:11:31,975 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:11:31,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:31,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:31,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:11:31,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:11:31,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:31,977 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:31,977 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,978 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,979 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,982 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:31,985 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:31,986 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:31,986 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:11:31,986 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:31,986 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:31,986 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:31,987 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:31,988 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:31,989 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:31,990 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:31,990 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:31,990 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:11:31,990 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:31,990 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:31,990 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:32,006 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:32,007 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:32,007 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:11:32,007 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:32,007 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:32,007 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:32,008 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,011 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,014 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:11:32,037 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:32,038 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:32,039 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:11:32,039 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:32,040 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:32,040 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:32,042 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,043 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,048 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,049 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,049 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,049 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:11:32,049 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,049 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,049 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:11:32,053 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:32,053 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:32,053 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:11:32,053 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:32,054 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:32,054 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:32,055 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,057 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,059 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,059 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,059 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,059 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:11:32,059 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,060 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,060 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:32,085 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:32,085 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:32,086 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:11:32,086 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:32,087 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:32,087 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:32,089 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,092 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,095 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,095 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,095 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,096 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:11:32,096 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,096 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,096 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:32,115 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:32,115 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:11:32,116 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:11:32,116 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:32,116 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:11:32,116 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:32,118 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,120 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,124 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,124 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,124 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,124 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:11:32,125 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,125 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,125 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:11:32,145 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:11:32,145 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:11:32,145 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:11:32,145 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:11:32,145 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:11:32,145 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:11:32,314 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,315 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,317 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,317 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,317 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,317 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:11:32,318 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,318 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,318 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:11:32,330 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:11:32,331 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:11:32,331 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:32,331 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:32,331 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:32,332 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:11:32,332 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:11:32,332 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:11:32,333 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,333 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,335 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,336 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,336 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,336 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:11:32,336 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,336 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,336 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:11:32,368 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "tIcpUHeAIpjusl4jU1Lw";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2308995593072">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2308995592928">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2308995592496">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2308995593360">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2308995593216">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2308995593504">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2308995593648">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:11:32,368 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:11:32,368 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:11:32,368 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:11:32,401 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:11:32,403 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:11:32,404 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:11:32,404 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:11:32,405 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:11:32,405 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:11:32,405 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd613376b-ef61-4d9b-861f-33297d3d4c4a'}
INFO - 2025-06-12 21:11:32,405 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:11:32,405 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:11:32,407 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:11:32,408 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:11:32,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:11:32,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:11:32,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:11:32,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:11:32,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:11:32,410 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:11:32,410 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:11:32,423 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,272 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:12:00,273 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:12:00,273 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:12:00,273 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:12:00,273 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:12:00,273 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,274 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:12:00,280 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"f18245d0-b9de-49d8-9681-33dc34694933","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:12:00,281 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:12:00,281 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:12:00,282 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:12:00,282 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,282 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,284 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,284 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,284 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,284 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:12:00,285 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,285 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,285 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:00,291 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:12:00,292 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:12:00,292 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,292 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,292 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,292 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:12:00,292 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,297 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,298 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,300 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:12:00,305 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:12:00,305 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:12:00,305 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,305 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,306 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,306 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,312 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,313 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,314 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,314 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,315 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,315 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:12:00,315 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,315 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,316 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:12:00,331 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:12:00,332 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:12:00,332 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,332 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,332 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,332 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,333 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,343 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,345 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,345 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,345 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,345 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:12:00,345 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,346 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,346 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:12:00,352 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:12:00,352 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:12:00,353 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,353 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,354 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,354 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:12:00,354 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,358 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,360 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,362 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,362 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,362 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,362 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:12:00,362 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,362 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,363 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:12:00,385 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:12:00,386 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:12:00,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:12:00,386 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:12:00,387 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,387 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,387 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,389 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,390 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,392 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,392 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,392 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,393 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:12:00,393 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,393 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,393 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:12:00,410 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:12:00,410 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:12:00,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,411 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:12:00,411 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:12:00,412 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,412 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,412 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,420 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,422 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,424 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:00,437 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,437 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:12:00,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,438 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,439 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,451 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,453 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,454 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,454 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,454 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:12:00,454 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,454 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,454 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:00,457 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,457 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,457 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:12:00,457 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,457 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,458 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,458 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,466 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,469 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,469 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,469 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,469 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:12:00,469 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,469 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,470 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:12:00,472 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,472 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:12:00,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,473 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,473 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,482 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,484 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,484 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,485 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,485 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:12:00,485 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,485 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,485 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:12:00,498 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,499 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,499 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:12:00,499 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,499 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,500 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,500 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,513 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,516 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,516 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,516 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,516 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:12:00,517 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,517 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,517 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:00,530 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,530 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,531 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:12:00,531 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,531 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,531 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,533 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,544 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,547 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,547 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,547 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,547 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:12:00,547 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,547 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,548 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:00,560 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,561 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,561 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:12:00,561 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,561 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,561 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,562 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,575 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,578 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,578 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,579 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,579 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:12:00,579 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,579 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,580 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:00,609 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a22",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:00,610 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:00,610 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为22】
INFO - 2025-06-12 21:12:00,611 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:00,611 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:00,612 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,614 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,620 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,625 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,626 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,626 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,626 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:12:00,627 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,627 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,627 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:12:00,654 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:12:00,655 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:12:00,656 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,657 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,657 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,658 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:12:00,658 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:12:00,658 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:00,661 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,667 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,669 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,670 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,670 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,670 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:12:00,670 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,670 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,670 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:12:00,691 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "27zy3AxFNKGG16xhsh3t";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2074154611568">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2074154610560">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2074154611136">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2074154611856">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2074154611712">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2074154612000">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2074154612144">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:12:00,692 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:12:00,692 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:12:00,692 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:12:00,899 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:00,901 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:00,904 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:00,904 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:00,905 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:00,905 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:12:00,905 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'f18245d0-b9de-49d8-9681-33dc34694933'}
INFO - 2025-06-12 21:12:00,905 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:00,906 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:12:00,932 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:12:00,933 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:12:00,934 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:00,935 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:00,935 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:00,936 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:12:00,937 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:12:00,938 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:12:00,938 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:12:00,976 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,712 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:12:18,712 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:12:18,712 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:12:18,712 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:12:18,712 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:12:18,713 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,713 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:12:18,734 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"cf4d6995-b7ba-4991-9643-4daef42e2c29","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:12:18,735 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:12:18,735 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:12:18,735 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:12:18,736 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,736 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,738 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,738 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,738 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,739 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:12:18,739 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,739 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,739 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:18,745 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:12:18,745 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:12:18,745 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:18,745 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:18,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,746 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:12:18,746 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,747 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,751 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,753 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:12:18,779 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:12:18,780 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:12:18,780 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:18,780 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:18,781 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,781 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,782 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,785 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,788 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,788 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,788 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,788 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:12:18,788 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,789 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,789 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:12:18,814 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:12:18,814 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:12:18,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:18,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:18,815 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,815 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,816 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,818 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,820 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,821 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,821 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,821 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:12:18,821 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,821 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,821 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:12:18,849 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:12:18,850 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:12:18,851 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:18,852 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:18,853 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,853 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:12:18,853 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,858 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,858 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,861 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,861 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,861 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,861 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:12:18,861 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,861 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,862 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:12:18,886 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:12:18,886 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:12:18,887 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:18,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:18,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:12:18,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:12:18,888 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:18,889 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,889 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,893 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,894 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,896 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:12:18,913 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:12:18,913 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:12:18,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:18,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:18,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,914 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:12:18,915 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:12:18,915 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:18,916 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:18,916 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,918 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,920 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,921 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,922 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,922 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,922 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:12:18,922 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,922 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,922 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:18,944 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:18,944 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:18,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:12:18,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:18,945 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:18,945 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,946 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,949 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,951 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:18,975 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:18,975 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:18,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:12:18,975 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:18,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:18,976 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,977 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,977 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,979 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,980 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,980 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,980 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:12:18,980 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,980 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,980 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:12:18,983 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:18,984 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:18,984 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:12:18,984 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:18,984 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:18,984 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,986 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,988 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:18,993 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:12:18,996 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:18,996 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:18,996 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:12:18,996 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:18,996 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:18,996 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:18,997 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:18,998 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:19,000 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:19,020 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:19,021 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:19,021 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:12:19,021 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:19,021 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:19,021 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:19,022 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:19,027 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:19,029 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:19,052 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:19,052 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:12:19,053 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:12:19,053 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:19,053 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:12:19,053 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:19,054 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:19,056 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:19,058 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:19,058 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:19,059 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:19,059 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:12:19,059 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:19,059 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:19,059 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:12:19,083 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:12:19,083 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:12:19,083 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:12:19,083 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:12:19,084 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:12:19,084 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:12:19,263 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:19,264 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:19,266 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:12:19,283 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:12:19,283 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:12:19,283 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:19,283 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:19,283 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:19,284 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:12:19,284 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:12:19,284 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:12:19,285 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:19,287 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:19,289 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:19,289 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:19,290 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:19,290 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:12:19,290 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:19,290 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:19,290 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:12:19,318 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "cXPIhgt3fldEhMQxJr1n";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-3037862865808">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-3037862867680">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-3037862867824">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-3037862867968">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-3037862868112">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-3037862868256">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-3037862868400">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:12:19,318 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:12:19,319 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:12:19,319 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:12:19,354 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:12:19,355 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:12:19,357 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:12:19,357 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:12:19,358 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:12:19,358 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:12:19,358 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cf4d6995-b7ba-4991-9643-4daef42e2c29'}
INFO - 2025-06-12 21:12:19,358 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:12:19,358 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:12:19,360 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:12:19,361 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:12:19,361 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:12:19,361 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:12:19,362 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:12:19,362 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:12:19,362 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:12:19,363 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:12:19,363 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:12:19,374 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,281 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:14:32,281 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:14:32,281 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:14:32,282 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:14:32,282 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:14:32,282 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,283 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:14:32,306 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:14:32,307 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:14:32,307 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:14:32,307 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:14:32,308 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,308 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,310 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,310 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,311 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,311 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:14:32,311 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,311 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,311 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:14:32,337 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:14:32,338 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:14:32,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:32,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:32,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,338 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:14:32,339 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,340 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,347 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,350 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,350 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,350 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,350 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:14:32,351 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,351 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,351 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:14:32,386 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:14:32,387 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:14:32,388 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:32,388 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:32,388 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,389 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,391 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,393 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,398 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,398 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,398 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,398 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:14:32,399 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,399 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,399 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:14:32,436 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:14:32,437 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:14:32,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:32,438 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:32,439 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,439 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,442 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,454 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,458 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,458 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,459 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,459 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:14:32,459 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,459 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,459 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:14:32,500 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:14:32,501 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:14:32,501 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:32,502 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:32,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,503 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:14:32,503 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,516 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,518 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,521 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,521 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,521 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,521 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:14:32,522 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,522 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,522 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:14:32,559 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:14:32,560 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:14:32,560 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:32,561 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:32,561 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,562 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:14:32,562 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:14:32,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,563 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,578 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,581 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,584 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,584 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,584 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,585 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:14:32,585 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,585 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,585 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:14:32,625 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:14:32,626 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:14:32,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:32,626 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:32,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:14:32,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:14:32,627 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:32,628 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,628 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,640 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,641 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,643 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,643 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,643 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,643 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:14:32,644 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,644 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,644 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:14:32,657 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,658 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:14:32,658 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:14:32,658 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,658 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,658 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,659 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,671 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,673 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,673 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,674 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,674 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:14:32,674 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,674 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,674 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:14:32,688 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,688 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:14:32,688 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:14:32,688 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,688 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,689 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,689 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,702 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,704 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,705 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,705 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,705 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:14:32,705 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,705 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,705 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:14:32,719 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,719 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:14:32,719 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:14:32,719 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,720 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,720 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,721 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,722 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,735 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,736 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,736 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,736 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:14:32,736 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,736 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,736 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:14:32,749 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,749 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:14:32,750 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:14:32,750 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,750 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,750 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,751 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,764 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,766 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,766 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,767 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,767 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:14:32,767 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,767 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,767 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:14:32,780 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,781 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:14:32,781 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:14:32,781 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,781 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,781 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,782 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,795 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,797 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,798 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,798 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,798 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:14:32,798 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,798 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,798 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:14:32,812 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,813 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:14:32,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:14:32,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:14:32,813 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:32,814 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:32,826 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:32,829 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:14:32,833 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:14:32,833 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:14:32,833 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:14:32,833 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:14:32,833 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:14:32,833 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:14:33,012 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:33,013 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:33,015 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:33,015 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:33,015 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:33,015 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:14:33,015 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:33,015 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:33,016 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:14:33,028 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:14:33,029 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:14:33,029 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:33,029 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:33,029 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:33,029 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:14:33,030 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:14:33,030 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:14:33,031 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:33,043 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:33,045 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:33,045 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:33,045 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:33,046 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:14:33,046 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:33,046 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:33,046 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:14:33,065 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "hvFyeAxVIFS5jpS1C2kb";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2492064772832">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2492064772544">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2492064772400">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2492064773120">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2492064773264">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2492064773408">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2492064773552">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:14:33,065 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:14:33,065 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:14:33,066 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:14:33,120 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:14:33,121 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:14:33,123 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:14:33,123 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:14:33,123 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:14:33,123 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:14:33,123 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'fd0b1957-8ae0-4a61-98d0-d1ec6bfdebe7'}
INFO - 2025-06-12 21:14:33,124 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:14:33,124 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:14:33,136 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:14:33,137 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:14:33,137 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:14:33,138 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:14:33,138 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:14:33,138 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:14:33,138 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:14:33,139 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:14:33,139 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:14:33,166 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:22,946 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:22:22,946 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:22:22,947 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:22:22,947 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:22:22,947 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:22:22,947 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:22,948 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:22:23,004 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"c3303107-cd13-465a-a50b-2cdb16794db7","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:22:23,006 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:22:23,006 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:22:23,006 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:22:23,006 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,007 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,009 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,009 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,009 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,010 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:22:23,010 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,010 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,010 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:22:23,021 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:22:23,021 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:22:23,021 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,022 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,022 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,022 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:22:23,022 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,023 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,025 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,028 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:22:23,050 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:22:23,051 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:22:23,051 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,051 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,051 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,051 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,052 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,056 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,058 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:22:23,069 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:22:23,069 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:22:23,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,069 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,070 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,072 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,074 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:22:23,083 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:22:23,083 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:22:23,083 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,084 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,084 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,084 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:22:23,085 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,087 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,089 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,091 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,091 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,091 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,091 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:22:23,092 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,092 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,092 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:22:23,127 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:22:23,128 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:22:23,128 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,128 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:22:23,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:22:23,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,129 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,133 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,134 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,136 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,136 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,137 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,137 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:22:23,137 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,137 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,137 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:22:23,173 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:22:23,174 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:22:23,174 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,174 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,174 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,175 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:22:23,175 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:22:23,175 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,175 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,176 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,179 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,180 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,182 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:22:23,196 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,196 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:22:23,196 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:22:23,196 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,196 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,197 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,197 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,210 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,212 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,212 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,212 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,212 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:22:23,213 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,213 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,213 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:22:23,227 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,227 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:22:23,227 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:22:23,227 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,228 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,228 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,229 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,240 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,243 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,244 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,244 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,244 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:22:23,244 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,244 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,244 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:22:23,247 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,247 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:22:23,247 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:22:23,247 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,247 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,248 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,248 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,256 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,258 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,258 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,258 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,259 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:22:23,259 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,259 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,259 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:22:23,261 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,261 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:22:23,261 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:22:23,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,262 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,262 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,272 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,273 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,275 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,275 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,276 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,276 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:22:23,276 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,276 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,276 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:22:23,278 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,278 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:22:23,279 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:22:23,279 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,279 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,279 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,287 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,287 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,289 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,289 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,290 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,290 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:22:23,290 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,290 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,290 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:22:23,303 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,303 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:22:23,303 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:22:23,303 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,303 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:22:23,304 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,305 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,317 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,321 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,321 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,321 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,321 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:22:23,321 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,322 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,322 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:22:23,325 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:22:23,325 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:22:23,325 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:22:23,325 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:22:23,325 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:22:23,325 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:22:23,503 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,504 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,506 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:22:23,510 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": true,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:22:23,510 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:22:23,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:22:23,510 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:22:23,510 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:22:23,518 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,518 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,521 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,521 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,521 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,521 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:22:23,521 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,521 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,522 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:22:23,538 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "86M12J8YCTW44xodjauq";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2655526695072">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2655526695216">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2655526694784">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2655526695360">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2655526696224">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2655526696080">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2655526696368">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:22:23,538 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:22:23,538 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:22:23,538 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:22:23,579 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:22:23,580 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:22:23,582 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:22:23,583 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:22:23,583 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:22:23,583 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:22:23,583 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'c3303107-cd13-465a-a50b-2cdb16794db7'}
INFO - 2025-06-12 21:22:23,583 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:22:23,583 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:22:23,586 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:22:23,586 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:22:23,586 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:22:23,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:22:23,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:22:23,587 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:22:23,588 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:22:23,588 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:22:23,588 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:22:23,626 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,070 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:24:28,070 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:24:28,070 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:24:28,070 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:24:28,071 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:24:28,071 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,071 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:24:28,097 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"cac464e7-142b-4668-9bab-d71371cffcb6","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:24:28,098 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:24:28,098 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:24:28,099 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:24:28,099 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,099 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,101 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:28,134 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:24:28,135 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:24:28,136 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,136 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,137 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,137 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:24:28,137 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,140 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,152 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,154 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,154 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,155 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,155 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:24:28,155 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,155 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,155 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:24:28,187 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:24:28,188 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:24:28,188 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,189 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,189 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,189 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,191 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,197 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,200 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,200 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,201 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,201 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:24:28,201 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,201 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,201 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:24:28,237 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:24:28,237 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:24:28,237 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,238 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,238 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,238 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,239 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,243 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,246 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,247 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,247 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,247 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:24:28,247 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,247 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,248 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:24:28,257 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:24:28,258 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:24:28,259 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,260 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,261 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:24:28,261 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,273 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,275 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,277 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,277 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,277 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,278 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:24:28,278 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,278 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,278 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:24:28,286 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:24:28,287 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:24:28,288 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,288 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,288 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,289 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:24:28,289 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:24:28,290 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,290 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,290 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,304 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,306 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,309 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,309 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,310 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,310 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:24:28,310 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,310 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,310 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:24:28,332 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:24:28,333 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:24:28,334 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,334 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,335 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,335 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:24:28,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:24:28,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,336 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,351 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,353 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,355 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:28,358 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,358 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:28,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:24:28,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,359 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,359 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,366 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,367 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,369 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,369 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,370 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,370 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:24:28,370 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,370 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,370 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:28,372 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,372 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:28,372 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:24:28,372 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,373 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,373 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,382 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,383 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,385 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,385 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,385 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,385 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:24:28,385 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,385 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,386 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:24:28,399 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,399 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:28,399 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:24:28,399 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,399 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,399 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,400 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,401 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,415 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,415 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,416 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,416 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:24:28,416 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,416 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,416 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:24:28,430 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,430 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:28,430 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:24:28,430 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,430 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,430 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,431 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,444 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,448 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,448 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,448 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,448 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:24:28,448 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,448 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,449 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:28,477 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,478 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:28,478 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:24:28,479 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,480 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,480 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,482 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,490 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,494 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,495 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,495 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,495 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:24:28,495 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,496 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,496 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:28,525 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,526 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:28,526 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:24:28,526 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,527 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:28,527 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,529 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,537 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,540 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,540 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,541 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,541 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:24:28,541 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,541 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,541 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:28,569 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:28,570 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:24:28,571 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:24:28,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:28,571 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:24:28,571 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:24:28,738 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,739 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,741 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:24:28,754 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": true,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:24:28,755 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:24:28,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:24:28,755 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:24:28,755 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:28,756 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,769 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,771 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,771 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,771 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,771 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:24:28,772 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,772 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,772 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:24:28,788 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "86M12J8YCTW44xodjauq";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2655527785888">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2655527786176">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2655527786320">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2655527785456">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2655527786896">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2655527786752">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2655527787040">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:24:28,789 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:24:28,789 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:24:28,789 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:24:28,831 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:28,832 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:28,834 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:28,834 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:28,834 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:28,834 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:24:28,834 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'cac464e7-142b-4668-9bab-d71371cffcb6'}
INFO - 2025-06-12 21:24:28,835 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:28,835 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:24:28,862 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:24:28,862 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:24:28,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:28,863 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:28,864 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:28,864 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:24:28,865 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:24:28,865 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:24:28,865 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:24:28,892 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,722 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:24:42,722 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:24:42,722 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:24:42,722 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:24:42,722 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:24:42,723 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,723 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:24:42,755 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a0d93ff6-a0e6-4518-b283-185c74f32f0e","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:24:42,756 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:24:42,756 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:24:42,756 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:24:42,756 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,757 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,759 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,759 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,759 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,759 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:24:42,759 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,760 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,760 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:42,785 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:24:42,785 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:24:42,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:42,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:42,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,786 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:24:42,786 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,787 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,791 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,792 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,793 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,793 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,793 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:24:42,793 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,793 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,793 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:24:42,813 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:24:42,813 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:24:42,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:42,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:42,813 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,814 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,815 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,819 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,820 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,822 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,822 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,822 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:24:42,823 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,823 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,823 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:24:42,840 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:24:42,840 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:24:42,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:42,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:42,841 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,841 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,843 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,848 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,850 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,850 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,850 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,850 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:24:42,850 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,850 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,851 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:24:42,879 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:24:42,879 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:24:42,879 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:42,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:42,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,880 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:24:42,880 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,886 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,887 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,889 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,889 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,889 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,889 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:24:42,889 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,890 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,890 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:24:42,903 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:24:42,903 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:24:42,903 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:42,903 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:42,904 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,904 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:24:42,904 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:24:42,904 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:42,904 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,904 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,910 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,911 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,913 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:24:42,920 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:24:42,921 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:24:42,921 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:42,922 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:42,922 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,922 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:24:42,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:24:42,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:42,923 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:42,923 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,928 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,928 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,930 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,930 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,930 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,930 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:24:42,931 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,931 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,931 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:42,943 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:42,943 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:42,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:24:42,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:42,944 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:42,944 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,945 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,947 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,949 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:42,975 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:42,976 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:42,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:24:42,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:42,976 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:42,976 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,978 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,981 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,983 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,983 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,983 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,984 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:24:42,984 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,984 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,984 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:24:42,987 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:42,987 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:42,987 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:24:42,987 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:42,987 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:42,987 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:42,988 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:42,989 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:42,991 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:42,991 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:42,991 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:42,991 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:24:42,992 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:42,992 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:42,992 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:24:43,006 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:43,006 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:43,006 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:24:43,006 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:43,006 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:43,006 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:43,007 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:43,012 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:43,014 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:43,015 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:43,015 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:43,015 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:24:43,015 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:43,015 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:43,015 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:43,037 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:43,037 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:43,037 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:24:43,038 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:43,038 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:43,038 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:43,040 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:43,041 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:43,044 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:43,068 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:43,068 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:43,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:24:43,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:43,069 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:43,070 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:43,071 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:43,075 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:43,080 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:43,080 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:43,080 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:43,080 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:24:43,080 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:43,081 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:43,081 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:43,098 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:43,099 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:24:43,099 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:24:43,099 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:43,100 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:24:43,100 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:24:43,265 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:43,266 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:43,268 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:43,268 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:43,268 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:43,268 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:24:43,268 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:43,268 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:43,269 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:24:43,283 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": true,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:24:43,283 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:24:43,283 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:43,283 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:43,283 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:43,284 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:24:43,284 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:24:43,284 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:43,284 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:43,286 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:43,288 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:43,288 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:43,288 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:43,288 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:24:43,288 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:43,288 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:43,289 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:24:43,322 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "86M12J8YCTW44xodjauq";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2655527786464">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2655527786032">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2655527787616">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2655527787184">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2655527785600">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2655527787328">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2655527787472">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:24:43,322 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:24:43,322 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:24:43,323 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:24:43,359 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:43,360 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:43,362 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:43,363 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:43,363 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:43,363 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:24:43,363 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0d93ff6-a0e6-4518-b283-185c74f32f0e'}
INFO - 2025-06-12 21:24:43,363 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:43,363 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:24:43,375 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:24:43,376 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:24:43,376 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:43,376 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:43,377 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:43,377 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:24:43,377 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:24:43,377 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:24:43,378 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:24:43,391 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,212 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:24:56,212 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:24:56,213 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:24:56,213 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:24:56,213 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:24:56,213 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,213 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:24:56,244 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"36c67230-5a62-49dd-be5c-f09f24f99326","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:24:56,245 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:24:56,245 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:24:56,245 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:24:56,245 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,245 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,248 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,248 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,248 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,248 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:24:56,249 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,249 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,249 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:56,275 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:24:56,275 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:24:56,276 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,276 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,276 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,276 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:24:56,277 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,278 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,281 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,283 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,283 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,283 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,284 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:24:56,284 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,284 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,284 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:24:56,306 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:24:56,307 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:24:56,307 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,308 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,308 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,308 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,309 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,311 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,313 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,313 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,313 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,314 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:24:56,314 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,314 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,314 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:24:56,338 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:24:56,339 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:24:56,340 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,340 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,340 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,340 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,342 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,344 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,347 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,348 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,348 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,348 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:24:56,348 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,348 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,348 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:24:56,356 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:24:56,357 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:24:56,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:24:56,358 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,362 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,363 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,365 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,365 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,365 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,366 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:24:56,366 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,366 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,366 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:24:56,406 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:24:56,407 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:24:56,407 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,408 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:24:56,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:24:56,409 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,410 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,410 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,414 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,415 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,418 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:24:56,446 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:24:56,446 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:24:56,446 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:24:56,447 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:24:56,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,448 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,448 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,451 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,452 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,454 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,454 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,454 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,454 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:24:56,455 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,455 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,455 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:56,458 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,458 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:56,458 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:24:56,459 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,459 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,459 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,460 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,461 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,463 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,463 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,463 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,463 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:24:56,463 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,464 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,464 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:56,485 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,485 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:56,486 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:24:56,486 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,486 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,486 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,487 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,490 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,493 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,493 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,493 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,493 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:24:56,493 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,494 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,494 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:24:56,517 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,518 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:56,518 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:24:56,519 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,520 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,520 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,522 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,524 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,529 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,529 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,530 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,530 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:24:56,530 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,530 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,530 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:24:56,534 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,534 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:56,534 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:24:56,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,535 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,535 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,536 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,538 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,540 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,540 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,541 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,541 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:24:56,541 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,541 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,541 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:56,563 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,563 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:56,563 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:24:56,564 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,564 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,564 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,566 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,567 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,570 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,571 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,571 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,571 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:24:56,571 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,571 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,572 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:56,593 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,593 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:24:56,593 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:24:56,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,594 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:24:56,594 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,595 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,596 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,599 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:24:56,623 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a1",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:24:56,623 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:24:56,623 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为1】
INFO - 2025-06-12 21:24:56,623 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:24:56,624 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:24:56,624 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:24:56,796 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,798 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,800 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,800 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,800 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,800 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:24:56,800 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,801 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,801 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:24:56,823 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": true,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:24:56,824 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:24:56,824 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,824 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,824 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,825 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:24:56,825 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:24:56,825 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:24:56,826 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,829 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,831 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:24:56,838 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "49XzKNAS1z4KRhzCrebn";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2667091308416">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2667091309280">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2667091307408">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2667091309568">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2667091309712">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2667091309856">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2667091310000">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:24:56,838 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:24:56,838 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:24:56,838 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:24:56,871 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:24:56,872 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:24:56,874 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:24:56,874 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:24:56,874 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:24:56,874 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:24:56,874 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': '36c67230-5a62-49dd-be5c-f09f24f99326'}
INFO - 2025-06-12 21:24:56,874 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:24:56,875 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:24:56,901 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:24:56,901 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:24:56,902 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:24:56,902 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:24:56,902 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:24:56,902 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:24:56,902 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:24:56,903 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:24:56,903 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:24:56,913 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,246 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:25:45,246 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:25:45,246 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:25:45,247 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:25:45,247 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:25:45,247 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,247 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:25:45,284 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a805d606-78c5-4353-8833-1c3b6e026ff7","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:25:45,285 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:25:45,286 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:25:45,286 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:25:45,286 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,286 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,289 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:25:45,316 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:25:45,317 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:25:45,317 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,317 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,317 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,318 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:25:45,318 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,319 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,321 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,323 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:25:45,341 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:25:45,341 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:25:45,341 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,341 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,342 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,342 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,343 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,344 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,347 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,347 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,347 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,347 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:25:45,347 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,348 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,348 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:25:45,357 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:25:45,357 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:25:45,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,357 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,358 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,358 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,359 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,362 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,364 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,365 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,365 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,365 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:25:45,365 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,365 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,365 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:25:45,390 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:25:45,390 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:25:45,390 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,391 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,392 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:25:45,392 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,396 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,398 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,400 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,400 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,401 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,401 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:25:45,401 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,401 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,401 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:25:45,422 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:25:45,423 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:25:45,424 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,424 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,425 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,425 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:25:45,426 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:25:45,426 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,426 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,427 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,430 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,431 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,433 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,433 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,433 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,433 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:25:45,434 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,434 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,434 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:25:45,471 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:25:45,472 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:25:45,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,472 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:25:45,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:25:45,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,473 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,473 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,475 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,476 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,478 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,479 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,479 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,479 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:25:45,479 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,479 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,479 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:25:45,507 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,507 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:25:45,508 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:25:45,508 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,508 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,509 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,510 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,512 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,514 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,515 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,515 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,515 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:25:45,515 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,516 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,516 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:25:45,538 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,538 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:25:45,539 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:25:45,539 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,539 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,539 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,540 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,541 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,543 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,543 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,543 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,543 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:25:45,543 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,543 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,544 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:25:45,568 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,569 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:25:45,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:25:45,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,569 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,569 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,570 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,571 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,576 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,576 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,576 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,576 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:25:45,576 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,576 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,577 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:25:45,599 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,600 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:25:45,600 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:25:45,600 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,600 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,600 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,601 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,602 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,604 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,604 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,604 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,604 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:25:45,604 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,604 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,605 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:25:45,630 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,630 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:25:45,631 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:25:45,631 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,631 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,631 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,632 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,636 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,638 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,638 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,638 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,639 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:25:45,639 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,639 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,639 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:25:45,661 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,662 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:25:45,662 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:25:45,662 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,662 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:25:45,663 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,664 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,665 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,668 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:25:45,693 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a[{'id': '100030011', 'name': '15321919666', 'portrait': 'https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png', 'phone': '15321919666', 'password': '123456', 'reg_ip': '', 'account_non_expired': '1', 'credentials_non_expired': '1', 'account_non_locked': '1', 'status': 'DISABLE', 'is_del': '0', 'create_time': '10/7/2020', 'update_time': '10/7/2020'}]",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:25:45,693 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:25:45,693 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【页码超出范围，最大页码为2】,实际结果为【页码超出范围，最大页码为[{'id': '100030011', 'name': '15321919666', 'portrait': 'https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png', 'phone': '15321919666', 'password': '123456', 'reg_ip': '', 'account_non_expired': '1', 'credentials_non_expired': '1', 'account_non_locked': '1', 'status': 'DISABLE', 'is_del': '0', 'create_time': '10/7/2020', 'update_time': '10/7/2020'}]】
INFO - 2025-06-12 21:25:45,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:25:45,694 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
ERROR - 2025-06-12 21:25:45,694 - assertions.py:203 -[assertions:assert_result] - 测试失败
INFO - 2025-06-12 21:25:45,859 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,861 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,863 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,863 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,863 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,863 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:25:45,863 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,864 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,864 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:25:45,877 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:25:45,877 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:25:45,877 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,878 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,878 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,878 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:25:45,878 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:25:45,878 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:25:45,879 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,883 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,885 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,885 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,885 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,885 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:25:45,885 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,885 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,886 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:25:45,892 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "a7nGsoyttT0EhYnF6tOx";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2249417469968">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2249417470688">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2249417470832">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2249417470976">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2249417471120">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2249417471264">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2249417471408">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:25:45,892 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:25:45,892 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:25:45,892 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:25:45,919 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:25:45,920 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:25:45,922 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:25:45,922 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:25:45,922 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:25:45,922 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:25:45,923 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a805d606-78c5-4353-8833-1c3b6e026ff7'}
INFO - 2025-06-12 21:25:45,923 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:25:45,923 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:25:45,940 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:25:45,940 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:25:45,940 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:25:45,941 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:25:45,941 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:25:45,942 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:25:45,942 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:25:45,942 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:25:45,943 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:25:45,955 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:19,856 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:29:19,856 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:29:19,856 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:29:19,856 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:29:19,857 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:29:19,857 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:19,857 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:29:19,882 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"d55b81a1-69a2-4cce-a7d0-69d6697d726f","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:29:19,883 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:29:19,884 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:29:19,884 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:29:19,884 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:19,884 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:19,886 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:19,887 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:19,887 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:19,887 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:29:19,887 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:19,887 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:19,887 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:29:19,900 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:29:19,900 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:29:19,900 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:19,901 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:19,901 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:19,901 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:29:19,901 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:19,902 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:19,919 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:19,923 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:19,923 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:19,924 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:19,924 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:29:19,924 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:19,924 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:19,925 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:29:19,938 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:29:19,938 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:29:19,939 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:19,939 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:19,939 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:19,939 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:19,940 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:19,948 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:19,950 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:19,950 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:19,951 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:19,951 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:29:19,951 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:19,951 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:19,951 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:29:19,970 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:29:19,970 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:29:19,971 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:19,971 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:19,971 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:19,972 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:19,974 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:19,979 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:19,982 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:19,983 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:19,983 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:19,983 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:29:19,983 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:19,983 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:19,983 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:29:20,025 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:29:20,026 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:29:20,027 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:20,027 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:20,028 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,029 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:29:20,029 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,041 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,044 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,049 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,049 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,050 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,050 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:29:20,050 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,050 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,050 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10}}
INFO - 2025-06-12 21:29:20,079 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":2,"orderBy":null,"startRow":11,"endRow":12,"total":12,"pages":2,"list":[{"id":100030022,"name":"15811111122","portrait":null,"phone":"15811111122","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594633432000,"updateTime":null},{"id":100030026,"name":"15588886666","portrait":null,"phone":"15588886666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1598261004000,"updateTime":null}],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":2,"isFirstPage":false,"isLastPage":true,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:29:20,080 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}]
INFO - 2025-06-12 21:29:20,080 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:20,081 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:20,081 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,082 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:29:20,082 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:29:20,083 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,083 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,083 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,086 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,087 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,090 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,090 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,090 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,091 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:29:20,091 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,091 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,091 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:29:20,126 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:29:20,127 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:29:20,128 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:20,128 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:20,129 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,130 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:29:20,131 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:29:20,131 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,132 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,132 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,148 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,152 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,158 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,158 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,158 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,158 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:29:20,159 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,159 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,159 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:29:20,183 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,184 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,184 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:29:20,185 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,185 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,185 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,187 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,193 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,197 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,198 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,198 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,198 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:29:20,198 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,199 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,199 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:29:20,227 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,228 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,228 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:29:20,228 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,229 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,229 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,230 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,240 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,244 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,244 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,244 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,245 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:29:20,245 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,245 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,245 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:29:20,247 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,248 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,248 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:29:20,248 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,248 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,248 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,249 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,256 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,258 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,259 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,259 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,259 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:29:20,259 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,259 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,259 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:29:20,272 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,272 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,272 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:29:20,273 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,273 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,273 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,274 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,286 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,289 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,290 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,290 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,290 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:29:20,290 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,290 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,290 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:29:20,303 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,304 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,304 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:29:20,304 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,304 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,304 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,305 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,317 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,320 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,320 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,320 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,321 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:29:20,321 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,321 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,321 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:29:20,334 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,334 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,334 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:29:20,334 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,335 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,335 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,336 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,348 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,350 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,350 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,350 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,350 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:29:20,350 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,350 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,351 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 21:29:20,365 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:29:20,365 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:29:20,365 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 21:29:20,366 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:29:20,366 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:29:20,366 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,367 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,379 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,383 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,384 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,384 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,384 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:29:20,384 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,384 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,384 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:29:20,411 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": true,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:29:20,412 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:29:20,413 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:20,413 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:20,413 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,413 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:29:20,413 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:29:20,414 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:29:20,415 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,426 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,429 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,430 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,430 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,430 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:29:20,430 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,430 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,430 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:29:20,464 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "9nc3ioTPulHJrvTW1nT3";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2114382049872">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2114382049728">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2114382049584">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2114382050448">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2114382050304">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2114382050592">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2114382050736">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:29:20,464 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:29:20,464 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:29:20,464 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:29:20,670 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:29:20,671 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:29:20,674 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:29:20,674 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:29:20,674 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:29:20,674 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:29:20,675 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'd55b81a1-69a2-4cce-a7d0-69d6697d726f'}
INFO - 2025-06-12 21:29:20,675 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:29:20,675 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:29:20,678 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:29:20,678 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:29:20,678 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:29:20,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:29:20,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:29:20,679 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:29:20,680 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:29:20,680 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:29:20,680 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:29:20,716 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,281 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：用户登录
INFO - 2025-06-12 21:30:55,281 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/login
INFO - 2025-06-12 21:30:55,282 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：POST
INFO - 2025-06-12 21:30:55,282 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：登录成功
INFO - 2025-06-12 21:30:55,282 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：None
INFO - 2025-06-12 21:30:55,282 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,283 - sendrequest.py:157 -[sendrequest:run_main] - 请求参数：{'params': {'phone': '15321919666', 'password': '123456'}}
INFO - 2025-06-12 21:30:55,304 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":1,"message":"响应成功","content":{"access_token":"a0b5437e-0db6-4bdd-85a2-b4638729578a","user_id":100030011,"user":{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":1594347555000}}}
INFO - 2025-06-12 21:30:55,306 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}]
INFO - 2025-06-12 21:30:55,306 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
ERROR - 2025-06-12 21:30:55,307 - assertions.py:39 -[assertions:contains_assert] - 接口返回码包含断言成功：预期结果【200】,实际结果【200】
INFO - 2025-06-12 21:30:55,307 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,307 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,309 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,310 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,310 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,310 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：1.正常搜索-按用户名
INFO - 2025-06-12 21:30:55,310 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,310 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,310 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:30:55,335 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":1,"orderBy":null,"startRow":1,"endRow":1,"total":1,"pages":1,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":0,"lastPage":1,"isFirstPage":true,"isLastPage":true,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:30:55,335 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list[0].name': '15321919666'}}]
INFO - 2025-06-12 21:30:55,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,336 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【15321919666】,实际结果【15321919666】
INFO - 2025-06-12 21:30:55,336 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,337 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,342 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,344 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,344 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,344 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,345 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：2.正常搜索-按时间范围
INFO - 2025-06-12 21:30:55,345 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,345 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,345 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:30:55,365 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:30:55,365 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:30:55,365 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,365 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,366 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,366 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,367 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,371 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：3.正常搜索-组合条件
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,373 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': '15321919666', 'startCreateTime': '2025-01-01', 'endCreateTime': '2025-06-02'}}
INFO - 2025-06-12 21:30:55,400 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":0,"pages":0,"list":[],"firstPage":0,"prePage":0,"nextPage":0,"lastPage":0,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[]}}
INFO - 2025-06-12 21:30:55,400 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}]
INFO - 2025-06-12 21:30:55,400 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,401 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,401 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,401 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,402 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,404 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,405 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,406 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,406 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,406 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.正常搜索-手机号和时间均为空
INFO - 2025-06-12 21:30:55,406 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,406 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,406 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:30:55,440 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":10,"size":10,"orderBy":null,"startRow":1,"endRow":10,"total":12,"pages":2,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null},{"id":100030016,"name":"15588886644","portrait":null,"phone":"15588886644","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351436000,"updateTime":null},{"id":100030018,"name":"15588886123","portrait":null,"phone":"15588886123","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354655000,"updateTime":null},{"id":100030019,"name":"15588886234","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png","phone":"15588886234","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594354816000,"updateTime":null},{"id":100030020,"name":"18211111111","portrait":null,"phone":"18211111111","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594360661000,"updateTime":null},{"id":100030021,"name":"15811112222","portrait":null,"phone":"15811112222","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594611320000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":2,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2]}}
INFO - 2025-06-12 21:30:55,440 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.total': 12}}]
INFO - 2025-06-12 21:30:55,441 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,441 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,441 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,442 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【12】,实际结果【[12]】
INFO - 2025-06-12 21:30:55,442 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,443 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,444 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,446 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,446 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,446 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,446 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：4.分页查询-第二页
INFO - 2025-06-12 21:30:55,447 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,447 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,447 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}}
INFO - 2025-06-12 21:30:55,476 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":2,"pageSize":10,"size":0,"orderBy":null,"startRow":0,"endRow":0,"total":1,"pages":1,"list":[],"firstPage":1,"prePage":1,"nextPage":0,"lastPage":1,"isFirstPage":false,"isLastPage":false,"hasPreviousPage":true,"hasNextPage":false,"navigatePages":8,"navigatepageNums":[1]}}
INFO - 2025-06-12 21:30:55,476 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}, {'contains': {'content.list[0].name': '15588886234'}}]
INFO - 2025-06-12 21:30:55,477 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,477 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,477 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,477 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【2】,实际结果【[2]】
INFO - 2025-06-12 21:30:55,477 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【10】,实际结果【[10]】
INFO - 2025-06-12 21:30:55,478 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,478 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
ERROR - 2025-06-12 21:30:55,478 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:30:55,647 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,648 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,650 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,650 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://192.168.63.200:8080/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,650 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,650 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：5.分页查询-每页5条
INFO - 2025-06-12 21:30:55,650 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,650 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,651 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 5}}
INFO - 2025-06-12 21:30:55,659 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{"success":true,"state":200,"message":"响应成功","content":{"pageNum":1,"pageSize":5,"size":5,"orderBy":null,"startRow":1,"endRow":5,"total":12,"pages":3,"list":[{"id":100030011,"name":"15321919666","portrait":"https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png","phone":"15321919666","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594347555000,"updateTime":null},{"id":100030012,"name":"15588886623","portrait":null,"phone":"15588886623","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594348981000,"updateTime":null},{"id":100030013,"name":"15588886665","portrait":null,"phone":"15588886665","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"DISABLE","is_del":null,"createTime":1594350551000,"updateTime":null},{"id":100030014,"name":"15588886664","portrait":null,"phone":"15588886664","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594350626000,"updateTime":null},{"id":100030015,"name":"15588886663","portrait":null,"phone":"15588886663","password":"123456","reg_ip":null,"account_non_expired":null,"credentials_non_expired":null,"account_non_locked":null,"status":"ENABLE","is_del":null,"createTime":1594351310000,"updateTime":null}],"firstPage":1,"prePage":0,"nextPage":2,"lastPage":3,"isFirstPage":true,"isLastPage":false,"hasPreviousPage":false,"hasNextPage":true,"navigatePages":8,"navigatepageNums":[1,2,3]}}
INFO - 2025-06-12 21:30:55,660 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageSize': 5}}, {'contains': {'content.size': 5}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': False}}]
INFO - 2025-06-12 21:30:55,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,660 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,661 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:30:55,661 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【5】,实际结果【[5]】
INFO - 2025-06-12 21:30:55,661 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,662 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,662 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,666 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,667 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,668 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,669 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,669 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,669 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：6.缺少必填参数currentPage
INFO - 2025-06-12 21:30:55,669 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,669 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,669 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:30:55,688 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570currentPage",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,688 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数currentPage'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,689 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数currentPage】,实际结果【缺少必填参数currentPage】
INFO - 2025-06-12 21:30:55,689 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,689 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,689 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,690 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,695 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,698 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,698 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,698 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,698 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：7.缺少必填参数pageSize
INFO - 2025-06-12 21:30:55,699 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,699 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,699 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'username': '15321919666'}}
INFO - 2025-06-12 21:30:55,701 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u7f3a\u5c11\u5fc5\u586b\u53c2\u6570pageSize",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,701 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '缺少必填参数pageSize'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,702 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【缺少必填参数pageSize】,实际结果【缺少必填参数pageSize】
INFO - 2025-06-12 21:30:55,702 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,702 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,702 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,703 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,708 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,710 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,710 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,710 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,710 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：8.请求参数为空
INFO - 2025-06-12 21:30:55,711 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,711 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,711 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': 'null'}
INFO - 2025-06-12 21:30:55,735 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u8bf7\u6c42\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,736 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '请求参数不能为空'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,736 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【请求参数不能为空】,实际结果【请求参数不能为空】
INFO - 2025-06-12 21:30:55,736 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,737 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,737 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,738 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,740 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,744 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,744 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,744 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,744 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：9.参数类型错误
INFO - 2025-06-12 21:30:55,744 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,744 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,745 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 'abc', 'pageSize': 'def', 'username': 123}}
INFO - 2025-06-12 21:30:55,766 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u53c2\u6570\u7c7b\u578b\u9519\u8bef\uff0ccurrentPage\u548cpageSize\u5fc5\u987b\u4e3a\u6574\u6570",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,766 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '参数类型错误，currentPage和pageSize必须为整数'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,766 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【参数类型错误，currentPage和pageSize必须为整数】,实际结果【参数类型错误，currentPage和pageSize必须为整数】
INFO - 2025-06-12 21:30:55,766 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,767 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,767 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,768 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,769 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,771 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,771 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,771 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,771 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：10.页码小于1
INFO - 2025-06-12 21:30:55,772 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,772 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,772 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 0, 'pageSize': 10, 'username': '15321919666'}}
INFO - 2025-06-12 21:30:55,797 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u5fc5\u987b\u5927\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,797 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码必须大于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,797 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码必须大于0】,实际结果【页码必须大于0】
INFO - 2025-06-12 21:30:55,797 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,797 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,797 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,799 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,800 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：11.每页条数小于0
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,802 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': -1, 'username': '15321919666'}}
INFO - 2025-06-12 21:30:55,827 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u6bcf\u9875\u6761\u6570\u4e0d\u80fd\u5c0f\u4e8e0",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,828 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '每页条数不能小于0'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【每页条数不能小于0】,实际结果【每页条数不能小于0】
INFO - 2025-06-12 21:30:55,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,828 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,828 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,829 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,833 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：12.页码超出范围
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,836 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 999, 'pageSize': 10}}
INFO - 2025-06-12 21:30:55,858 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "message": "\u9875\u7801\u8d85\u51fa\u8303\u56f4\uff0c\u6700\u5927\u9875\u7801\u4e3a2",
  "state": 400,
  "success": false
}

INFO - 2025-06-12 21:30:55,858 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '页码超出范围，最大页码为2'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
INFO - 2025-06-12 21:30:55,858 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【页码超出范围，最大页码为2】,实际结果【页码超出范围，最大页码为2】
INFO - 2025-06-12 21:30:55,859 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【400】,实际结果【[400]】
INFO - 2025-06-12 21:30:55,859 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【False】,实际结果【[False]】
INFO - 2025-06-12 21:30:55,859 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,860 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,862 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,864 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,864 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,865 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,865 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：13.搜索不存在的用户
INFO - 2025-06-12 21:30:55,865 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,865 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,865 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'username': 'not_exist_user'}}
INFO - 2025-06-12 21:30:55,889 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": false,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": true,
    "list": [],
    "nextPage": 0,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 0,
    "total": 0
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:30:55,889 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.list': []}}, {'contains': {'content.total': 0}}]
INFO - 2025-06-12 21:30:55,889 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:55,890 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:55,890 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:55,890 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【[]】,实际结果【[[]]】
INFO - 2025-06-12 21:30:55,890 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
INFO - 2025-06-12 21:30:55,890 - assertions.py:200 -[assertions:assert_result] - 测试成功
INFO - 2025-06-12 21:30:55,891 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,896 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,898 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,898 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,899 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,899 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：14.时间范围格式错误
INFO - 2025-06-12 21:30:55,899 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,899 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,899 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10, 'startCreateTime': '2025-13-01', 'endCreateTime': '2025-12-31'}}
INFO - 2025-06-12 21:30:55,926 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：<!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "9nc3ioTPulHJrvTW1nT3";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>AttributeError</h1>
<div class="detail">
  <p class="errormsg">AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2114383140544">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1536</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2114383139968">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1514</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2114383140832">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1511</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2114383140112">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">919</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2114383141120">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">917</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2114383141264">
  <h4>File <cite class="filename">"C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">902</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2114383141408">
  <h4>File <cite class="filename">"C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py"</cite>,
      line <em class="line">198</em>,
      in <code class="function">find_all_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># 验证时间格式</pre>
<pre class="line before"><span class="ws">    </span>if start_create_time or end_create_time:</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>if start_create_time:</pre>
<pre class="line current"><span class="ws">                </span>datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>if end_create_time:</pre>
<pre class="line after"><span class="ws">                </span>datetime.strptime(end_create_time, &#39;%Y-%m-%d&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except ValueError:</pre>
<pre class="line after"><span class="ws">            </span>return jsonify({</pre>
<pre class="line after"><span class="ws">                </span>&#39;message&#39;: &#39;时间格式错误，正确格式为：YYYY-MM-DD&#39;,</pre></div>
</div>
</ul>
  <blockquote>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py&#34;, line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py&#34;, line 198, in find_all_users
    datetime.strptime(start_create_time, &#39;%Y-%m-%d&#39;)
AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1536, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\Pyproject\testProject\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\tocode\Project\cursor\Test_API_Framework\mock_server\api_server\base\flask_service.py", line 198, in find_all_users
    datetime.strptime(start_create_time, '%Y-%m-%d')
AttributeError: module 'datetime' has no attribute 'strptime'


-->

ERROR - 2025-06-12 21:30:55,926 - apiutil.py:169 -[apiutil:specification_yaml] - 响应非JSON格式，解析失败: Expecting value: line 1 column 1 (char 0)，原始内容: <!doctype html>
<html lang=en>
  <head>
    <title>AttributeError: module &#39;datetime&#39; has no attribute &#39;strptime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debug...
INFO - 2025-06-12 21:30:55,927 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '时间格式错误，正确格式为：YYYY-MM-DD'}}, {'contains': {'state': 400}}, {'contains': {'success': False}}]
ERROR - 2025-06-12 21:30:55,927 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:30:55,985 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
INFO - 2025-06-12 21:30:55,987 - conftest.py:21 -[conftest:start_test_and_end] - -------------接口测试开始--------------
INFO - 2025-06-12 21:30:55,989 - sendrequest.py:142 -[sendrequest:run_main] - 接口名称：搜索用户
INFO - 2025-06-12 21:30:55,989 - sendrequest.py:143 -[sendrequest:run_main] - 请求地址：http://127.0.0.1:8787/ssm_web/user/findAllUserByPage
INFO - 2025-06-12 21:30:55,989 - sendrequest.py:144 -[sendrequest:run_main] - 请求方式：post
INFO - 2025-06-12 21:30:55,989 - sendrequest.py:145 -[sendrequest:run_main] - 测试用例名称：15.验证分页信息完整性
INFO - 2025-06-12 21:30:55,989 - sendrequest.py:146 -[sendrequest:run_main] - 请求头：{'Content-Type': 'application/json', 'Authorization': 'a0b5437e-0db6-4bdd-85a2-b4638729578a'}
INFO - 2025-06-12 21:30:55,990 - sendrequest.py:147 -[sendrequest:run_main] - Cookie：None
INFO - 2025-06-12 21:30:55,990 - sendrequest.py:154 -[sendrequest:run_main] - 请求参数：{'json': {'currentPage': 1, 'pageSize': 10}}
INFO - 2025-06-12 21:30:56,012 - sendrequest.py:108 -[sendrequest:send_request] - 接口返回信息：{
  "content": {
    "firstPage": 1,
    "hasNextPage": true,
    "hasPreviousPage": false,
    "isFirstPage": true,
    "isLastPage": false,
    "list": [
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030011",
        "is_del": "0",
        "name": "15321919666",
        "password": "123456",
        "phone": "15321919666",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/06/28/15933251448762927.png",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030012",
        "is_del": "0",
        "name": "15588886623",
        "password": "123456",
        "phone": "15588886623",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030013",
        "is_del": "0",
        "name": "15588886665",
        "password": "123456",
        "phone": "15588886665",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030014",
        "is_del": "0",
        "name": "15588886664",
        "password": "123456",
        "phone": "15588886664",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030015",
        "is_del": "0",
        "name": "15588886663",
        "password": "123456",
        "phone": "15588886663",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030016",
        "is_del": "0",
        "name": "15588886644",
        "password": "123456",
        "phone": "15588886644",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030017",
        "is_del": "1",
        "name": "15811111111",
        "password": "123456",
        "phone": "15811111111",
        "portrait": "",
        "reg_ip": "",
        "status": "DISABLE",
        "update_time": "13/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030018",
        "is_del": "0",
        "name": "15588886123",
        "password": "123456",
        "phone": "15588886123",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030019",
        "is_del": "0",
        "name": "15588886234",
        "password": "123456",
        "phone": "15588886234",
        "portrait": "https://edu-lagou.oss-cn-beijing.aliyuncs.com/images/2020/07/10/15943594999396473.png",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      },
      {
        "account_non_expired": "1",
        "account_non_locked": "1",
        "create_time": "10/7/2020",
        "credentials_non_expired": "1",
        "id": "100030020",
        "is_del": "0",
        "name": "18211111111",
        "password": "123456",
        "phone": "18211111111",
        "portrait": "",
        "reg_ip": "",
        "status": "ENABLE",
        "update_time": "10/7/2020"
      }
    ],
    "nextPage": 2,
    "pageNum": 1,
    "pageSize": 10,
    "prePage": 0,
    "size": 10,
    "total": 13
  },
  "message": "\u54cd\u5e94\u6210\u529f",
  "state": 200,
  "success": true
}

INFO - 2025-06-12 21:30:56,012 - assertions.py:172 -[assertions:assert_result] - yaml文件预期结果：[{'contains': {'message': '响应成功'}}, {'contains': {'state': 200}}, {'contains': {'success': True}}, {'contains': {'content.firstPage': 1}}, {'contains': {'content.prePage': 0}}, {'contains': {'content.nextPage': 0}}, {'contains': {'content.lastPage': 1}}, {'contains': {'content.isFirstPage': True}}, {'contains': {'content.isLastPage': True}}, {'contains': {'content.hasPreviousPage': False}}, {'contains': {'content.hasNextPage': False}}, {'contains': {'content.navigatePages': 8}}, {'contains': {'content.navigatepageNums': [1]}}]
INFO - 2025-06-12 21:30:56,013 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【响应成功】,实际结果【响应成功】
INFO - 2025-06-12 21:30:56,013 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【200】,实际结果【[200]】
INFO - 2025-06-12 21:30:56,013 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【True】,实际结果【[True]】
INFO - 2025-06-12 21:30:56,014 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【1】,实际结果【[1]】
INFO - 2025-06-12 21:30:56,014 - assertions.py:47 -[assertions:contains_assert] - 响应文本断言成功：预期结果【0】,实际结果【[0]】
ERROR - 2025-06-12 21:30:56,015 - assertions.py:52 -[assertions:contains_assert] - 响应文本断言失败：预期结果为【0】,实际结果为【[2]】
ERROR - 2025-06-12 21:30:56,015 - assertions.py:196 -[assertions:assert_result] - 接口断言异常，请检查yaml预期结果值是否正确填写!
INFO - 2025-06-12 21:30:56,025 - conftest.py:23 -[conftest:start_test_and_end] - -------------接口测试结束--------------
