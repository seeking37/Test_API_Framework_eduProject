{"name": "5.分页查询-第二页", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.Single.UserManagement.test_user_find.TestUserManager object at 0x000002333B7F99D0>\nbase_info = {'api_name': '搜索用户', 'header': {'Authorization': '${get_extract_data(authorization)}', 'Content-Type': 'application/json'}, 'method': 'post', 'url': '/ssm_web/user/findAllUserByPage'}\ntestcase = {'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}}\n\n    @allure.story(next(c_id) + \"搜索用户\")\n    @pytest.mark.run(order=2)\n    @pytest.mark.parametrize('base_info,testcase', get_testcase_yaml(\"./testcase/Single/UserManagement/user_search_data.yaml\"))\n    def test_search_user(self, base_info, testcase):\n        allure.dynamic.title(testcase['case_name'])\n>       RequestBase().specification_yaml(base_info, testcase)\n\ntestcase\\Single\\UserManagement\\test_user_find.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\apiutil.py:186: in specification_yaml\n    raise e\nbase\\apiutil.py:165: in specification_yaml\n    self.asserts.assert_result(validation, res_json, status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.assertions.Assertions object at 0x000002333B806390>\nexpected = [{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, ...]\nresponse = {'content': {'endRow': 0, 'firstPage': 1, 'hasNextPage': False, 'hasPreviousPage': True, ...}, 'message': '响应成功', 'state': 200, 'success': True}, status_code = 200\n\n    def assert_result(self, expected, response, status_code):\n        \"\"\"\n        断言，通过断言all_flag标记，all_flag==0表示测试通过，否则为失败\n        :param expected: 预期结果\n        :param response: 实际响应结果\n        :param status_code: 响应code码\n        :return:\n        \"\"\"\n        all_flag = 0\n        try:\n            logs.info(\"yaml文件预期结果：%s\" % expected)\n            # logs.info(\"实际结果：%s\" % response)\n            # all_flag = 0\n            for yq in expected:\n                for key, value in yq.items():\n                    if key == \"contains\":\n                        flag = self.contains_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == \"eq\":\n                        flag = self.equal_assert(value, response)\n                        all_flag = all_flag + flag\n                    elif key == 'ne':\n                        flag = self.not_equal_assert(value, response)\n                        all_flag = all_flag + flag\n                    elif key == 'rv':\n                        flag = self.assert_response_any(actual_results=response, expected_results=value)\n                        all_flag = all_flag + flag\n                    elif key == 'db':\n                        flag = self.mysql_assert(value)\n                        all_flag = all_flag + flag\n                    elif key == 'eq_db':\n                        flag = self.equal_mysql_assert(value)\n                        all_flag = all_flag + flag\n                    else:\n                        logs.error(\"不支持此种断言方式\")\n    \n        except Exception as exceptions:\n            logs.error('接口断言异常，请检查yaml预期结果值是否正确填写!')\n            raise exceptions\n    \n        if all_flag == 0:\n            logs.info(\"测试成功\")\n            assert True\n        else:\n            logs.error(\"测试失败\")\n>           assert False\nE           AssertionError\n\ncommon\\assertions.py:343: AssertionError"}, "attachments": [{"name": "接口名称：搜索用户", "source": "d416296f-2d77-4ece-bf61-2e289449ddd3-attachment.txt", "type": "text/plain"}, {"name": "接口地址：http://47.113.145.175:8080/ssm_web/user/findAllUserByPage", "source": "63ba4246-b593-478b-a910-3c8a4d97bcb9-attachment.txt", "type": "text/plain"}, {"name": "请求方法：post", "source": "01ecf70a-5341-4341-ab93-f5ac380643cc-attachment.txt", "type": "text/plain"}, {"name": "请求头：{'Content-Type': 'application/json', 'Authorization': 'e30bb109-1bcb-4762-914d-7010d331cc01'}", "source": "1678436f-7cd7-42e3-8f90-1fe232c4d1c7-attachment.txt", "type": "text/plain"}, {"name": "测试用例名称：5.分页查询-第二页", "source": "c86a84ee-bb4c-4223-b2ec-1aea94656ba7-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "79437a5f-9a2a-4346-b88e-be650d5117f4-attachment.txt", "type": "text/plain"}, {"name": "接口响应信息", "source": "dabb3f3b-c082-41c9-b03f-9105daf8ac11-attachment.txt", "type": "text/plain"}, {"name": "JSONPath匹配失败", "source": "1d1df139-5f36-43d8-bf97-9f6739ecabbb-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "c58c3130-953d-4dc4-9444-c3655ef3a19c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "87d41f90-e642-4b50-aa8d-d22842ce76c9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_info", "value": "{'api_name': '搜索用户', 'url': '/ssm_web/user/findAllUserByPage', 'method': 'post', 'header': {'Content-Type': 'application/json', 'Authorization': '${get_extract_data(authorization)}'}}"}, {"name": "testcase", "value": "{'case_name': '5.分页查询-第二页', 'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}, 'validation': [{'contains': {'message': '响应成功'}}, {'contains': {'status_code': 200}}, {'contains': {'success': True}}, {'contains': {'content.pageNum': 2}}, {'contains': {'content.pageSize': 10}}, {'contains': {'content.isFirstPage': False}}, {'contains': {'content.hasPreviousPage': True}}, {'contains': {'content.list[0].name': '15588886234'}}]}"}], "start": 1749892636612, "stop": 1749892636982, "uuid": "4785edfc-e967-40d9-8d92-92390f035e88", "historyId": "b5b153d94f173826c22afd28bb857f6f", "testCaseId": "7b5d79ecfab032320bb421ce405c0a2f", "fullName": "testcase.Single.UserManagement.test_user_find.TestUserManager#test_search_user", "labels": [{"name": "feature", "value": "M03_用户管理"}, {"name": "story", "value": "C04_搜索用户"}, {"name": "tag", "value": "run(order=2)"}, {"name": "parentSuite", "value": "testcase.Single.UserManagement"}, {"name": "suite", "value": "test_user_find"}, {"name": "subSuite", "value": "TestUserManager"}, {"name": "host", "value": "SQG"}, {"name": "thread", "value": "46316-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.Single.UserManagement.test_user_find"}]}