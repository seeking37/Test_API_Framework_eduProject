{"name": "5.分页查询-第二页", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.Single.UserManagement.test_user_find.TestUserManager object at 0x0000020DF9291B80>\nbase_info = {'api_name': '搜索用户', 'header': {'Authorization': '${get_extract_data(authorization)}', 'Content-Type': 'application/json'}, 'method': 'post', 'url': '/ssm_web/user/findAllUserByPage'}\ntestcase = {'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}}\n\n    @allure.story(next(c_id) + \"搜索用户\")\n    @pytest.mark.run(order=3)\n    @pytest.mark.parametrize('base_info,testcase', get_testcase_yaml(\"./testcase/Single/UserManagement/user_search_data.yaml\"))\n    def test_search_user(self, base_info, testcase):\n        allure.dynamic.title(testcase['case_name'])\n>       RequestBase().specification_yaml(base_info, testcase)\n\ntestcase\\Single\\UserManagement\\test_user_find.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\apiutil.py:188: in specification_yaml\n    raise e\nbase\\apiutil.py:167: in specification_yaml\n    self.asserts.assert_result(validation, res_json, status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assertions.Assertions object at 0x0000020DF748BEF0>\nexpected = [{'contains': {'message': '响应成功'}}, {'eq': {'status_code': 200}}, {'eq': {'success': True}}, {'eq': {'content.pageNum': 2}}, {'eq': {'content.pageSize': 10}}, {'eq': {'content.isFirstPage': False}}, ...]\nresponse = {'content': {'endRow': 0, 'firstPage': 1, 'hasNextPage': False, 'hasPreviousPage': True, ...}, 'message': '响应成功', 'state': 200, 'success': True}\nstatus_code = 200\n\n    def assert_result(self, expected, response, status_code):\n        \"\"\"\n        断言，通过断言all_flag标记，all_flag==0表示测试通过，否则为失败\n        :param expected: 预期结果\n        :param response: 实际响应结果\n        :param status_code: 响应code码\n        :return:\n        \"\"\"\n        all_flag = 0\n        try:\n            logs.info(\"yaml文件预期结果：%s\" % expected)\n            # logs.info(\"实际结果：%s\" % response)\n            # all_flag = 0\n            for yq in expected:\n                for key, value in yq.items():\n                    if key == \"contains\":\n                        flag = self.contains_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == \"eq\":\n                        flag = self.equal_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == 'ne':\n                        flag = self.not_equal_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == 'rv':\n                        flag = self.assert_response_any(actual_results=response, expected_results=value)\n                        all_flag = all_flag + flag\n                    elif key == 'eq_db':\n                        flag = self.equal_mysql_assert(value)\n                        all_flag = all_flag + flag\n                    else:\n                        logs.error(\"不支持此种断言方式\")\n    \n        except Exception as exceptions:\n            logs.error('接口断言异常，请检查yaml预期结果值是否正确填写!')\n            raise exceptions\n    \n        if all_flag == 0:\n            logs.info(\"测试成功\")\n            assert True\n        else:\n            logs.error(\"测试失败\")\n>           assert False\nE           AssertionError\n\ncommon\\assertions.py:330: AssertionError"}, "attachments": [{"name": "接口名称：搜索用户", "source": "f15db8aa-0808-419e-ad90-53d32611dae2-attachment.txt", "type": "text/plain"}, {"name": "接口地址：http://47.113.145.175:8080/ssm_web/user/findAllUserByPage", "source": "47750f6b-d8f8-4d73-933c-57d99d65c0c3-attachment.txt", "type": "text/plain"}, {"name": "请求方法：post", "source": "c56fef0a-be67-4f91-91a9-49b6c9957322-attachment.txt", "type": "text/plain"}, {"name": "请求头：{'Content-Type': 'application/json', 'Authorization': 'None'}", "source": "36abcc00-3371-4e09-9ad5-21e013cd4e41-attachment.txt", "type": "text/plain"}, {"name": "测试用例名称：5.分页查询-第二页", "source": "feef5c32-3c9c-4cda-ba47-5e8dcaa24e0d-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "0bb49c0a-f100-4b5e-9d0c-7fd9702e84ac-attachment.txt", "type": "text/plain"}, {"name": "接口响应信息", "source": "80538dd9-a47e-48d4-9c69-ff2b6fb234a6-attachment.txt", "type": "text/plain"}, {"name": "响应文本断言结果：成功", "source": "1341711d-e2b1-46cd-ad39-7783e0e39a57-attachment.txt", "type": "text/plain"}, {"name": "响应代码断言结果:成功", "source": "b47c8b5d-71bb-4fc7-a82e-0b62027848da-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "106b1455-97cb-418c-832c-da197e38aed2-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "9bf0b811-a7a0-41e4-855c-213ec2f742c0-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "2b08b7f5-4ce9-4a80-96ac-be6ac282fa4a-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "cf1edc96-21dd-4e34-a5de-b3002b703742-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "d3238e44-efdd-41f9-ab74-c8317741e1af-attachment.txt", "type": "text/plain"}, {"name": "相等断言失败", "source": "2dfc9cb7-1da9-4386-b11f-4dc52077b971-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "bc449f25-5959-42a6-b026-6cdd87d8c30b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_info", "value": "{'api_name': '搜索用户', 'url': '/ssm_web/user/findAllUserByPage', 'method': 'post', 'header': {'Content-Type': 'application/json', 'Authorization': '${get_extract_data(authorization)}'}}"}, {"name": "testcase", "value": "{'case_name': '5.分页查询-第二页', 'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}, 'validation': [{'contains': {'message': '响应成功'}}, {'eq': {'status_code': 200}}, {'eq': {'success': True}}, {'eq': {'content.pageNum': 2}}, {'eq': {'content.pageSize': 10}}, {'eq': {'content.isFirstPage': False}}, {'eq': {'content.hasPreviousPage': True}}, {'eq': {'content.list[0].name': '15588886234'}}]}"}], "start": 1749971005620, "stop": 1749971005716, "uuid": "e7ab93dd-da5c-4c0f-a1b3-8a43ff3994df", "historyId": "b5b153d94f173826c22afd28bb857f6f", "testCaseId": "7b5d79ecfab032320bb421ce405c0a2f", "fullName": "testcase.Single.UserManagement.test_user_find.TestUserManager#test_search_user", "labels": [{"name": "story", "value": "C04_搜索用户"}, {"name": "feature", "value": "M03_用户管理"}, {"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "testcase.Single.UserManagement"}, {"name": "suite", "value": "test_user_find"}, {"name": "subSuite", "value": "TestUserManager"}, {"name": "host", "value": "SQG"}, {"name": "thread", "value": "27516-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.Single.UserManagement.test_user_find"}]}