{"name": "5.分页查询-第二页", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.Single.UserManagement.test_user_find.TestUserManager object at 0x000001C35902E090>\nbase_info = {'api_name': '搜索用户', 'header': {'Authorization': '${get_extract_data(token)}', 'Content-Type': 'application/json'}, 'method': 'post', 'url': '/ssm_web/user/findAllUserByPage'}\ntestcase = {'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}}\n\n    @allure.story(next(c_id) + \"搜索用户\")\n    @pytest.mark.run(order=3)\n    @pytest.mark.parametrize('base_info,testcase', get_testcase_yaml(\"./testcase/Single/UserManagement/user_search_data.yaml\"))\n    def test_search_user(self, base_info, testcase):\n        allure.dynamic.title(testcase['case_name'])\n>       RequestBase().specification_yaml(base_info, testcase)\n\ntestcase\\Single\\UserManagement\\test_user_find.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\apiutil.py:193: in specification_yaml\n    raise e\nbase\\apiutil.py:172: in specification_yaml\n    self.asserts.assert_result(validation, res_json, status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assertions.Assertions object at 0x000001C35927CE60>\nexpected = [{'contains': {'message': '响应成功'}}, {'eq': {'status_code': 200}}, {'eq': {'success': True}}, {'eq': {'content.pageNum': 2}}, {'eq': {'content.pageSize': 10}}, {'eq': {'content.isFirstPage': False}}, ...]\nresponse = {'content': {'endRow': 0, 'firstPage': 1, 'hasNextPage': False, 'hasPreviousPage': True, ...}, 'message': '响应成功', 'state': 200, 'success': True}\nstatus_code = 200\n\n    def assert_result(self, expected, response, status_code):\n        \"\"\"\n        断言，通过断言all_flag标记，all_flag==0表示测试通过，否则为失败\n        :param expected: 预期结果\n        :param response: 实际响应结果\n        :param status_code: 响应code码\n        :return:\n        \"\"\"\n        all_flag = 0\n        try:\n            logs.info(\"yaml文件预期结果：%s\" % expected)\n            # logs.info(\"实际结果：%s\" % response)\n            # all_flag = 0\n            for yq in expected:\n                for key, value in yq.items():\n                    if key == \"contains\":\n                        flag = self.contains_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == \"eq\":\n                        flag = self.equal_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == 'neq':\n                        flag = self.not_equal_assert(value, response, status_code)\n                        all_flag = all_flag + flag\n                    elif key == 'eq_db':\n                        flag = self.equal_mysql_assert(value)\n                        all_flag = all_flag + flag\n                    else:\n                        logs.error(\"不支持此种断言方式\")\n    \n        except Exception as exceptions:\n            logs.error('接口断言异常，请检查yaml预期结果值是否正确填写!')\n            raise exceptions\n    \n        if all_flag == 0:\n            logs.info(\"测试成功\")\n            assert True\n        else:\n            logs.error(\"测试失败\")\n>           assert False\nE           AssertionError\n\ncommon\\assertions.py:326: AssertionError"}, "attachments": [{"name": "接口名称：搜索用户", "source": "8c4186e0-f016-4e8d-9e67-66f8fcc8e6c2-attachment.txt", "type": "text/plain"}, {"name": "接口地址：http://47.115.225.121:8080/ssm_web/user/findAllUserByPage", "source": "5b18456d-3a06-4c8b-866a-10e7c324aeed-attachment.txt", "type": "text/plain"}, {"name": "请求方法：post", "source": "7f80dadc-90c5-4226-a2b3-34199362b6ce-attachment.txt", "type": "text/plain"}, {"name": "请求头：{'Content-Type': 'application/json', 'Authorization': '0fdf0718-3e9a-48cc-bfcf-76549278f91f'}", "source": "14034355-c70e-4f29-b5e6-7bdec200ef02-attachment.txt", "type": "text/plain"}, {"name": "测试用例名称：5.分页查询-第二页", "source": "cf7a2fe4-d477-46ca-a508-eea982fb5c03-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "62c0f8f1-64ff-4bf7-ba68-2ab39c8a49a5-attachment.txt", "type": "text/plain"}, {"name": "接口响应信息", "source": "f1634a56-9d8e-44bc-9176-e962d9564035-attachment.txt", "type": "text/plain"}, {"name": "响应文本断言结果：成功", "source": "4b97f16e-0f5e-4291-8f49-9b0e7cd5725e-attachment.txt", "type": "text/plain"}, {"name": "响应代码断言结果:成功", "source": "5f2bbfe2-1d27-4df8-acd9-a9124fa48a88-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "873b3763-169c-49c3-a1eb-441378defc47-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "e900bf80-d2fa-4bd7-a012-c7f945aa14e7-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "092fdc8f-cd99-44ed-b666-939e73d288dc-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "cd56da73-00e6-4a56-9f5d-be3926b21817-attachment.txt", "type": "text/plain"}, {"name": "相等断言结果：成功", "source": "e557137e-cfcd-426e-9fa8-2be64b8b2dae-attachment.txt", "type": "text/plain"}, {"name": "相等断言失败", "source": "3bbef50f-e9dc-499f-8597-6d43805d8b8a-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "ccd24d47-55c8-4876-977a-00fdb4989be7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_info", "value": "{'api_name': '搜索用户', 'url': '/ssm_web/user/findAllUserByPage', 'method': 'post', 'header': {'Content-Type': 'application/json', 'Authorization': '${get_extract_data(token)}'}}"}, {"name": "testcase", "value": "{'case_name': '5.分页查询-第二页', 'json': {'currentPage': 2, 'pageSize': 10, 'username': '15588886234'}, 'validation': [{'contains': {'message': '响应成功'}}, {'eq': {'status_code': 200}}, {'eq': {'success': True}}, {'eq': {'content.pageNum': 2}}, {'eq': {'content.pageSize': 10}}, {'eq': {'content.isFirstPage': False}}, {'eq': {'content.hasPreviousPage': True}}, {'eq': {'content.list[0].name': '15588886234'}}]}"}], "start": 1750810827758, "stop": 1750810827876, "uuid": "d908cce9-3ab3-4295-b5fc-2dcd283855b4", "historyId": "2ab6530b4a234f8ac390ee00465fcc48", "testCaseId": "7b5d79ecfab032320bb421ce405c0a2f", "fullName": "testcase.Single.UserManagement.test_user_find.TestUserManager#test_search_user", "labels": [{"name": "feature", "value": "M06_用户管理"}, {"name": "story", "value": "C08_搜索用户"}, {"name": "tag", "value": "run(order=3)"}, {"name": "tag", "value": "api_single"}, {"name": "tag", "value": "user_management"}, {"name": "parentSuite", "value": "testcase.Single.UserManagement"}, {"name": "suite", "value": "test_user_find"}, {"name": "subSuite", "value": "TestUserManager"}, {"name": "host", "value": "SQG"}, {"name": "thread", "value": "19160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.Single.UserManagement.test_user_find"}]}